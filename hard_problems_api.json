{
    "problems": [
        {
            "contestId": 1521,
            "index": "E",
            "name": "Nastia and a Beautiful Matrix",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2700,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1521,
            "index": "D",
            "name": "Nastia Plays with a Tree",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "flows",
                "greedy",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1520,
            "index": "E",
            "name": "Arranging The Sheep",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1520,
            "index": "D",
            "name": "Same Differences",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "data structures",
                "hashing",
                "math"
            ]
        },
        {
            "contestId": 1519,
            "index": "E",
            "name": "Off by One",
            "type": "PROGRAMMING",
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "geometry",
                "graphs",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1519,
            "index": "D",
            "name": "Maximum Sum of Products",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "dp",
                "implementation",
                "math",
                "two pointers"
            ]
        },
        {
            "contestId": 1517,
            "index": "E",
            "name": "Group Photo",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "binary search",
                "data structures",
                "implementation",
                "two pointers"
            ]
        },
        {
            "contestId": 1517,
            "index": "D",
            "name": "Explorer Space",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1800,
            "tags": [
                "dp",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 1516,
            "index": "E",
            "name": "Baby Ehab Plays with Permutations",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2500,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1516,
            "index": "D",
            "name": "Cut",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "graphs",
                "number theory",
                "two pointers"
            ]
        },
        {
            "contestId": 1515,
            "index": "E",
            "name": "Phoenix and Computers",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2200,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1515,
            "index": "D",
            "name": "Phoenix and Socks",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1500,
            "tags": [
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1514,
            "index": "E",
            "name": "Baby Ehab's Hyper Apartment",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "binary search",
                "graphs",
                "interactive",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1514,
            "index": "D",
            "name": "Cut and Stick",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1513,
            "index": "E",
            "name": "Cost Equilibrium",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2300,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1513,
            "index": "D",
            "name": "GCD and MST",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dsu",
                "graphs",
                "greedy",
                "number theory",
                "sortings"
            ]
        },
        {
            "contestId": 1512,
            "index": "E",
            "name": "Permutation by Sum",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1512,
            "index": "D",
            "name": "Corrupted Array",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1511,
            "index": "E",
            "name": "Colorings and Dominoes",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "combinatorics",
                "dp",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1511,
            "index": "D",
            "name": "Min Cost String",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "graphs",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 1510,
            "index": "E",
            "name": "Equilibrium Point /\\textbackslash/\\textbackslash",
            "type": "PROGRAMMING",
            "rating": 2700,
            "tags": []
        },
        {
            "contestId": 1510,
            "index": "D",
            "name": "Digits",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1508,
            "index": "E",
            "name": "Tree Calendar",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3100,
            "tags": [
                "brute force",
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1508,
            "index": "D",
            "name": "Swap Pass",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "geometry",
                "sortings"
            ]
        },
        {
            "contestId": 1506,
            "index": "E",
            "name": "Restoring the Permutation",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1506,
            "index": "D",
            "name": "Epic Transformation",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1505,
            "index": "E",
            "name": "Cakewalk",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "*special",
                "greedy",
                "implementation",
                "shortest paths"
            ]
        },
        {
            "contestId": 1505,
            "index": "D",
            "name": "Xenolith? Hippodrome?",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "*special",
                "number theory"
            ]
        },
        {
            "contestId": 1503,
            "index": "E",
            "name": "2-Coloring",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1503,
            "index": "D",
            "name": "Flip the Cards",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2600,
            "tags": [
                "2-sat",
                "constructive algorithms",
                "data structures",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1500,
            "index": "E",
            "name": "Subset Trick",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3300,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        {
            "contestId": 1500,
            "index": "D",
            "name": "Tiles for Bathroom",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "data structures",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1499,
            "index": "E",
            "name": "Chaotic Merge",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "combinatorics",
                "dp",
                "math",
                "strings"
            ]
        },
        {
            "contestId": 1499,
            "index": "D",
            "name": "The Number of Pairs",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1498,
            "index": "E",
            "name": "Two Houses",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "brute force",
                "graphs",
                "greedy",
                "interactive",
                "sortings"
            ]
        },
        {
            "contestId": 1498,
            "index": "D",
            "name": "Bananas in a Microwave",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 1497,
            "index": "D",
            "name": "Genius",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2500,
            "tags": [
                "bitmasks",
                "dp",
                "graphs",
                "number theory"
            ]
        },
        {
            "contestId": 1495,
            "index": "E",
            "name": "Qingshan and Daniel",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "brute force",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1495,
            "index": "D",
            "name": "BFS Trees",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "combinatorics",
                "dfs and similar",
                "graphs",
                "math",
                "shortest paths",
                "trees"
            ]
        },
        {
            "contestId": 1494,
            "index": "E",
            "name": "A-Z Graph",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "graphs",
                "hashing"
            ]
        },
        {
            "contestId": 1494,
            "index": "D",
            "name": "Dogeforces",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "divide and conquer",
                "dsu",
                "greedy",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1493,
            "index": "E",
            "name": "Enormous XOR",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2600,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy",
                "math",
                "strings",
                "two pointers"
            ]
        },
        {
            "contestId": 1493,
            "index": "D",
            "name": "GCD of an Array",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "brute force",
                "data structures",
                "hashing",
                "implementation",
                "math",
                "number theory",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1492,
            "index": "E",
            "name": "Almost Fault-Tolerant Database",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2500,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1492,
            "index": "D",
            "name": "Genius's Gambit",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 1900,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1491,
            "index": "E",
            "name": "Fib-tree",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2400,
            "tags": [
                "brute force",
                "dfs and similar",
                "divide and conquer",
                "number theory",
                "trees"
            ]
        },
        {
            "contestId": 1491,
            "index": "D",
            "name": "Zookeeper and The Infinite Zoo",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1800,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dp",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1490,
            "index": "E",
            "name": "Accidental Victory",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1490,
            "index": "D",
            "name": "Permutation Transformation",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "dfs and similar",
                "divide and conquer",
                "implementation"
            ]
        },
        {
            "contestId": 1488,
            "index": "E",
            "name": "Palindromic Doubles",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "*special",
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 1488,
            "index": "D",
            "name": "Problemsolving Marathon",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "*special",
                "binary search",
                "greedy"
            ]
        },
        {
            "contestId": 1487,
            "index": "E",
            "name": "Cheap Dinner",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "brute force",
                "data structures",
                "graphs",
                "greedy",
                "implementation",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1487,
            "index": "D",
            "name": "Pythagorean Triples",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "binary search",
                "brute force",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1486,
            "index": "E",
            "name": "Paired Payment",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2200,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms",
                "dp",
                "flows",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 1486,
            "index": "D",
            "name": "Max Median",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 1485,
            "index": "E",
            "name": "Move and Swap",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1485,
            "index": "D",
            "name": "Multiples and Power Differences",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "graphs",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1482,
            "index": "E",
            "name": "Skyline Photo",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "data structures",
                "divide and conquer",
                "dp"
            ]
        },
        {
            "contestId": 1482,
            "index": "D",
            "name": "Playlist",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "data structures",
                "dsu",
                "implementation",
                "shortest paths"
            ]
        },
        {
            "contestId": 1481,
            "index": "E",
            "name": "Sorting Books",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "data structures",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1481,
            "index": "D",
            "name": "AB Graph",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "graphs",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1479,
            "index": "E",
            "name": "School Clubs",
            "type": "PROGRAMMING",
            "points": 4000,
            "rating": 3500,
            "tags": [
                "dp",
                "fft",
                "math",
                "number theory",
                "probabilities"
            ]
        },
        {
            "contestId": 1479,
            "index": "D",
            "name": "Odd Mineral Resource",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2900,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force",
                "data structures",
                "probabilities",
                "trees"
            ]
        },
        {
            "contestId": 1477,
            "index": "E",
            "name": "Nezzar and Tournaments",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 3300,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1477,
            "index": "D",
            "name": "Nezzar and Hidden Permutations",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1476,
            "index": "E",
            "name": "Pattern Matching",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "bitmasks",
                "data structures",
                "dfs and similar",
                "graphs",
                "hashing",
                "sortings",
                "strings"
            ]
        },
        {
            "contestId": 1476,
            "index": "D",
            "name": "Journey",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "dp",
                "dsu",
                "implementation"
            ]
        },
        {
            "contestId": 1475,
            "index": "E",
            "name": "Advertising Agency",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "combinatorics",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1475,
            "index": "D",
            "name": "Cleaning the Phone",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "binary search",
                "dp",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1474,
            "index": "E",
            "name": "What Is It?",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1474,
            "index": "D",
            "name": "Cleaning",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1473,
            "index": "E",
            "name": "Minimum Path",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 1473,
            "index": "D",
            "name": "Program",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "data structures",
                "dp",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 1472,
            "index": "E",
            "name": "Correct Placement",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1472,
            "index": "D",
            "name": "Even-Odd Game",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "dp",
                "games",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1470,
            "index": "E",
            "name": "Strange Permutation",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3200,
            "tags": [
                "binary search",
                "combinatorics",
                "data structures",
                "dp",
                "graphs",
                "implementation",
                "two pointers"
            ]
        },
        {
            "contestId": 1470,
            "index": "D",
            "name": "Strange Housing",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graph matchings",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 1469,
            "index": "E",
            "name": "A Bit Similar",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "bitmasks",
                "brute force",
                "hashing",
                "string suffix structures",
                "strings",
                "two pointers"
            ]
        },
        {
            "contestId": 1469,
            "index": "D",
            "name": "Ceil Divisions",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1468,
            "index": "E",
            "name": "Four Segments",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        {
            "contestId": 1468,
            "index": "D",
            "name": "Firecrackers",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "binary search",
                "sortings"
            ]
        },
        {
            "contestId": 1467,
            "index": "E",
            "name": "Distinctive Roots in a Tree",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "data structures",
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 1467,
            "index": "D",
            "name": "Sum of Paths",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2200,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1466,
            "index": "E",
            "name": "Apollo versus Pan",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1800,
            "tags": [
                "bitmasks",
                "brute force",
                "math"
            ]
        },
        {
            "contestId": 1466,
            "index": "D",
            "name": "13th Labour of Heracles",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "data structures",
                "greedy",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1463,
            "index": "E",
            "name": "Plan of Lectures",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "implementation",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1463,
            "index": "D",
            "name": "Pairs",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 1462,
            "index": "D",
            "name": "Add to Neighbour and Remove",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1461,
            "index": "E",
            "name": "Water Level",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2200,
            "tags": [
                "brute force",
                "graphs",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1461,
            "index": "D",
            "name": "Divide and Summarize",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "divide and conquer",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1458,
            "index": "E",
            "name": "Nim Shortcuts",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3100,
            "tags": [
                "data structures",
                "games"
            ]
        },
        {
            "contestId": 1458,
            "index": "D",
            "name": "Flip and Reverse",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3100,
            "tags": [
                "data structures",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 1456,
            "index": "E",
            "name": "XOR-ranges",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3500,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1455,
            "index": "E",
            "name": "Four Points",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "flows",
                "geometry",
                "greedy",
                "implementation",
                "math",
                "ternary search"
            ]
        },
        {
            "contestId": 1455,
            "index": "D",
            "name": "Sequence and Swaps",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "dp",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1454,
            "index": "E",
            "name": "Number of Simple Paths",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "combinatorics",
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 1454,
            "index": "D",
            "name": "Number into Sequence",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1453,
            "index": "E",
            "name": "Dog Snacks",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "binary search",
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1453,
            "index": "D",
            "name": "Checkpoints",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 1452,
            "index": "E",
            "name": "Two Editorials",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1452,
            "index": "D",
            "name": "Radio Towers",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1451,
            "index": "D",
            "name": "Circle Game",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1700,
            "tags": [
                "games",
                "geometry",
                "math"
            ]
        },
        {
            "contestId": 1450,
            "index": "E",
            "name": "Capitalism",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 1450,
            "index": "D",
            "name": "Rating Compression",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1800,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "implementation",
                "two pointers"
            ]
        },
        {
            "contestId": 1446,
            "index": "E",
            "name": "Long Recovery",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "dfs and similar"
            ]
        },
        {
            "contestId": 1444,
            "index": "E",
            "name": "Finding the Vertex",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3500,
            "tags": [
                "brute force",
                "dfs and similar",
                "dp",
                "interactive",
                "trees"
            ]
        },
        {
            "contestId": 1444,
            "index": "D",
            "name": "Rectangular Polyline",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "constructive algorithms",
                "dp",
                "geometry"
            ]
        },
        {
            "contestId": 1443,
            "index": "E",
            "name": "Long Permutation",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "brute force",
                "math",
                "two pointers"
            ]
        },
        {
            "contestId": 1442,
            "index": "E",
            "name": "Black, White and Grey Tree",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 3000,
            "tags": [
                "binary search",
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1442,
            "index": "D",
            "name": "Sum",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2800,
            "tags": [
                "data structures",
                "divide and conquer",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1439,
            "index": "E",
            "name": "Cheat and Win",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3500,
            "tags": [
                "bitmasks",
                "data structures",
                "games",
                "trees"
            ]
        },
        {
            "contestId": 1439,
            "index": "D",
            "name": "INOI Final Contests",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "combinatorics",
                "dp",
                "fft"
            ]
        },
        {
            "contestId": 1438,
            "index": "E",
            "name": "Yurii Can Do Everything",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2500,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "divide and conquer",
                "two pointers"
            ]
        },
        {
            "contestId": 1438,
            "index": "D",
            "name": "Powerful Ksenia",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1437,
            "index": "E",
            "name": "Make It Increasing",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 1437,
            "index": "D",
            "name": "Minimal Height Tree",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "graphs",
                "greedy",
                "shortest paths",
                "trees"
            ]
        },
        {
            "contestId": 1436,
            "index": "E",
            "name": "Complicated Computations",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "binary search",
                "data structures",
                "two pointers"
            ]
        },
        {
            "contestId": 1436,
            "index": "D",
            "name": "Bandit in a City",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "binary search",
                "dfs and similar",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1434,
            "index": "E",
            "name": "A Convex Game",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3500,
            "tags": [
                "dsu",
                "games"
            ]
        },
        {
            "contestId": 1433,
            "index": "E",
            "name": "Two Round Dances",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        {
            "contestId": 1433,
            "index": "D",
            "name": "Districts Connection",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "dfs and similar"
            ]
        },
        {
            "contestId": 1431,
            "index": "E",
            "name": "Chess Match",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 1431,
            "index": "D",
            "name": "Used Markers",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "*special",
                "greedy"
            ]
        },
        {
            "contestId": 1430,
            "index": "E",
            "name": "String Reversal",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "data structures",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 1430,
            "index": "D",
            "name": "String Deletion",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 1428,
            "index": "E",
            "name": "Carrots for Rabbits",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2200,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1428,
            "index": "D",
            "name": "Bouncing Boomerangs",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1427,
            "index": "E",
            "name": "Xum",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2500,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "math",
                "matrices",
                "number theory"
            ]
        },
        {
            "contestId": 1427,
            "index": "D",
            "name": "Unshuffling a Deck",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1426,
            "index": "E",
            "name": "Rock, Paper, Scissors",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "flows",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1426,
            "index": "D",
            "name": "Non-zero Segments",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1425,
            "index": "E",
            "name": "Excitation of Atoms",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1425,
            "index": "D",
            "name": "Danger of Mad Snakes",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1423,
            "index": "E",
            "name": "5G Antenna Towers",
            "type": "PROGRAMMING",
            "rating": 2700,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 1423,
            "index": "D",
            "name": "Does anyone else hate the wind?",
            "type": "PROGRAMMING",
            "rating": 3100,
            "tags": []
        },
        {
            "contestId": 1422,
            "index": "E",
            "name": "Minlexes",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "dp",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 1422,
            "index": "D",
            "name": "Returning Home",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2300,
            "tags": [
                "graphs",
                "shortest paths",
                "sortings"
            ]
        },
        {
            "contestId": 1421,
            "index": "E",
            "name": "Swedish Heroes",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "brute force",
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 1421,
            "index": "D",
            "name": "Hexagons",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "implementation",
                "math",
                "shortest paths"
            ]
        },
        {
            "contestId": 1420,
            "index": "E",
            "name": "Battle Lemmings",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2500,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1420,
            "index": "D",
            "name": "Rescue Nibel!",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "combinatorics",
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 1419,
            "index": "E",
            "name": "Decryption",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1418,
            "index": "E",
            "name": "Expected Damage",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "binary search",
                "combinatorics",
                "probabilities"
            ]
        },
        {
            "contestId": 1418,
            "index": "D",
            "name": "Trash Problem",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 1416,
            "index": "E",
            "name": "Split",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3200,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1416,
            "index": "D",
            "name": "Graph and Queries",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "data structures",
                "dsu",
                "graphs",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1415,
            "index": "E",
            "name": "New Game Plus!",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1415,
            "index": "D",
            "name": "XOR-gun",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1413,
            "index": "E",
            "name": "Solo mid Oracle",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "greedy",
                "math",
                "ternary search"
            ]
        },
        {
            "contestId": 1413,
            "index": "D",
            "name": "Shurikens",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1411,
            "index": "E",
            "name": "Poman Numbers",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "bitmasks",
                "greedy",
                "math",
                "strings"
            ]
        },
        {
            "contestId": 1411,
            "index": "D",
            "name": "Grime Zoo",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "brute force",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 1409,
            "index": "E",
            "name": "Two Platforms",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "binary search",
                "dp",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1409,
            "index": "D",
            "name": "Decrease the Sum of Digits",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1408,
            "index": "E",
            "name": "Avoid Rainbow Cycles",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures",
                "dsu",
                "graphs",
                "greedy",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1408,
            "index": "D",
            "name": "Searchlights",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "dp",
                "implementation",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1407,
            "index": "E",
            "name": "Egor in the Republic of Dagestan",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        {
            "contestId": 1407,
            "index": "D",
            "name": "Discrete Centrifugal Jumps",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "data structures",
                "dp",
                "graphs"
            ]
        },
        {
            "contestId": 1406,
            "index": "E",
            "name": "Deleting Numbers",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2600,
            "tags": [
                "interactive",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1406,
            "index": "D",
            "name": "Three Sequences",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1404,
            "index": "E",
            "name": "Bricks",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2800,
            "tags": [
                "flows",
                "graph matchings",
                "graphs"
            ]
        },
        {
            "contestId": 1404,
            "index": "D",
            "name": "Game of Pairs",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "interactive",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1401,
            "index": "E",
            "name": "Divide Square",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures",
                "geometry",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1401,
            "index": "D",
            "name": "Maximum Distributed Tree",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1800,
            "tags": [
                "dfs and similar",
                "dp",
                "greedy",
                "implementation",
                "math",
                "number theory",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1400,
            "index": "E",
            "name": "Clear the Multiset",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "data structures",
                "divide and conquer",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1400,
            "index": "D",
            "name": "Zigzags",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "brute force",
                "combinatorics",
                "data structures",
                "math",
                "two pointers"
            ]
        },
        {
            "contestId": 1399,
            "index": "D",
            "name": "Binary String To Subsequences",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1398,
            "index": "E",
            "name": "Two Types of Spells",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "implementation",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1398,
            "index": "D",
            "name": "Colored Rectangles",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "dp",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1396,
            "index": "E",
            "name": "Distance Matching",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "trees"
            ]
        },
        {
            "contestId": 1396,
            "index": "D",
            "name": "Rainbow Rectangles",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3300,
            "tags": [
                "data structures",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1394,
            "index": "E",
            "name": "Boboniu and Banknote Collection",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3500,
            "tags": [
                "strings"
            ]
        },
        {
            "contestId": 1394,
            "index": "D",
            "name": "Boboniu and Jianghu",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2800,
            "tags": [
                "dp",
                "greedy",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1393,
            "index": "D",
            "name": "Rarity and New Dress",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "dp",
                "implementation",
                "shortest paths"
            ]
        },
        {
            "contestId": 1392,
            "index": "E",
            "name": "Omkar and Duck",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1392,
            "index": "D",
            "name": "Omkar and Bed Wars",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1391,
            "index": "E",
            "name": "Pairs of Pairs",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1391,
            "index": "D",
            "name": "505",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1389,
            "index": "E",
            "name": "Calendar Ambiguity",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1389,
            "index": "D",
            "name": "Segment Intersections",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "brute force",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1388,
            "index": "E",
            "name": "Uncle Bogdan and Projections",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2700,
            "tags": [
                "data structures",
                "geometry",
                "sortings"
            ]
        },
        {
            "contestId": 1388,
            "index": "D",
            "name": "Captain Flint and Treasure",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "data structures",
                "dfs and similar",
                "graphs",
                "greedy",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1385,
            "index": "E",
            "name": "Directing Edges",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1385,
            "index": "D",
            "name": "a-Good String",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "bitmasks",
                "brute force",
                "divide and conquer",
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 1383,
            "index": "E",
            "name": "Strange Operation",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2800,
            "tags": [
                "combinatorics",
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 1383,
            "index": "D",
            "name": "Rearrange",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "graphs",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1381,
            "index": "E",
            "name": "Origami",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3300,
            "tags": [
                "geometry",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1381,
            "index": "D",
            "name": "The Majestic Brown Tree Snake",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "dfs and similar",
                "dp",
                "greedy",
                "trees",
                "two pointers"
            ]
        },
        {
            "contestId": 1380,
            "index": "E",
            "name": "Merging Towers",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "data structures",
                "dsu",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1380,
            "index": "D",
            "name": "Berserk And Fireball",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math",
                "two pointers"
            ]
        },
        {
            "contestId": 1379,
            "index": "E",
            "name": "Inverse Genealogy",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "divide and conquer",
                "dp",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 1379,
            "index": "D",
            "name": "New Passenger Trams",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2300,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1375,
            "index": "E",
            "name": "Inversion SwapSort",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1375,
            "index": "D",
            "name": "Replace by MEX",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 1374,
            "index": "D",
            "name": "Zero Remainder Array",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "math",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1373,
            "index": "E",
            "name": "Sum of Digits",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1373,
            "index": "D",
            "name": "Maximum Sum on Even Positions",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "divide and conquer",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1372,
            "index": "E",
            "name": "Omkar and Last Floor",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "dp",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 1372,
            "index": "D",
            "name": "Omkar and Circle",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "brute force",
                "dp",
                "games",
                "greedy"
            ]
        },
        {
            "contestId": 1371,
            "index": "D",
            "name": "Grid-00100",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1370,
            "index": "E",
            "name": "Binary Subsequence Rotation",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1370,
            "index": "D",
            "name": "Odd-Even Subsequence",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "dp",
                "dsu",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1369,
            "index": "E",
            "name": "DeadLee",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures",
                "dfs and similar",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1369,
            "index": "D",
            "name": "TediousLee",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dp",
                "graphs",
                "greedy",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 1368,
            "index": "E",
            "name": "Ski Accidents",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 1368,
            "index": "D",
            "name": "AND, OR and square sum",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1367,
            "index": "E",
            "name": "Necklace Assembly",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "brute force",
                "dfs and similar",
                "dp",
                "graphs",
                "greedy",
                "number theory"
            ]
        },
        {
            "contestId": 1367,
            "index": "D",
            "name": "Task On The Board",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1366,
            "index": "E",
            "name": "Two Arrays",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "brute force",
                "combinatorics",
                "constructive algorithms",
                "dp",
                "two pointers"
            ]
        },
        {
            "contestId": 1366,
            "index": "D",
            "name": "Two Divisors",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1365,
            "index": "E",
            "name": "Maximum Subsequence Value",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1365,
            "index": "D",
            "name": "Solve The Maze",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "implementation",
                "shortest paths"
            ]
        },
        {
            "contestId": 1364,
            "index": "E",
            "name": "X-OR",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "divide and conquer",
                "interactive",
                "probabilities"
            ]
        },
        {
            "contestId": 1364,
            "index": "D",
            "name": "Ehab's Last Corollary",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1363,
            "index": "E",
            "name": "Tree Shuffling",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1363,
            "index": "D",
            "name": "Guess The Maximums",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "implementation",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1361,
            "index": "E",
            "name": "James and the Chase",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3000,
            "tags": [
                "dfs and similar",
                "graphs",
                "probabilities",
                "trees"
            ]
        },
        {
            "contestId": 1361,
            "index": "D",
            "name": "Johnny and James",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "greedy",
                "implementation",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 1360,
            "index": "E",
            "name": "Polygon",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "dp",
                "graphs",
                "implementation",
                "shortest paths"
            ]
        },
        {
            "contestId": 1360,
            "index": "D",
            "name": "Buying Shovels",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1359,
            "index": "E",
            "name": "Modular Stability",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "combinatorics",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1359,
            "index": "D",
            "name": "Yet Another Yet Another Task",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "data structures",
                "dp",
                "implementation",
                "two pointers"
            ]
        },
        {
            "contestId": 1358,
            "index": "E",
            "name": "Are You Fired?",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1358,
            "index": "D",
            "name": "The Best Vacation",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "binary search",
                "brute force",
                "greedy",
                "implementation",
                "two pointers"
            ]
        },
        {
            "contestId": 1355,
            "index": "E",
            "name": "Restorer Distance",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "greedy",
                "math",
                "sortings",
                "ternary search"
            ]
        },
        {
            "contestId": 1355,
            "index": "D",
            "name": "Game With Array",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1354,
            "index": "E",
            "name": "Graph Coloring",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs"
            ]
        },
        {
            "contestId": 1354,
            "index": "D",
            "name": "Multiset",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        {
            "contestId": 1353,
            "index": "E",
            "name": "K-periodic Garland",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "brute force",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1353,
            "index": "D",
            "name": "Constructing the Array",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 1352,
            "index": "E",
            "name": "Special Elements",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "implementation",
                "two pointers"
            ]
        },
        {
            "contestId": 1352,
            "index": "D",
            "name": "Alice, Bob and Candies",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        {
            "contestId": 1349,
            "index": "E",
            "name": "Slime and Hats",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1349,
            "index": "D",
            "name": "Slime and Biscuits",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3200,
            "tags": [
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 1348,
            "index": "E",
            "name": "Phoenix and Berries",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1348,
            "index": "D",
            "name": "Phoenix and Science",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1346,
            "index": "E",
            "name": "Magic Tricks",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "*special",
                "dp",
                "graphs"
            ]
        },
        {
            "contestId": 1346,
            "index": "D",
            "name": "Constructing the Dungeon",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "*special",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 1344,
            "index": "E",
            "name": "Train Tracks",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 1344,
            "index": "D",
            "name": "Résumé Review",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2700,
            "tags": [
                "binary search",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1343,
            "index": "E",
            "name": "Weights Distributing",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "brute force",
                "graphs",
                "greedy",
                "shortest paths",
                "sortings"
            ]
        },
        {
            "contestId": 1343,
            "index": "D",
            "name": "Constant Palindrome Sum",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "brute force",
                "data structures",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 1342,
            "index": "E",
            "name": "Placing Rooks",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "combinatorics",
                "fft",
                "math"
            ]
        },
        {
            "contestId": 1342,
            "index": "D",
            "name": "Multiple Testcases",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1340,
            "index": "E",
            "name": "Nastya and Bees",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3000,
            "tags": [
                "graphs",
                "interactive",
                "probabilities"
            ]
        },
        {
            "contestId": 1340,
            "index": "D",
            "name": "Nastya and Time Machine",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 1338,
            "index": "E",
            "name": "JYPnation",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 3500,
            "tags": [
                "graphs"
            ]
        },
        {
            "contestId": 1338,
            "index": "D",
            "name": "Nested Rubber Bands",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 1336,
            "index": "D",
            "name": "Yui and Mahjong Set",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "interactive"
            ]
        },
        {
            "contestId": 1335,
            "index": "D",
            "name": "Anti-Sudoku",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1334,
            "index": "E",
            "name": "Divisor Paths",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "combinatorics",
                "graphs",
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1334,
            "index": "D",
            "name": "Minimum Euler Cycle",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1333,
            "index": "E",
            "name": "Road to 1600",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1333,
            "index": "D",
            "name": "Challenges in school №41",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "brute force",
                "constructive algorithms",
                "games",
                "graphs",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1332,
            "index": "E",
            "name": "Height All the Same",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math",
                "matrices"
            ]
        },
        {
            "contestId": 1332,
            "index": "D",
            "name": "Walk on Matrix",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1331,
            "index": "E",
            "name": "Jordan Smiley",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "dfs and similar",
                "geometry",
                "implementation"
            ]
        },
        {
            "contestId": 1331,
            "index": "D",
            "name": "Again?",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "implementation"
            ]
        },
        {
            "contestId": 1329,
            "index": "E",
            "name": "Dreamoon Loves AA",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3300,
            "tags": [
                "binary search",
                "greedy"
            ]
        },
        {
            "contestId": 1329,
            "index": "D",
            "name": "Dreamoon Likes Strings",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3100,
            "tags": [
                "constructive algorithms",
                "data structures"
            ]
        },
        {
            "contestId": 1328,
            "index": "E",
            "name": "Tree Queries",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 1328,
            "index": "D",
            "name": "Carousel",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "dp",
                "graphs",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1327,
            "index": "E",
            "name": "Count The Blocks",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1327,
            "index": "D",
            "name": "Infinite Path",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "brute force",
                "dfs and similar",
                "graphs",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1326,
            "index": "E",
            "name": "Bombs",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures",
                "two pointers"
            ]
        },
        {
            "contestId": 1325,
            "index": "E",
            "name": "Ehab's REAL Number Theory Problem",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "brute force",
                "dfs and similar",
                "graphs",
                "number theory",
                "shortest paths"
            ]
        },
        {
            "contestId": 1325,
            "index": "D",
            "name": "Ehab the Xorcist",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy",
                "number theory"
            ]
        },
        {
            "contestId": 1324,
            "index": "E",
            "name": "Sleeping Schedule",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 1324,
            "index": "D",
            "name": "Pair of Topics",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "data structures",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1322,
            "index": "E",
            "name": "Median Mountain Range",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3300,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 1322,
            "index": "D",
            "name": "Reality Show",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2800,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        {
            "contestId": 1320,
            "index": "E",
            "name": "Treeland and Viruses",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "data structures",
                "dfs and similar",
                "dp",
                "shortest paths",
                "trees"
            ]
        },
        {
            "contestId": 1320,
            "index": "D",
            "name": "Reachable Strings",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "data structures",
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 1316,
            "index": "E",
            "name": "Team Building",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "bitmasks",
                "dp",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1316,
            "index": "D",
            "name": "Nash Matrix",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 1313,
            "index": "E",
            "name": "Concatenation with intersection",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "data structures",
                "hashing",
                "strings",
                "two pointers"
            ]
        },
        {
            "contestId": 1313,
            "index": "D",
            "name": "Happy New Year",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "bitmasks",
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 1312,
            "index": "E",
            "name": "Array Shrinking",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1312,
            "index": "D",
            "name": "Count the Arrays",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        {
            "contestId": 1311,
            "index": "E",
            "name": "Construct the Binary Tree",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "trees"
            ]
        },
        {
            "contestId": 1311,
            "index": "D",
            "name": "Three Integers",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "brute force",
                "math"
            ]
        },
        {
            "contestId": 1310,
            "index": "E",
            "name": "Strange Function",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2900,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 1310,
            "index": "D",
            "name": "Tourism",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "dp",
                "graphs",
                "probabilities"
            ]
        },
        {
            "contestId": 1307,
            "index": "E",
            "name": "Cow and Treats",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "binary search",
                "combinatorics",
                "dp",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1307,
            "index": "D",
            "name": "Cow and Fields",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "binary search",
                "data structures",
                "dfs and similar",
                "graphs",
                "greedy",
                "shortest paths",
                "sortings"
            ]
        },
        {
            "contestId": 1305,
            "index": "E",
            "name": "Kuroni and the Score Distribution",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1305,
            "index": "D",
            "name": "Kuroni and the Celebration",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "interactive",
                "trees"
            ]
        },
        {
            "contestId": 1304,
            "index": "E",
            "name": "1-Trees and Queries",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "data structures",
                "dfs and similar",
                "shortest paths",
                "trees"
            ]
        },
        {
            "contestId": 1304,
            "index": "D",
            "name": "Shortest and Longest LIS",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 1303,
            "index": "E",
            "name": "Erase Subsequences",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "dp",
                "strings"
            ]
        },
        {
            "contestId": 1303,
            "index": "D",
            "name": "Fill The Bag",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "bitmasks",
                "greedy"
            ]
        },
        {
            "contestId": 1302,
            "index": "E",
            "name": "Amazing bitset",
            "type": "PROGRAMMING",
            "tags": []
        },
        {
            "contestId": 1302,
            "index": "D",
            "name": "Dijkstra",
            "type": "PROGRAMMING",
            "tags": []
        },
        {
            "contestId": 1301,
            "index": "E",
            "name": "Nanosoft",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 1301,
            "index": "D",
            "name": "Time to Run",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 1299,
            "index": "E",
            "name": "So Mean",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3400,
            "tags": [
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1299,
            "index": "D",
            "name": "Around the World",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 3000,
            "tags": [
                "bitmasks",
                "combinatorics",
                "dfs and similar",
                "dp",
                "graphs",
                "graphs",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 1297,
            "index": "E",
            "name": "Modernization of Treeland",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "dfs and similar",
                "trees"
            ]
        },
        {
            "contestId": 1297,
            "index": "D",
            "name": "Bonus Distribution ",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "binary search",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1296,
            "index": "D",
            "name": "Fight with Monsters",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1295,
            "index": "E",
            "name": "Permutation Separation",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "data structures",
                "divide and conquer"
            ]
        },
        {
            "contestId": 1295,
            "index": "D",
            "name": "Same GCDs",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1294,
            "index": "E",
            "name": "Obtain a Permutation",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1294,
            "index": "D",
            "name": "MEX maximizing",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "data structures",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1292,
            "index": "E",
            "name": "Rin and The Unknown Flower",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1292,
            "index": "D",
            "name": "Chaotic V.",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2700,
            "tags": [
                "dp",
                "graphs",
                "greedy",
                "math",
                "number theory",
                "trees"
            ]
        },
        {
            "contestId": 1290,
            "index": "E",
            "name": "Cartesian Tree ",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3300,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 1290,
            "index": "D",
            "name": "Coffee Varieties (hard version)",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "graphs",
                "interactive"
            ]
        },
        {
            "contestId": 1288,
            "index": "E",
            "name": "Messenger Simulator",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 1288,
            "index": "D",
            "name": "Minimax Problem",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "binary search",
                "bitmasks",
                "dp"
            ]
        },
        {
            "contestId": 1286,
            "index": "E",
            "name": "Fedya the Potter Strikes Back",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3200,
            "tags": [
                "data structures",
                "strings"
            ]
        },
        {
            "contestId": 1286,
            "index": "D",
            "name": "LCC",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 3100,
            "tags": [
                "data structures",
                "math",
                "matrices",
                "probabilities"
            ]
        },
        {
            "contestId": 1285,
            "index": "E",
            "name": "Delete a Segment",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "brute force",
                "constructive algorithms",
                "data structures",
                "dp",
                "graphs",
                "sortings",
                "trees",
                "two pointers"
            ]
        },
        {
            "contestId": 1285,
            "index": "D",
            "name": "Dr. Evil Underscores",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "bitmasks",
                "brute force",
                "dfs and similar",
                "divide and conquer",
                "dp",
                "greedy",
                "strings",
                "trees"
            ]
        },
        {
            "contestId": 1284,
            "index": "E",
            "name": "New Year and Castle Construction",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2500,
            "tags": [
                "combinatorics",
                "geometry",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1284,
            "index": "D",
            "name": "New Year and Conference",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures",
                "hashing",
                "sortings"
            ]
        },
        {
            "contestId": 1283,
            "index": "E",
            "name": "New Year Parties",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1283,
            "index": "D",
            "name": "Christmas Trees",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        {
            "contestId": 1282,
            "index": "E",
            "name": "The Cake Is a Lie",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1282,
            "index": "D",
            "name": "Enchanted Artifact",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "interactive",
                "strings"
            ]
        },
        {
            "contestId": 1280,
            "index": "E",
            "name": "Kirchhoff's Current Loss",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2900,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 1280,
            "index": "D",
            "name": "Miss Punyverse",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2500,
            "tags": [
                "dp",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1279,
            "index": "E",
            "name": "New Year Permutations",
            "type": "PROGRAMMING",
            "rating": 2700,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        {
            "contestId": 1279,
            "index": "D",
            "name": "Santa's Bot",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "combinatorics",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 1278,
            "index": "E",
            "name": "Tests for problem D",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "divide and conquer",
                "trees"
            ]
        },
        {
            "contestId": 1278,
            "index": "D",
            "name": "Segment Tree",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "data structures",
                "dsu",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 1277,
            "index": "D",
            "name": "Let's Play the Words?",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "data structures",
                "hashing",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1276,
            "index": "E",
            "name": "Four Stones",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3500,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1276,
            "index": "D",
            "name": "Tree Elimination",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 1275,
            "index": "D",
            "name": "Storage2",
            "type": "PROGRAMMING",
            "points": 2000,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 1272,
            "index": "E",
            "name": "Nearest Opposite Parity",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "dfs and similar",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 1272,
            "index": "D",
            "name": "Remove One Element",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "dp"
            ]
        },
        {
            "contestId": 1271,
            "index": "E",
            "name": "Common Number",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "binary search",
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1271,
            "index": "D",
            "name": "Portals",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1270,
            "index": "E",
            "name": "Divide Points",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "geometry",
                "math"
            ]
        },
        {
            "contestId": 1270,
            "index": "D",
            "name": "Strange Device",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "interactive",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1268,
            "index": "E",
            "name": "Happy Cactus",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 3400,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 1268,
            "index": "D",
            "name": "Invertation in Tournament",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3200,
            "tags": [
                "brute force",
                "divide and conquer",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 1267,
            "index": "E",
            "name": "Elections",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "greedy"
            ]
        },
        {
            "contestId": 1267,
            "index": "D",
            "name": "DevOps Best Practices",
            "type": "PROGRAMMING",
            "rating": 2800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1266,
            "index": "E",
            "name": "Spaceship Solitaire",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1266,
            "index": "D",
            "name": "Decreasing Debts",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "data structures",
                "graphs",
                "greedy",
                "implementation",
                "math",
                "two pointers"
            ]
        },
        {
            "contestId": 1265,
            "index": "E",
            "name": "Beautiful Mirrors",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures",
                "dp",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 1264,
            "index": "E",
            "name": "Beautiful League",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "flows",
                "graph matchings"
            ]
        },
        {
            "contestId": 1263,
            "index": "E",
            "name": "Editor",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 1263,
            "index": "D",
            "name": "Secret Passwords",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1500,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 1260,
            "index": "E",
            "name": "Tournament",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "brute force",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1260,
            "index": "D",
            "name": "A Game with Traps",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "dp",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1257,
            "index": "E",
            "name": "The Contest",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "data structures",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1257,
            "index": "D",
            "name": "Yet Another Monster Killing Problem",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1256,
            "index": "E",
            "name": "Yet Another Division Into Teams",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "dp",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1256,
            "index": "D",
            "name": "Binary String Minimizing",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy"
            ]
        },
        {
            "contestId": 1254,
            "index": "E",
            "name": "Send Tree to Charlie",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3300,
            "tags": [
                "combinatorics",
                "dfs and similar",
                "dsu",
                "trees"
            ]
        },
        {
            "contestId": 1254,
            "index": "D",
            "name": "Tree Queries",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2700,
            "tags": [
                "data structures",
                "probabilities",
                "trees"
            ]
        },
        {
            "contestId": 1253,
            "index": "E",
            "name": "Antenna Coverage",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2200,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1253,
            "index": "D",
            "name": "Harmonious Graph",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1252,
            "index": "E",
            "name": "Songwriter",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 1252,
            "index": "D",
            "name": "Find String in a Grid",
            "type": "PROGRAMMING",
            "rating": 3000,
            "tags": [
                "data structures",
                "dp",
                "strings",
                "trees"
            ]
        },
        {
            "contestId": 1251,
            "index": "D",
            "name": "Salary Changing",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1250,
            "index": "E",
            "name": "The Coronation",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 1250,
            "index": "D",
            "name": "Conference Problem",
            "type": "PROGRAMMING",
            "rating": 3000,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 1249,
            "index": "E",
            "name": "By Elevator or Stairs?",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "dp",
                "shortest paths"
            ]
        },
        {
            "contestId": 1245,
            "index": "E",
            "name": "Hyakugoku and Ladders",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "dp",
                "probabilities",
                "shortest paths"
            ]
        },
        {
            "contestId": 1245,
            "index": "D",
            "name": "Shichikuji and Power Grid",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "dsu",
                "graphs",
                "greedy",
                "shortest paths",
                "trees"
            ]
        },
        {
            "contestId": 1244,
            "index": "E",
            "name": "Minimizing Difference",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "sortings",
                "ternary search",
                "two pointers"
            ]
        },
        {
            "contestId": 1244,
            "index": "D",
            "name": "Paint the Tree",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dp",
                "graphs",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1242,
            "index": "E",
            "name": "Planar Perimeter",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 1242,
            "index": "D",
            "name": "Number Discovery",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3400,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 1239,
            "index": "E",
            "name": "Turtle",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 1239,
            "index": "D",
            "name": "Catowice City",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "2-sat",
                "dfs and similar",
                "graph matchings",
                "graphs"
            ]
        },
        {
            "contestId": 1238,
            "index": "E",
            "name": "Keyboard Purchase",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        {
            "contestId": 1238,
            "index": "D",
            "name": "AB-string",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "combinatorics",
                "dp",
                "strings"
            ]
        },
        {
            "contestId": 1237,
            "index": "E",
            "name": "Balanced Binary Search Trees",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1237,
            "index": "D",
            "name": "Balanced Playlist",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 1236,
            "index": "E",
            "name": "Alice and the Unfair Game",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "dsu"
            ]
        },
        {
            "contestId": 1236,
            "index": "D",
            "name": "Alice and the Doll",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2300,
            "tags": [
                "brute force",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1234,
            "index": "E",
            "name": "Special Permutations",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 1234,
            "index": "D",
            "name": "Distinct Characters Queries",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 1231,
            "index": "E",
            "name": "Middle-Out",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 1228,
            "index": "E",
            "name": "Another Filling the Grid",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1228,
            "index": "D",
            "name": "Complete Tripartite",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "graphs",
                "hashing",
                "implementation"
            ]
        },
        {
            "contestId": 1227,
            "index": "E",
            "name": "Arson In Berland Forest",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "binary search",
                "graphs",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 1225,
            "index": "E",
            "name": "Rock Is Push",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2200,
            "tags": [
                "binary search",
                "dp"
            ]
        },
        {
            "contestId": 1225,
            "index": "D",
            "name": "Power Products",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "hashing",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1223,
            "index": "E",
            "name": "Paint the Tree",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "dp",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1223,
            "index": "D",
            "name": "Sequence Sorting",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dp",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 1221,
            "index": "E",
            "name": "Game With String",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "games"
            ]
        },
        {
            "contestId": 1221,
            "index": "D",
            "name": "Make The Fence Great Again",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 1220,
            "index": "E",
            "name": "Tourism",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "dp",
                "dsu",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1220,
            "index": "D",
            "name": "Alex and Julian",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 1900,
            "tags": [
                "bitmasks",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1218,
            "index": "E",
            "name": "Product Tuples",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "divide and conquer",
                "fft"
            ]
        },
        {
            "contestId": 1218,
            "index": "D",
            "name": "Xor Spanning Tree",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "divide and conquer",
                "fft",
                "graphs"
            ]
        },
        {
            "contestId": 1217,
            "index": "E",
            "name": "Sum Queries?",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "data structures",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1217,
            "index": "D",
            "name": "Coloring Edges",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1216,
            "index": "D",
            "name": "Swords",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 1215,
            "index": "E",
            "name": "Marbles",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        {
            "contestId": 1215,
            "index": "D",
            "name": "Ticket Game",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "games",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1214,
            "index": "E",
            "name": "Petya and Construction Set",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "graphs",
                "math",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1214,
            "index": "D",
            "name": "Treasure Island",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dfs and similar",
                "dp",
                "flows",
                "hashing"
            ]
        },
        {
            "contestId": 1213,
            "index": "E",
            "name": "Two Small Strings",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1211,
            "index": "E",
            "name": "Double Permutation Inc.",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "*special",
                "binary search",
                "greedy"
            ]
        },
        {
            "contestId": 1211,
            "index": "D",
            "name": "Teams",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "*special",
                "binary search",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1210,
            "index": "E",
            "name": "Wojtek and Card Tricks",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2700,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 1210,
            "index": "D",
            "name": "Konrad and Company Evaluation",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2400,
            "tags": [
                "graphs"
            ]
        },
        {
            "contestId": 1209,
            "index": "D",
            "name": "Cow and Snacks",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 1208,
            "index": "E",
            "name": "Let Them Slide",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2200,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 1208,
            "index": "D",
            "name": "Restore Permutation",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1207,
            "index": "E",
            "name": "XOR Guessing",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "bitmasks",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1207,
            "index": "D",
            "name": "Number Of Permutations",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "combinatorics"
            ]
        },
        {
            "contestId": 1205,
            "index": "E",
            "name": "Expected Value Again",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "combinatorics",
                "strings"
            ]
        },
        {
            "contestId": 1205,
            "index": "D",
            "name": "Almost All",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "trees"
            ]
        },
        {
            "contestId": 1204,
            "index": "E",
            "name": "Natasha, Sasha and the Prefix Sums",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "combinatorics",
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1203,
            "index": "E",
            "name": "Boxers",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1202,
            "index": "E",
            "name": "You Are Given Some Strings...",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "brute force",
                "string suffix structures",
                "strings"
            ]
        },
        {
            "contestId": 1202,
            "index": "D",
            "name": "Print a 1337-string...",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math",
                "strings"
            ]
        },
        {
            "contestId": 1201,
            "index": "D",
            "name": "Treasure Hunting",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1200,
            "index": "E",
            "name": "Compress Words",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "brute force",
                "hashing",
                "implementation",
                "string suffix structures",
                "strings"
            ]
        },
        {
            "contestId": 1200,
            "index": "D",
            "name": "White Lines",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "brute force",
                "data structures",
                "dp",
                "implementation",
                "two pointers"
            ]
        },
        {
            "contestId": 1198,
            "index": "E",
            "name": "Rectangle Painting 2",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2500,
            "tags": [
                "flows",
                "graph matchings",
                "graphs"
            ]
        },
        {
            "contestId": 1198,
            "index": "D",
            "name": "Rectangle Painting 1",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2300,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 1197,
            "index": "E",
            "name": "Culture Code",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "binary search",
                "combinatorics",
                "data structures",
                "dp",
                "shortest paths",
                "sortings"
            ]
        },
        {
            "contestId": 1197,
            "index": "D",
            "name": "Yet Another Subarray Problem",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "dp",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1196,
            "index": "E",
            "name": "Connected Component on a Chessboard",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1195,
            "index": "E",
            "name": "OpenStreetMap",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2100,
            "tags": [
                "data structures",
                "two pointers"
            ]
        },
        {
            "contestId": 1194,
            "index": "E",
            "name": "Count The Rectangles",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "bitmasks",
                "brute force",
                "data structures",
                "geometry",
                "sortings"
            ]
        },
        {
            "contestId": 1194,
            "index": "D",
            "name": "1-2-K Game",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "games",
                "math"
            ]
        },
        {
            "contestId": 1190,
            "index": "E",
            "name": "Tokitsukaze and Explosion",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3100,
            "tags": [
                "binary search",
                "greedy"
            ]
        },
        {
            "contestId": 1190,
            "index": "D",
            "name": "Tokitsukaze and Strange Rectangle",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2000,
            "tags": [
                "data structures",
                "divide and conquer",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1188,
            "index": "E",
            "name": "Problem from Red Panda",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3300,
            "tags": [
                "combinatorics"
            ]
        },
        {
            "contestId": 1188,
            "index": "D",
            "name": "Make Equal",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3100,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 1187,
            "index": "E",
            "name": "Tree Painting",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 1187,
            "index": "D",
            "name": "Subarray Sorting",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 1186,
            "index": "E",
            "name": "Vus the Cossack and a Field",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "divide and conquer",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1186,
            "index": "D",
            "name": "Vus the Cossack and Numbers",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1185,
            "index": "E",
            "name": "Polycarp and Snakes",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2000,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        {
            "contestId": 1185,
            "index": "D",
            "name": "Extra Element",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1183,
            "index": "E",
            "name": "Subsequences (easy version)",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "dp",
                "graphs",
                "implementation",
                "shortest paths"
            ]
        },
        {
            "contestId": 1183,
            "index": "D",
            "name": "Candy Box (easy version)",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1182,
            "index": "E",
            "name": "Product Oriented Recurrence",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "dp",
                "math",
                "matrices",
                "number theory"
            ]
        },
        {
            "contestId": 1182,
            "index": "D",
            "name": "Complete Mirror",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "hashing",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1181,
            "index": "D",
            "name": "Irrigation",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2200,
            "tags": [
                "binary search",
                "data structures",
                "implementation",
                "sortings",
                "trees",
                "two pointers"
            ]
        },
        {
            "contestId": 1179,
            "index": "E",
            "name": "Alesya and Discrete Math",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3200,
            "tags": [
                "divide and conquer",
                "interactive"
            ]
        },
        {
            "contestId": 1179,
            "index": "D",
            "name": "Fedor Runs for President",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2700,
            "tags": [
                "data structures",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 1178,
            "index": "E",
            "name": "Archaeology",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 1178,
            "index": "D",
            "name": "Prime Graph",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1176,
            "index": "E",
            "name": "Cover it!",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "shortest paths",
                "trees"
            ]
        },
        {
            "contestId": 1176,
            "index": "D",
            "name": "Recover it!",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "dfs and similar",
                "graphs",
                "greedy",
                "number theory",
                "sortings"
            ]
        },
        {
            "contestId": 1175,
            "index": "E",
            "name": "Minimal Segment Cover",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "data structures",
                "dfs and similar",
                "divide and conquer",
                "dp",
                "greedy",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1175,
            "index": "D",
            "name": "Array Splitting",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1174,
            "index": "E",
            "name": "Ehab and the Expected GCD Problem",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "combinatorics",
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1174,
            "index": "D",
            "name": "Ehab and the Expected XOR Problem",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "bitmasks",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1172,
            "index": "E",
            "name": "Nauuo and ODT",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3300,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 1172,
            "index": "D",
            "name": "Nauuo and Portals",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2900,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1170,
            "index": "E",
            "name": "Sliding Doors",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "binary search"
            ]
        },
        {
            "contestId": 1170,
            "index": "D",
            "name": "Decoding of Integer Sequences",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 1168,
            "index": "E",
            "name": "Xor Permutations",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1168,
            "index": "D",
            "name": "Anagram Paths",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3000,
            "tags": [
                "dp",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1167,
            "index": "E",
            "name": "Range Deleting",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "combinatorics",
                "data structures",
                "two pointers"
            ]
        },
        {
            "contestId": 1167,
            "index": "D",
            "name": "Bicolored RBS",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1166,
            "index": "E",
            "name": "The LCMs Must be Large",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1166,
            "index": "D",
            "name": "Cute Sequences",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2200,
            "tags": [
                "binary search",
                "brute force",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1165,
            "index": "E",
            "name": "Two Arrays and Sum of Functions",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1165,
            "index": "D",
            "name": "Almost All Divisors",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1163,
            "index": "E",
            "name": "Magical Permutation",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2400,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "data structures",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 1163,
            "index": "D",
            "name": "Mysterious Code",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "dp",
                "strings"
            ]
        },
        {
            "contestId": 1158,
            "index": "E",
            "name": "Strange device",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3400,
            "tags": [
                "binary search",
                "interactive",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 1158,
            "index": "D",
            "name": "Winding polygonal line",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "geometry",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1157,
            "index": "E",
            "name": "Minimum Array",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "binary search",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1157,
            "index": "D",
            "name": "N Problems During K Days",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1156,
            "index": "E",
            "name": "Special Segments of Permutation",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "data structures",
                "divide and conquer",
                "dsu",
                "two pointers"
            ]
        },
        {
            "contestId": 1156,
            "index": "D",
            "name": "0-1-Tree",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "divide and conquer",
                "dp",
                "dsu",
                "trees"
            ]
        },
        {
            "contestId": 1155,
            "index": "E",
            "name": "Guess the Root",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "brute force",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1155,
            "index": "D",
            "name": "Beautiful Array",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "brute force",
                "data structures",
                "divide and conquer",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1154,
            "index": "E",
            "name": "Two Teams",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "data structures",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1154,
            "index": "D",
            "name": "Walking Robot",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy"
            ]
        },
        {
            "contestId": 1153,
            "index": "E",
            "name": "Serval and Snake",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2200,
            "tags": [
                "binary search",
                "brute force",
                "interactive"
            ]
        },
        {
            "contestId": 1153,
            "index": "D",
            "name": "Serval and Rooted Tree",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "binary search",
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1152,
            "index": "E",
            "name": "Neko and Flashback",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1152,
            "index": "D",
            "name": "Neko and Aki's Prank",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dp",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1151,
            "index": "E",
            "name": "Number of Components",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "data structures",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1151,
            "index": "D",
            "name": "Stas and the Queue at the Buffet",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1600,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1149,
            "index": "E",
            "name": "Election Promises",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 3200,
            "tags": [
                "games",
                "graphs"
            ]
        },
        {
            "contestId": 1149,
            "index": "D",
            "name": "Abandoning Roads",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "brute force",
                "dp",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 1148,
            "index": "E",
            "name": "Earth Wind and Fire",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1148,
            "index": "D",
            "name": "Dirty Deeds Done Dirt Cheap",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1800,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1147,
            "index": "E",
            "name": "Rainbow Coins",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "interactive"
            ]
        },
        {
            "contestId": 1147,
            "index": "D",
            "name": "Palindrome XOR",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1146,
            "index": "E",
            "name": "Hot is Cold",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "bitmasks",
                "data structures",
                "divide and conquer",
                "implementation"
            ]
        },
        {
            "contestId": 1146,
            "index": "D",
            "name": "Frog Jumping",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1145,
            "index": "E",
            "name": "Fourier Doodles",
            "type": "PROGRAMMING",
            "tags": []
        },
        {
            "contestId": 1145,
            "index": "D",
            "name": "Pigeon d'Or",
            "type": "PROGRAMMING",
            "tags": [
                "implementation"
            ]
        },
        {
            "contestId": 1144,
            "index": "E",
            "name": "Median String",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "bitmasks",
                "math",
                "number theory",
                "strings"
            ]
        },
        {
            "contestId": 1144,
            "index": "D",
            "name": "Equalize Them All",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1142,
            "index": "E",
            "name": "Pink Floyd",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "graphs",
                "interactive"
            ]
        },
        {
            "contestId": 1142,
            "index": "D",
            "name": "Foreigner",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2800,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 1141,
            "index": "E",
            "name": "Superhero Battle",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 1141,
            "index": "D",
            "name": "Colored Boots",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1140,
            "index": "E",
            "name": "Palindrome-less Arrays",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "combinatorics",
                "divide and conquer",
                "dp"
            ]
        },
        {
            "contestId": 1140,
            "index": "D",
            "name": "Minimum Triangulation",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "dp",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1139,
            "index": "E",
            "name": "Maximize Mex",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "flows",
                "graph matchings",
                "graphs"
            ]
        },
        {
            "contestId": 1139,
            "index": "D",
            "name": "Steps to One",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "dp",
                "math",
                "number theory",
                "probabilities"
            ]
        },
        {
            "contestId": 1137,
            "index": "E",
            "name": "Train Car Selection",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1137,
            "index": "D",
            "name": "Cooperative Game",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "interactive",
                "number theory"
            ]
        },
        {
            "contestId": 1136,
            "index": "E",
            "name": "Nastya Hasn't Written a Legend",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        {
            "contestId": 1136,
            "index": "D",
            "name": "Nastya Is Buying Lunch",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "greedy"
            ]
        },
        {
            "contestId": 1133,
            "index": "E",
            "name": "K Balanced Teams",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "dp",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1133,
            "index": "D",
            "name": "Zero Quantity Maximization",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "hashing",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1132,
            "index": "E",
            "name": "Knapsack",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "dfs and similar",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1132,
            "index": "D",
            "name": "Stressful Training",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "binary search",
                "greedy"
            ]
        },
        {
            "contestId": 1131,
            "index": "E",
            "name": "String Multiplication",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "dp",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 1131,
            "index": "D",
            "name": "Gourmet choice",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "dp",
                "dsu",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 1129,
            "index": "E",
            "name": "Legendary Tree",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3100,
            "tags": [
                "binary search",
                "interactive",
                "trees"
            ]
        },
        {
            "contestId": 1129,
            "index": "D",
            "name": "Isolation",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2900,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 1120,
            "index": "E",
            "name": "The very same Munchhausen",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "brute force"
            ]
        },
        {
            "contestId": 1120,
            "index": "D",
            "name": "Power Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "dfs and similar",
                "dp",
                "dsu",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1119,
            "index": "E",
            "name": "Pavel and Triangles",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1900,
            "tags": [
                "brute force",
                "dp",
                "fft",
                "greedy",
                "ternary search"
            ]
        },
        {
            "contestId": 1119,
            "index": "D",
            "name": "Frets On Fire",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "binary search",
                "sortings"
            ]
        },
        {
            "contestId": 1118,
            "index": "E",
            "name": "Yet Another Ball Problem",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1117,
            "index": "E",
            "name": "Decypher the String",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "bitmasks",
                "chinese remainder theorem",
                "constructive algorithms",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1117,
            "index": "D",
            "name": "Magic Gems",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dp",
                "math",
                "matrices"
            ]
        },
        {
            "contestId": 1114,
            "index": "E",
            "name": "Arithmetic Progression",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "binary search",
                "interactive",
                "number theory",
                "probabilities"
            ]
        },
        {
            "contestId": 1114,
            "index": "D",
            "name": "Flood Fill",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 1111,
            "index": "E",
            "name": "Tree",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "data structures",
                "dfs and similar",
                "dp",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 1111,
            "index": "D",
            "name": "Destroy the Colony",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1110,
            "index": "E",
            "name": "Magic Stones",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1110,
            "index": "D",
            "name": "Jongmah",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 1109,
            "index": "E",
            "name": "Sasha and a Very Easy Test",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2700,
            "tags": [
                "data structures",
                "number theory"
            ]
        },
        {
            "contestId": 1109,
            "index": "D",
            "name": "Sasha and Interesting Fact from Graph Theory",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2400,
            "tags": [
                "brute force",
                "combinatorics",
                "dp",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 1108,
            "index": "D",
            "name": "Diverse Garland",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1107,
            "index": "E",
            "name": "Vasya and Binary String",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 1107,
            "index": "D",
            "name": "Compression",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "dp",
                "implementation",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1106,
            "index": "E",
            "name": "Lunar New Year and Red Envelopes",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 1106,
            "index": "D",
            "name": "Lunar New Year and a Wander",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "data structures",
                "dfs and similar",
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        {
            "contestId": 1105,
            "index": "E",
            "name": "Helping Hiasat ",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "brute force",
                "dp",
                "meet-in-the-middle"
            ]
        },
        {
            "contestId": 1105,
            "index": "D",
            "name": "Kilani and the Game",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dfs and similar",
                "graphs",
                "implementation",
                "shortest paths"
            ]
        },
        {
            "contestId": 1103,
            "index": "E",
            "name": "Radix sum",
            "type": "PROGRAMMING",
            "points": 3500,
            "rating": 3400,
            "tags": [
                "fft",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1103,
            "index": "D",
            "name": "Professional layer",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3100,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        {
            "contestId": 1102,
            "index": "E",
            "name": "Monotonic Renumeration",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "combinatorics",
                "sortings"
            ]
        },
        {
            "contestId": 1102,
            "index": "D",
            "name": "Balanced Ternary String",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 1101,
            "index": "E",
            "name": "Polycarp's New Job",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "implementation"
            ]
        },
        {
            "contestId": 1101,
            "index": "D",
            "name": "GCD Counting",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "data structures",
                "dfs and similar",
                "dp",
                "number theory",
                "trees"
            ]
        },
        {
            "contestId": 1100,
            "index": "E",
            "name": "Andrew and Taxi",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "binary search",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1100,
            "index": "D",
            "name": "Dasha and Chess",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "games",
                "interactive"
            ]
        },
        {
            "contestId": 1098,
            "index": "E",
            "name": "Fedya the Potter",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3400,
            "tags": [
                "binary search",
                "implementation",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1098,
            "index": "D",
            "name": "Eels",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2800,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 1097,
            "index": "E",
            "name": "Egor and an RPG game",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 3400,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1097,
            "index": "D",
            "name": "Makoto and a Blackboard",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "dp",
                "math",
                "number theory",
                "probabilities"
            ]
        },
        {
            "contestId": 1096,
            "index": "E",
            "name": "The Top Scorer",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "combinatorics",
                "dp",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 1096,
            "index": "D",
            "name": "Easy Problem",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 1095,
            "index": "E",
            "name": "Almost Regular Bracket Sequence",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "implementation"
            ]
        },
        {
            "contestId": 1095,
            "index": "D",
            "name": "Circular Dance",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "implementation"
            ]
        },
        {
            "contestId": 1093,
            "index": "E",
            "name": "Intersection of Permutations",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 1093,
            "index": "D",
            "name": "Beautiful Graph",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1092,
            "index": "E",
            "name": "Minimal Diameter Forest",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1091,
            "index": "E",
            "name": "New Year and the Acquaintance Estimation",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2400,
            "tags": [
                "binary search",
                "data structures",
                "graphs",
                "greedy",
                "implementation",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1091,
            "index": "D",
            "name": "New Year and the Permutation Concatenation",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 1700,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1090,
            "index": "E",
            "name": "Horseback Riding",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "flows",
                "graphs"
            ]
        },
        {
            "contestId": 1090,
            "index": "D",
            "name": "Similar Arrays",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1089,
            "index": "E",
            "name": "Easy Chess",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1089,
            "index": "D",
            "name": "Distance Sum",
            "type": "PROGRAMMING",
            "rating": 3100,
            "tags": [
                "graphs"
            ]
        },
        {
            "contestId": 1088,
            "index": "E",
            "name": "Ehab and a component choosing problem",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "dp",
                "greedy",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 1088,
            "index": "D",
            "name": "Ehab and another another xor problem",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "implementation",
                "interactive"
            ]
        },
        {
            "contestId": 1085,
            "index": "E",
            "name": "Vasya and Templates",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "greedy",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 1085,
            "index": "D",
            "name": "Minimum Diameter Tree",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1083,
            "index": "E",
            "name": "The Fair Nut and Rectangles",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "data structures",
                "dp",
                "geometry"
            ]
        },
        {
            "contestId": 1083,
            "index": "D",
            "name": "The Fair Nut's getting crazy",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3500,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 1082,
            "index": "E",
            "name": "Increasing Frequency",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "binary search",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1082,
            "index": "D",
            "name": "Maximum Diameter Graph",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 1081,
            "index": "E",
            "name": "Missing Numbers",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1081,
            "index": "D",
            "name": "Maximum Distance",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "dsu",
                "graphs",
                "shortest paths",
                "sortings"
            ]
        },
        {
            "contestId": 1080,
            "index": "E",
            "name": "Sonya and Matrix Beauty",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2400,
            "tags": [
                "strings"
            ]
        },
        {
            "contestId": 1080,
            "index": "D",
            "name": "Olya and magical square",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1078,
            "index": "E",
            "name": "Negative Time Summation",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 3400,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1077,
            "index": "E",
            "name": "Thematic Contests",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1077,
            "index": "D",
            "name": "Cutting Out",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "binary search",
                "sortings"
            ]
        },
        {
            "contestId": 1076,
            "index": "E",
            "name": "Vasya and a Tree",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 1076,
            "index": "D",
            "name": "Edge Deletion",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        {
            "contestId": 1073,
            "index": "E",
            "name": "Segment Sum",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "bitmasks",
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1073,
            "index": "D",
            "name": "Berland Fair",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1071,
            "index": "E",
            "name": "Rain Protection",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3500,
            "tags": [
                "binary search",
                "geometry"
            ]
        },
        {
            "contestId": 1070,
            "index": "E",
            "name": "Getting Deals Done",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        {
            "contestId": 1070,
            "index": "D",
            "name": "Garbage Disposal",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "greedy"
            ]
        },
        {
            "contestId": 1067,
            "index": "E",
            "name": "Random Forest Rank",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "dp",
                "graph matchings",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 1067,
            "index": "D",
            "name": "Computer Game",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3100,
            "tags": [
                "dp",
                "greedy",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 1066,
            "index": "E",
            "name": "Binary Numbers AND Sum",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "data structures",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1066,
            "index": "D",
            "name": "Boxes Packing",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "binary search",
                "implementation"
            ]
        },
        {
            "contestId": 1065,
            "index": "E",
            "name": "Side Transmutations",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "combinatorics",
                "strings"
            ]
        },
        {
            "contestId": 1065,
            "index": "D",
            "name": "Three Pieces",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "dp",
                "shortest paths"
            ]
        },
        {
            "contestId": 1063,
            "index": "E",
            "name": "Lasers and Mirrors",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1063,
            "index": "D",
            "name": "Candies for Children",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2600,
            "tags": [
                "brute force",
                "math"
            ]
        },
        {
            "contestId": 1062,
            "index": "E",
            "name": "Company",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "binary search",
                "data structures",
                "dfs and similar",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1062,
            "index": "D",
            "name": "Fun with Integers",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "dfs and similar",
                "graphs",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1061,
            "index": "E",
            "name": "Politics",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "flows",
                "graphs"
            ]
        },
        {
            "contestId": 1061,
            "index": "D",
            "name": "TV Shows",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "data structures",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1060,
            "index": "E",
            "name": "Sergey and Subway",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 1060,
            "index": "D",
            "name": "Social Circles",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1059,
            "index": "E",
            "name": "Split the Tree",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1059,
            "index": "D",
            "name": "Nature Reserve",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "binary search",
                "geometry",
                "ternary search"
            ]
        },
        {
            "contestId": 1056,
            "index": "E",
            "name": "Check Transcription",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "brute force",
                "data structures",
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 1056,
            "index": "D",
            "name": "Decorate Apple Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "graphs",
                "greedy",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1055,
            "index": "E",
            "name": "Segments on the Line",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2500,
            "tags": [
                "binary search",
                "dp"
            ]
        },
        {
            "contestId": 1055,
            "index": "D",
            "name": "Refactoring",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2400,
            "tags": [
                "greedy",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 1054,
            "index": "E",
            "name": "Chips Puzzle",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1054,
            "index": "D",
            "name": "Changing Array",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1053,
            "index": "E",
            "name": "Euler tour",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "trees"
            ]
        },
        {
            "contestId": 1051,
            "index": "E",
            "name": "Vasya and Big Integers",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 1051,
            "index": "D",
            "name": "Bicolorings",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        {
            "contestId": 1045,
            "index": "E",
            "name": "Ancient civilizations",
            "type": "PROGRAMMING",
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "geometry"
            ]
        },
        {
            "contestId": 1045,
            "index": "D",
            "name": "Interstellar battle",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "math",
                "probabilities",
                "trees"
            ]
        },
        {
            "contestId": 1044,
            "index": "E",
            "name": "Grid Sort",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 3100,
            "tags": [
                "implementation"
            ]
        },
        {
            "contestId": 1044,
            "index": "D",
            "name": "Deduction Queries",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "data structures",
                "dsu"
            ]
        },
        {
            "contestId": 1043,
            "index": "E",
            "name": "Train Hard, Win Easy",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1043,
            "index": "D",
            "name": "Mysterious Crime",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "brute force",
                "combinatorics",
                "math",
                "meet-in-the-middle",
                "two pointers"
            ]
        },
        {
            "contestId": 1042,
            "index": "E",
            "name": "Vasya and Magic Matrix",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "dp",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 1042,
            "index": "D",
            "name": "Petya and Array",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "data structures",
                "divide and conquer",
                "two pointers"
            ]
        },
        {
            "contestId": 1041,
            "index": "E",
            "name": "Tree Reconstruction",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "data structures",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 1041,
            "index": "D",
            "name": "Glider",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "binary search",
                "data structures",
                "two pointers"
            ]
        },
        {
            "contestId": 1039,
            "index": "E",
            "name": "Summer Oenothera Exhibition",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3400,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 1039,
            "index": "D",
            "name": "You Are Given a Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2800,
            "tags": [
                "data structures",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 1038,
            "index": "E",
            "name": "Maximum Matching",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2400,
            "tags": [
                "bitmasks",
                "brute force",
                "dfs and similar",
                "dp",
                "graphs"
            ]
        },
        {
            "contestId": 1038,
            "index": "D",
            "name": "Slime",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1800,
            "tags": [
                "dp",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1037,
            "index": "E",
            "name": "Trips",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2200,
            "tags": [
                "graphs"
            ]
        },
        {
            "contestId": 1037,
            "index": "D",
            "name": "Valid BFS?",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "graphs",
                "shortest paths",
                "trees"
            ]
        },
        {
            "contestId": 1036,
            "index": "E",
            "name": "Covered Points",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "fft",
                "geometry",
                "number theory"
            ]
        },
        {
            "contestId": 1036,
            "index": "D",
            "name": "Vasya and Arrays",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 1034,
            "index": "E",
            "name": "Little C Loves 3 III",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "bitmasks",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1034,
            "index": "D",
            "name": "Intervals of Intervals",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3500,
            "tags": [
                "binary search",
                "data structures",
                "two pointers"
            ]
        },
        {
            "contestId": 1033,
            "index": "E",
            "name": "Hidden Bipartite Graph",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2800,
            "tags": [
                "binary search",
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "interactive"
            ]
        },
        {
            "contestId": 1033,
            "index": "D",
            "name": "Divisors",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2000,
            "tags": [
                "interactive",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1032,
            "index": "E",
            "name": "The Unbearable Lightness of Weights",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1032,
            "index": "D",
            "name": "Barcelonian Distance",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "geometry",
                "implementation"
            ]
        },
        {
            "contestId": 1031,
            "index": "E",
            "name": "Triple Flips",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1031,
            "index": "D",
            "name": "Minimum path",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "greedy"
            ]
        },
        {
            "contestId": 1030,
            "index": "E",
            "name": "Vasya and Good Sequences",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        {
            "contestId": 1030,
            "index": "D",
            "name": "Vasya and Triangle",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1800,
            "tags": [
                "geometry",
                "number theory"
            ]
        },
        {
            "contestId": 1029,
            "index": "E",
            "name": "Tree with Small Distances",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dp",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 1029,
            "index": "D",
            "name": "Concatenated Multiples",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1028,
            "index": "E",
            "name": "Restore Array",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1028,
            "index": "D",
            "name": "Order book",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1027,
            "index": "E",
            "name": "Inverse Coloring",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1027,
            "index": "D",
            "name": "Mouse Hunt",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1025,
            "index": "E",
            "name": "Colored Cubes",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "implementation",
                "matrices"
            ]
        },
        {
            "contestId": 1025,
            "index": "D",
            "name": "Recovering BST",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "brute force",
                "dp",
                "math",
                "number theory",
                "trees"
            ]
        },
        {
            "contestId": 1023,
            "index": "E",
            "name": "Down or Right",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "interactive",
                "matrices"
            ]
        },
        {
            "contestId": 1023,
            "index": "D",
            "name": "Array Restoration",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "data structures"
            ]
        },
        {
            "contestId": 1019,
            "index": "E",
            "name": "Raining season",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3200,
            "tags": [
                "data structures",
                "divide and conquer",
                "trees"
            ]
        },
        {
            "contestId": 1019,
            "index": "D",
            "name": "Large Triangle",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "binary search",
                "geometry",
                "sortings"
            ]
        },
        {
            "contestId": 1017,
            "index": "E",
            "name": "The Supersonic Rocket",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "geometry",
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 1017,
            "index": "D",
            "name": "The Wu",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "bitmasks",
                "brute force",
                "data structures"
            ]
        },
        {
            "contestId": 1016,
            "index": "E",
            "name": "Rest In The Shades",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "binary search",
                "geometry"
            ]
        },
        {
            "contestId": 1016,
            "index": "D",
            "name": "Vasya And The Matrix",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "flows",
                "math"
            ]
        },
        {
            "contestId": 1015,
            "index": "D",
            "name": "Walking Between Houses",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1012,
            "index": "E",
            "name": "Cycle sort",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "dsu",
                "math"
            ]
        },
        {
            "contestId": 1012,
            "index": "D",
            "name": "AB-Strings",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        {
            "contestId": 1010,
            "index": "E",
            "name": "Store",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2700,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 1010,
            "index": "D",
            "name": "Mars rover",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "graphs",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1009,
            "index": "E",
            "name": "Intercity Travelling",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "combinatorics",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 1009,
            "index": "D",
            "name": "Relatively Prime Graph",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "brute force",
                "constructive algorithms",
                "graphs",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1007,
            "index": "E",
            "name": "Mini Metro",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3400,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 1007,
            "index": "D",
            "name": "Ants",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3200,
            "tags": [
                "2-sat",
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 1006,
            "index": "E",
            "name": "Military Problem",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 1006,
            "index": "D",
            "name": "Two Strings Swaps",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "implementation"
            ]
        },
        {
            "contestId": 1005,
            "index": "D",
            "name": "Polycarp and Div 3",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "dp",
                "greedy",
                "number theory"
            ]
        },
        {
            "contestId": 1004,
            "index": "E",
            "name": "Sonya and Ice Cream",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "greedy",
                "shortest paths",
                "trees"
            ]
        },
        {
            "contestId": 1004,
            "index": "D",
            "name": "Sonya and Matrix",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1003,
            "index": "E",
            "name": "Tree Constructing",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 1003,
            "index": "D",
            "name": "Coins and Queries",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "greedy"
            ]
        },
        {
            "contestId": 1001,
            "index": "E",
            "name": "Distinguish Bell states",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 1001,
            "index": "D",
            "name": "Distinguish plus state and minus state",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 1000,
            "index": "E",
            "name": "We Need More Bosses",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 1000,
            "index": "D",
            "name": "Yet Another Problem On a Subsequence",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        {
            "contestId": 999,
            "index": "E",
            "name": "Reachability from the Capital",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 999,
            "index": "D",
            "name": "Equalize the Remainders",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 997,
            "index": "E",
            "name": "Good Subsegments",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3000,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 997,
            "index": "D",
            "name": "Cycles in product",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "combinatorics",
                "divide and conquer",
                "trees"
            ]
        },
        {
            "contestId": 995,
            "index": "E",
            "name": "Number Clicker",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2700,
            "tags": [
                "divide and conquer",
                "graphs",
                "meet-in-the-middle",
                "number theory"
            ]
        },
        {
            "contestId": 995,
            "index": "D",
            "name": "Game",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2500,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 993,
            "index": "E",
            "name": "Nikita and Order Statistics",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "chinese remainder theorem",
                "fft",
                "math"
            ]
        },
        {
            "contestId": 993,
            "index": "D",
            "name": "Compute Power",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2500,
            "tags": [
                "binary search",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 992,
            "index": "E",
            "name": "Nastya and King-Shamans",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        {
            "contestId": 992,
            "index": "D",
            "name": "Nastya and a Game",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 991,
            "index": "E",
            "name": "Bus Number",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "brute force",
                "combinatorics",
                "math"
            ]
        },
        {
            "contestId": 991,
            "index": "D",
            "name": "Bishwock",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 990,
            "index": "E",
            "name": "Post Lamps",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        {
            "contestId": 990,
            "index": "D",
            "name": "Graph And Its Complement",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 989,
            "index": "E",
            "name": "A Trance of Nightfall",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "dp",
                "geometry",
                "matrices",
                "probabilities"
            ]
        },
        {
            "contestId": 989,
            "index": "D",
            "name": "A Shade of Moonlight",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "binary search",
                "geometry",
                "math",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 988,
            "index": "E",
            "name": "Divisibility by 25",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        {
            "contestId": 988,
            "index": "D",
            "name": "Points and Powers of Two",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "brute force",
                "math"
            ]
        },
        {
            "contestId": 986,
            "index": "E",
            "name": "Prince's Problem",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2800,
            "tags": [
                "brute force",
                "data structures",
                "math",
                "number theory",
                "trees"
            ]
        },
        {
            "contestId": 986,
            "index": "D",
            "name": "Perfect Encoding",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "fft",
                "math"
            ]
        },
        {
            "contestId": 985,
            "index": "E",
            "name": "Pencils and Boxes",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 985,
            "index": "D",
            "name": "Sand Fortress",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 983,
            "index": "E",
            "name": "NN country",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "binary search",
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 983,
            "index": "D",
            "name": "Arkady and Rectangles",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3300,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 982,
            "index": "E",
            "name": "Billiard",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "geometry",
                "number theory"
            ]
        },
        {
            "contestId": 982,
            "index": "D",
            "name": "Shark",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "brute force",
                "data structures",
                "dsu",
                "trees"
            ]
        },
        {
            "contestId": 981,
            "index": "E",
            "name": "Addition on Segments",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "data structures",
                "divide and conquer",
                "dp"
            ]
        },
        {
            "contestId": 981,
            "index": "D",
            "name": "Bookshelves",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "bitmasks",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 980,
            "index": "E",
            "name": "The Number Games",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "data structures",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 980,
            "index": "D",
            "name": "Perfect Groups",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 979,
            "index": "E",
            "name": "Kuro and Topological Parity",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2400,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 979,
            "index": "D",
            "name": "Kuro and GCD and XOR and SUM",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2200,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force",
                "data structures",
                "dp",
                "dsu",
                "greedy",
                "math",
                "number theory",
                "strings",
                "trees"
            ]
        },
        {
            "contestId": 978,
            "index": "E",
            "name": "Bus Video System",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        {
            "contestId": 978,
            "index": "D",
            "name": "Almost Arithmetic Progression",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 977,
            "index": "E",
            "name": "Cyclic Components",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 977,
            "index": "D",
            "name": "Divide by three, multiply by two",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "dfs and similar",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 976,
            "index": "E",
            "name": "Well played!",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 976,
            "index": "D",
            "name": "Degree Set",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 975,
            "index": "E",
            "name": "Hag's Khashba",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 975,
            "index": "D",
            "name": "Ghosts",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "geometry",
                "math"
            ]
        },
        {
            "contestId": 965,
            "index": "E",
            "name": "Short Code",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "strings",
                "trees"
            ]
        },
        {
            "contestId": 965,
            "index": "D",
            "name": "Single-use Stones",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "binary search",
                "flows",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 963,
            "index": "E",
            "name": "Circles of Waiting",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 963,
            "index": "D",
            "name": "Frequency of String",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "hashing",
                "string suffix structures",
                "strings"
            ]
        },
        {
            "contestId": 962,
            "index": "E",
            "name": "Byteland, Berland and Disputed Cities",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 962,
            "index": "D",
            "name": "Merge Equals",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 961,
            "index": "E",
            "name": "Tufurama",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 961,
            "index": "D",
            "name": "Pair Of Lines",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 960,
            "index": "E",
            "name": "Alternating Tree",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "combinatorics",
                "dfs and similar",
                "divide and conquer",
                "dp",
                "probabilities",
                "trees"
            ]
        },
        {
            "contestId": 960,
            "index": "D",
            "name": "Full Binary Tree Queries",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "brute force",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 959,
            "index": "E",
            "name": "Mahmoud and Ehab and the xor-MST",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "bitmasks",
                "dp",
                "graphs",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 959,
            "index": "D",
            "name": "Mahmoud and Ehab and another array construction task",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 955,
            "index": "E",
            "name": "Icicles",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": []
        },
        {
            "contestId": 955,
            "index": "D",
            "name": "Scissors",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "brute force",
                "strings"
            ]
        },
        {
            "contestId": 954,
            "index": "E",
            "name": "Water Taps",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "binary search",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 954,
            "index": "D",
            "name": "Fight Against Traffic",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "dfs and similar",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 952,
            "index": "E",
            "name": "Cheese Board",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": []
        },
        {
            "contestId": 952,
            "index": "D",
            "name": "I'm Feeling Lucky!",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "probabilities"
            ]
        },
        {
            "contestId": 949,
            "index": "E",
            "name": "Binary Cards",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2700,
            "tags": [
                "brute force"
            ]
        },
        {
            "contestId": 949,
            "index": "D",
            "name": "Curfew",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2300,
            "tags": [
                "binary search",
                "brute force",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 946,
            "index": "E",
            "name": "Largest Beautiful Number",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 946,
            "index": "D",
            "name": "Timetable",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 940,
            "index": "E",
            "name": "Cashback",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 940,
            "index": "D",
            "name": "Alena And The Heater",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "binary search",
                "implementation"
            ]
        },
        {
            "contestId": 939,
            "index": "E",
            "name": "Maximize!",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1800,
            "tags": [
                "binary search",
                "greedy",
                "ternary search",
                "two pointers"
            ]
        },
        {
            "contestId": 939,
            "index": "D",
            "name": "Love Rescue",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1600,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 938,
            "index": "E",
            "name": "Max History",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        {
            "contestId": 938,
            "index": "D",
            "name": "Buy a Ticket",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "data structures",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 936,
            "index": "E",
            "name": "Iqea",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3400,
            "tags": [
                "data structures",
                "dfs and similar",
                "divide and conquer",
                "dsu",
                "shortest paths",
                "trees"
            ]
        },
        {
            "contestId": 936,
            "index": "D",
            "name": "World of Tank",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3000,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 935,
            "index": "E",
            "name": "Fafa and Ancient Mathematics",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 935,
            "index": "D",
            "name": "Fafa and Ancient Alphabet",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 933,
            "index": "E",
            "name": "A Preponderant Reunion",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "dp"
            ]
        },
        {
            "contestId": 933,
            "index": "D",
            "name": "A Creative Cutout",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2900,
            "tags": [
                "brute force",
                "combinatorics",
                "math"
            ]
        },
        {
            "contestId": 932,
            "index": "E",
            "name": "Team Work",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 932,
            "index": "D",
            "name": "Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "binary search",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 930,
            "index": "E",
            "name": "Coins Exhibition",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "data structures",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 930,
            "index": "D",
            "name": "Game with Tokens",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "data structures",
                "games",
                "implementation"
            ]
        },
        {
            "contestId": 929,
            "index": "D",
            "name": "Пограничные врата",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": []
        },
        {
            "contestId": 928,
            "index": "D",
            "name": "Autocompletion",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 1900,
            "tags": [
                "*special",
                "strings",
                "trees"
            ]
        },
        {
            "contestId": 926,
            "index": "E",
            "name": "Merge Equal Elements",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "data structures"
            ]
        },
        {
            "contestId": 926,
            "index": "D",
            "name": "Choose Place",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": []
        },
        {
            "contestId": 925,
            "index": "E",
            "name": "May Holidays",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2900,
            "tags": [
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 925,
            "index": "D",
            "name": "Aztec Catacombs",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 924,
            "index": "E",
            "name": "Wardrobe",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2700,
            "tags": []
        },
        {
            "contestId": 924,
            "index": "D",
            "name": "Contact ATC",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": []
        },
        {
            "contestId": 923,
            "index": "E",
            "name": "Perpetual Subtraction",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3100,
            "tags": [
                "fft",
                "math",
                "matrices"
            ]
        },
        {
            "contestId": 923,
            "index": "D",
            "name": "Picking Strings",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 922,
            "index": "E",
            "name": "Birds",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 922,
            "index": "D",
            "name": "Robot Vacuum Cleaner",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1800,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 920,
            "index": "E",
            "name": "Connected Components?",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "data structures",
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 920,
            "index": "D",
            "name": "Tanks",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "dp",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 919,
            "index": "E",
            "name": "Congruence Equation",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "chinese remainder theorem",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 919,
            "index": "D",
            "name": "Substring",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs"
            ]
        },
        {
            "contestId": 917,
            "index": "E",
            "name": "Upside Down",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 3400,
            "tags": [
                "data structures",
                "string suffix structures",
                "strings",
                "trees"
            ]
        },
        {
            "contestId": 917,
            "index": "D",
            "name": "Stranger Trees",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "dp",
                "math",
                "matrices",
                "trees"
            ]
        },
        {
            "contestId": 916,
            "index": "E",
            "name": "Jamie and Tree",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 916,
            "index": "D",
            "name": "Jamie and To-do List",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2200,
            "tags": [
                "data structures",
                "interactive",
                "trees"
            ]
        },
        {
            "contestId": 915,
            "index": "E",
            "name": "Physical Education Lessons",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "data structures",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 915,
            "index": "D",
            "name": "Almost Acyclic Graph",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 914,
            "index": "E",
            "name": "Palindromes in a Tree",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "bitmasks",
                "data structures",
                "divide and conquer",
                "trees"
            ]
        },
        {
            "contestId": 914,
            "index": "D",
            "name": "Bash and a Tough Math Puzzle",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "data structures",
                "number theory"
            ]
        },
        {
            "contestId": 913,
            "index": "E",
            "name": "Logical Expression",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2400,
            "tags": [
                "bitmasks",
                "dp",
                "shortest paths"
            ]
        },
        {
            "contestId": 913,
            "index": "D",
            "name": "Too Easy Problems",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1800,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 912,
            "index": "E",
            "name": "Prime Gift",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "binary search",
                "dfs and similar",
                "math",
                "meet-in-the-middle",
                "number theory",
                "two pointers"
            ]
        },
        {
            "contestId": 912,
            "index": "D",
            "name": "Fishes",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures",
                "graphs",
                "greedy",
                "probabilities",
                "shortest paths"
            ]
        },
        {
            "contestId": 911,
            "index": "E",
            "name": "Stack Sorting",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 911,
            "index": "D",
            "name": "Inversion Counting",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "brute force",
                "math"
            ]
        },
        {
            "contestId": 909,
            "index": "E",
            "name": "Coprocessor",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 909,
            "index": "D",
            "name": "Colorful Points",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 908,
            "index": "E",
            "name": "New Year and Entity Enumeration",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2500,
            "tags": [
                "bitmasks",
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 908,
            "index": "D",
            "name": "New Year and Arbitrary Arrangement",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2200,
            "tags": [
                "dp",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 906,
            "index": "E",
            "name": "Reverses",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3300,
            "tags": [
                "dp",
                "string suffix structures",
                "strings"
            ]
        },
        {
            "contestId": 906,
            "index": "D",
            "name": "Power Tower",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "chinese remainder theorem",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 903,
            "index": "E",
            "name": "Swapping Characters",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "brute force",
                "hashing",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 903,
            "index": "D",
            "name": "Almost Difference",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "data structures",
                "math"
            ]
        },
        {
            "contestId": 901,
            "index": "E",
            "name": "Cyclic Cipher",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3300,
            "tags": [
                "fft",
                "math"
            ]
        },
        {
            "contestId": 901,
            "index": "D",
            "name": "Weighting a Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 900,
            "index": "E",
            "name": "Maximum Questions",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "data structures",
                "dp",
                "strings"
            ]
        },
        {
            "contestId": 900,
            "index": "D",
            "name": "Unusual Sequences",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "combinatorics",
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 899,
            "index": "E",
            "name": "Segments Removal",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2000,
            "tags": [
                "data structures",
                "dsu",
                "flows",
                "implementation",
                "two pointers"
            ]
        },
        {
            "contestId": 899,
            "index": "D",
            "name": "Shovel Sale",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 898,
            "index": "E",
            "name": "Squares and not squares",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 898,
            "index": "D",
            "name": "Alarm Clock",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1600,
            "tags": [
                "greedy"
            ]
        },
        {
            "contestId": 896,
            "index": "E",
            "name": "Welcome home, Chtholly",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "data structures",
                "dsu"
            ]
        },
        {
            "contestId": 896,
            "index": "D",
            "name": "Nephren Runs a Cinema",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "chinese remainder theorem",
                "combinatorics",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 895,
            "index": "E",
            "name": "Eyes Closed",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "data structures",
                "probabilities"
            ]
        },
        {
            "contestId": 895,
            "index": "D",
            "name": "String Mark",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "math",
                "strings"
            ]
        },
        {
            "contestId": 894,
            "index": "E",
            "name": "Ralph and Mushrooms",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "dp",
                "graphs"
            ]
        },
        {
            "contestId": 894,
            "index": "D",
            "name": "Ralph And His Tour in Binary Country",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "brute force",
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 893,
            "index": "E",
            "name": "Counting Arrays",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "combinatorics",
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 893,
            "index": "D",
            "name": "Credit Card",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 891,
            "index": "E",
            "name": "Lust",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "combinatorics",
                "math",
                "matrices"
            ]
        },
        {
            "contestId": 891,
            "index": "D",
            "name": "Sloth",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3100,
            "tags": [
                "dfs and similar",
                "dp",
                "graph matchings",
                "trees"
            ]
        },
        {
            "contestId": 889,
            "index": "E",
            "name": "Mod Mod Mod",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3000,
            "tags": [
                "binary search",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 888,
            "index": "E",
            "name": "Maximum Subsequence",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "bitmasks",
                "divide and conquer",
                "meet-in-the-middle"
            ]
        },
        {
            "contestId": 888,
            "index": "D",
            "name": "Almost Identity Permutations",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 887,
            "index": "E",
            "name": "Little Brother",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "binary search",
                "geometry",
                "sortings"
            ]
        },
        {
            "contestId": 887,
            "index": "D",
            "name": "Ratings and Reality Shows",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "data structures",
                "two pointers"
            ]
        },
        {
            "contestId": 886,
            "index": "E",
            "name": "Maximum Element",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 886,
            "index": "D",
            "name": "Restoration of string",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 884,
            "index": "E",
            "name": "Binary Matrix",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "dsu"
            ]
        },
        {
            "contestId": 884,
            "index": "D",
            "name": "Boxes And Balls",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 883,
            "index": "E",
            "name": "Field of Wonders",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 883,
            "index": "D",
            "name": "Packmen Strike Back",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "binary search",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 878,
            "index": "E",
            "name": "Numbers on the blackboard",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3300,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        {
            "contestId": 878,
            "index": "D",
            "name": "Magic Breeding",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "bitmasks"
            ]
        },
        {
            "contestId": 877,
            "index": "E",
            "name": "Danil and a Part-time Job",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 877,
            "index": "D",
            "name": "Olya and Energy Drinks",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures",
                "dfs and similar",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 875,
            "index": "E",
            "name": "Delivery Club",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "binary search",
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 875,
            "index": "D",
            "name": "High Cry",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2200,
            "tags": [
                "binary search",
                "bitmasks",
                "combinatorics",
                "data structures",
                "divide and conquer"
            ]
        },
        {
            "contestId": 873,
            "index": "E",
            "name": "Awards For Contestants",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "brute force",
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 873,
            "index": "D",
            "name": "Merge Sort",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "divide and conquer"
            ]
        },
        {
            "contestId": 871,
            "index": "E",
            "name": "Restore the Tree",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2900,
            "tags": [
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 870,
            "index": "E",
            "name": "Points, Lines and Ready-made Titles",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 870,
            "index": "D",
            "name": "Something with XOR Queries",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2000,
            "tags": [
                "brute force",
                "interactive",
                "probabilities"
            ]
        },
        {
            "contestId": 869,
            "index": "E",
            "name": "The Untended Antiquity",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures",
                "hashing"
            ]
        },
        {
            "contestId": 869,
            "index": "D",
            "name": "The Overdosing Ubiquity",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2800,
            "tags": [
                "brute force",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 868,
            "index": "E",
            "name": "Policeman and a Tree",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2700,
            "tags": [
                "dp",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 868,
            "index": "D",
            "name": "Huge Strings",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "brute force",
                "dp",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 865,
            "index": "E",
            "name": "Hex Dyslexia",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3300,
            "tags": [
                "bitmasks",
                "brute force",
                "dp",
                "graphs"
            ]
        },
        {
            "contestId": 865,
            "index": "D",
            "name": "Buy Low Sell High",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 864,
            "index": "E",
            "name": "Fire",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "dp",
                "sortings"
            ]
        },
        {
            "contestId": 864,
            "index": "D",
            "name": "Make a Permutation!",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1500,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 863,
            "index": "E",
            "name": "Turn Off The TV",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 863,
            "index": "D",
            "name": "Yet Another Array Queries Problem",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 862,
            "index": "E",
            "name": "Mahmoud and Ehab and the function",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 862,
            "index": "D",
            "name": "Mahmoud and Ehab and the binary string",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "binary search",
                "divide and conquer",
                "interactive"
            ]
        },
        {
            "contestId": 860,
            "index": "E",
            "name": "Arkady and a Nobody-men",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2700,
            "tags": [
                "data structures",
                "dfs and similar",
                "trees"
            ]
        },
        {
            "contestId": 859,
            "index": "E",
            "name": "Desk Disorder",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "dfs and similar",
                "dsu",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 859,
            "index": "D",
            "name": "Third Month Insanity",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2100,
            "tags": [
                "dp",
                "probabilities",
                "trees"
            ]
        },
        {
            "contestId": 858,
            "index": "E",
            "name": "Tests Renumeration",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 858,
            "index": "D",
            "name": "Polycarp's phone book",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1600,
            "tags": [
                "data structures",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 856,
            "index": "E",
            "name": "Satellites",
            "type": "PROGRAMMING",
            "rating": 3100,
            "tags": []
        },
        {
            "contestId": 856,
            "index": "D",
            "name": "Masha and Cactus",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 855,
            "index": "E",
            "name": "Salazar Slytherin's Locket",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        {
            "contestId": 855,
            "index": "D",
            "name": "Rowena Ravenclaw's Diadem",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "trees"
            ]
        },
        {
            "contestId": 853,
            "index": "E",
            "name": "Lada Malina",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3400,
            "tags": [
                "data structures",
                "geometry"
            ]
        },
        {
            "contestId": 853,
            "index": "D",
            "name": "Michael and Charging Stations",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2400,
            "tags": [
                "binary search",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 852,
            "index": "E",
            "name": "Casinos and travel",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 852,
            "index": "D",
            "name": "Exploration plan",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "flows",
                "graph matchings",
                "shortest paths"
            ]
        },
        {
            "contestId": 850,
            "index": "E",
            "name": "Random Elections",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2800,
            "tags": [
                "bitmasks",
                "brute force",
                "divide and conquer",
                "fft",
                "math"
            ]
        },
        {
            "contestId": 850,
            "index": "D",
            "name": "Tournament Construction",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "dp",
                "graphs",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 848,
            "index": "E",
            "name": "Days of Floral Colours",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3400,
            "tags": [
                "combinatorics",
                "divide and conquer",
                "dp",
                "fft",
                "math"
            ]
        },
        {
            "contestId": 848,
            "index": "D",
            "name": "Shake It!",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2900,
            "tags": [
                "combinatorics",
                "dp",
                "flows",
                "graphs"
            ]
        },
        {
            "contestId": 847,
            "index": "E",
            "name": "Packmen",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "binary search",
                "dp"
            ]
        },
        {
            "contestId": 847,
            "index": "D",
            "name": "Dog Show",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 846,
            "index": "E",
            "name": "Chemistry in Berland",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "dfs and similar",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 846,
            "index": "D",
            "name": "Monitor",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        {
            "contestId": 845,
            "index": "E",
            "name": "Fire in the City",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        {
            "contestId": 845,
            "index": "D",
            "name": "Driving Test",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "data structures",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 843,
            "index": "E",
            "name": "Maximum Flow",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3000,
            "tags": [
                "flows",
                "graphs"
            ]
        },
        {
            "contestId": 843,
            "index": "D",
            "name": "Dynamic Shortest Path",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3400,
            "tags": [
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 842,
            "index": "E",
            "name": "Nikita and game",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "binary search",
                "dfs and similar",
                "divide and conquer",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 842,
            "index": "D",
            "name": "Vitya and Strange Lesson",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        {
            "contestId": 840,
            "index": "E",
            "name": "In a Trap",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "trees"
            ]
        },
        {
            "contestId": 840,
            "index": "D",
            "name": "Destiny",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "data structures",
                "probabilities"
            ]
        },
        {
            "contestId": 839,
            "index": "E",
            "name": "Mother of Dragons",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "brute force",
                "graphs",
                "math",
                "meet-in-the-middle"
            ]
        },
        {
            "contestId": 839,
            "index": "D",
            "name": "Winter is here",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "combinatorics",
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 838,
            "index": "E",
            "name": "Convex Countour",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 838,
            "index": "D",
            "name": "Airplane Arrangements",
            "type": "PROGRAMMING",
            "rating": 2700,
            "tags": [
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 837,
            "index": "E",
            "name": "Vasya's Function",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 837,
            "index": "D",
            "name": "Round Subset",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dp",
                "math"
            ]
        },
        {
            "contestId": 835,
            "index": "E",
            "name": "The penguin's game",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "interactive"
            ]
        },
        {
            "contestId": 835,
            "index": "D",
            "name": "Palindromic characteristics",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "brute force",
                "dp",
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 833,
            "index": "E",
            "name": "Caramel Clouds",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3400,
            "tags": [
                "data structures",
                "dp",
                "sortings"
            ]
        },
        {
            "contestId": 833,
            "index": "D",
            "name": "Red-Black Cobweb",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2800,
            "tags": [
                "data structures",
                "divide and conquer",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 832,
            "index": "E",
            "name": "Vasya and Shifts",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "matrices"
            ]
        },
        {
            "contestId": 832,
            "index": "D",
            "name": "Misha, Grisha and Underground",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 830,
            "index": "E",
            "name": "Perpetual Motion Machine",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3100,
            "tags": [
                "constructive algorithms",
                "dp",
                "graphs",
                "implementation",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 830,
            "index": "D",
            "name": "Singer House",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2800,
            "tags": [
                "combinatorics",
                "dp",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 827,
            "index": "E",
            "name": "Rusty String",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2700,
            "tags": [
                "fft",
                "math",
                "strings"
            ]
        },
        {
            "contestId": 827,
            "index": "D",
            "name": "Best Edge Weight",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2700,
            "tags": [
                "data structures",
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 825,
            "index": "E",
            "name": "Minimal Labels",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "data structures",
                "dfs and similar",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 825,
            "index": "D",
            "name": "Suitable Replacement",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "binary search",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 822,
            "index": "E",
            "name": "Liar",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2400,
            "tags": [
                "binary search",
                "dp",
                "hashing",
                "string suffix structures"
            ]
        },
        {
            "contestId": 822,
            "index": "D",
            "name": "My pretty girl Noora",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1800,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 821,
            "index": "E",
            "name": "Okabe and El Psy Kongroo",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "dp",
                "matrices"
            ]
        },
        {
            "contestId": 821,
            "index": "D",
            "name": "Okabe and City",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 819,
            "index": "E",
            "name": "Mister B and Flight to the Moon",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 819,
            "index": "D",
            "name": "Mister B and Astronomers",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "number theory"
            ]
        },
        {
            "contestId": 818,
            "index": "E",
            "name": "Card Game Again",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "data structures",
                "number theory",
                "two pointers"
            ]
        },
        {
            "contestId": 818,
            "index": "D",
            "name": "Multicolored Cars",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 817,
            "index": "E",
            "name": "Choosing The Commander",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "bitmasks",
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 817,
            "index": "D",
            "name": "Imbalanced Array",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "data structures",
                "divide and conquer",
                "dsu",
                "sortings"
            ]
        },
        {
            "contestId": 815,
            "index": "E",
            "name": "Karen and Neighborhood",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 815,
            "index": "D",
            "name": "Karen and Cards",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2800,
            "tags": [
                "binary search",
                "combinatorics",
                "data structures",
                "geometry"
            ]
        },
        {
            "contestId": 814,
            "index": "E",
            "name": "An unavoidable detour for home",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "combinatorics",
                "dp",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 814,
            "index": "D",
            "name": "An overnight dance in discotheque",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "dp",
                "geometry",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 813,
            "index": "E",
            "name": "Army Creation",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        {
            "contestId": 813,
            "index": "D",
            "name": "Two Melodies",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "dp",
                "flows"
            ]
        },
        {
            "contestId": 812,
            "index": "E",
            "name": "Sagheer and Apple Tree",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "games",
                "trees"
            ]
        },
        {
            "contestId": 812,
            "index": "D",
            "name": "Sagheer and Kindergarten",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "dfs and similar",
                "graphs",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 811,
            "index": "E",
            "name": "Vladik and Entertaining Flags",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "data structures",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 811,
            "index": "D",
            "name": "Vladik and Favorite Game",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "interactive"
            ]
        },
        {
            "contestId": 809,
            "index": "E",
            "name": "Surprise me!",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "divide and conquer",
                "math",
                "number theory",
                "trees"
            ]
        },
        {
            "contestId": 809,
            "index": "D",
            "name": "Hitchhiking in the Baltic States",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 808,
            "index": "E",
            "name": "Selling Souvenirs",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "binary search",
                "dp",
                "greedy",
                "ternary search"
            ]
        },
        {
            "contestId": 808,
            "index": "D",
            "name": "Array Division",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 804,
            "index": "E",
            "name": "The same permutation ",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 804,
            "index": "D",
            "name": "Expected diameter of a tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "binary search",
                "brute force",
                "dfs and similar",
                "dp",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 803,
            "index": "E",
            "name": "Roma and Poker",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "dp",
                "graphs"
            ]
        },
        {
            "contestId": 803,
            "index": "D",
            "name": "Magazine Ad",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "greedy"
            ]
        },
        {
            "contestId": 802,
            "index": "E",
            "name": "Marmots (medium)",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 802,
            "index": "D",
            "name": "Marmots (easy)",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 799,
            "index": "E",
            "name": "Aquarium decoration",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "data structures",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 799,
            "index": "D",
            "name": "Field expansion",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "brute force",
                "dp",
                "meet-in-the-middle"
            ]
        },
        {
            "contestId": 798,
            "index": "E",
            "name": "Mike and code of a permutation",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "data structures",
                "graphs",
                "sortings"
            ]
        },
        {
            "contestId": 798,
            "index": "D",
            "name": "Mike and distribution",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 797,
            "index": "E",
            "name": "Array Queries",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "brute force",
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 797,
            "index": "D",
            "name": "Broken BST",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "data structures",
                "dfs and similar"
            ]
        },
        {
            "contestId": 796,
            "index": "E",
            "name": "Exam Cheating",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "binary search",
                "dp"
            ]
        },
        {
            "contestId": 796,
            "index": "D",
            "name": "Police Stations",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "graphs",
                "shortest paths",
                "trees"
            ]
        },
        {
            "contestId": 794,
            "index": "E",
            "name": "Choosing Carrot",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "games",
                "math"
            ]
        },
        {
            "contestId": 794,
            "index": "D",
            "name": "Labelling Cities",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "dfs and similar",
                "graphs",
                "hashing"
            ]
        },
        {
            "contestId": 793,
            "index": "E",
            "name": "Problem of offices",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 793,
            "index": "D",
            "name": "Presents in Bankopolis",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dp",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 792,
            "index": "E",
            "name": "Colored Balls",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 792,
            "index": "D",
            "name": "Paths in a Complete Binary Tree",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "bitmasks",
                "trees"
            ]
        },
        {
            "contestId": 788,
            "index": "E",
            "name": "New task",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2900,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 788,
            "index": "D",
            "name": "Finding lines",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "divide and conquer",
                "interactive"
            ]
        },
        {
            "contestId": 786,
            "index": "E",
            "name": "ALT",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "data structures",
                "flows",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 786,
            "index": "D",
            "name": "Rap God",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3400,
            "tags": [
                "data structures",
                "dfs and similar",
                "hashing",
                "strings",
                "trees"
            ]
        },
        {
            "contestId": 785,
            "index": "E",
            "name": "Anton and Permutation",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "brute force",
                "data structures"
            ]
        },
        {
            "contestId": 785,
            "index": "D",
            "name": "Anton and School - 2",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "combinatorics",
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 784,
            "index": "E",
            "name": "Twisted Circuit",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "*special",
                "brute force",
                "implementation"
            ]
        },
        {
            "contestId": 784,
            "index": "D",
            "name": "Touchy-Feely Palindromes",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        {
            "contestId": 780,
            "index": "E",
            "name": "Underground Lab",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 780,
            "index": "D",
            "name": "Innokenty and a Football League",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "2-sat",
                "graphs",
                "greedy",
                "implementation",
                "shortest paths",
                "strings"
            ]
        },
        {
            "contestId": 778,
            "index": "E",
            "name": "Selling Numbers",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3000,
            "tags": [
                "dp",
                "sortings"
            ]
        },
        {
            "contestId": 778,
            "index": "D",
            "name": "Parquet Re-laying",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2700,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 777,
            "index": "E",
            "name": "Hanoi Factory",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "brute force",
                "data structures",
                "dp",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 777,
            "index": "D",
            "name": "Cloud of Hashtags",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "binary search",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 776,
            "index": "E",
            "name": "The Holmes Children",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 776,
            "index": "D",
            "name": "The Door Problem",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "2-sat",
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 774,
            "index": "E",
            "name": "Big Number and Remainder",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "*special",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 774,
            "index": "D",
            "name": "Lie or Truth",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "*special",
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 773,
            "index": "E",
            "name": "Blog Post Rating",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 3000,
            "tags": [
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 773,
            "index": "D",
            "name": "Perishable Roads",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "dp",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 772,
            "index": "E",
            "name": "Verifying Kingdom",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3200,
            "tags": [
                "binary search",
                "divide and conquer",
                "interactive",
                "trees"
            ]
        },
        {
            "contestId": 772,
            "index": "D",
            "name": "Varying Kibibits",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2700,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        {
            "contestId": 771,
            "index": "E",
            "name": "Bear and Rectangle Strips",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3000,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 771,
            "index": "D",
            "name": "Bear and Company",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2500,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 770,
            "index": "D",
            "name": "Draw Brackets!",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        {
            "contestId": 769,
            "index": "D",
            "name": "k-Interesting Pairs Of Integers",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "*special",
                "bitmasks",
                "brute force",
                "meet-in-the-middle"
            ]
        },
        {
            "contestId": 768,
            "index": "E",
            "name": "Game of Stones",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "bitmasks",
                "dp",
                "games"
            ]
        },
        {
            "contestId": 768,
            "index": "D",
            "name": "Jon and Orbs",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2200,
            "tags": [
                "dp",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 767,
            "index": "E",
            "name": "Change-free",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "greedy"
            ]
        },
        {
            "contestId": 767,
            "index": "D",
            "name": "Cartons of milk",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 766,
            "index": "E",
            "name": "Mahmoud and a xor trip",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "dp",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 766,
            "index": "D",
            "name": "Mahmoud and a Dictionary",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "data structures",
                "dfs and similar",
                "dp",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 765,
            "index": "E",
            "name": "Tree Folding",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "dp",
                "greedy",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 765,
            "index": "D",
            "name": "Artsem and Saunders",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dsu",
                "math"
            ]
        },
        {
            "contestId": 763,
            "index": "E",
            "name": "Timofey and our friends animals",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "data structures",
                "divide and conquer",
                "dsu"
            ]
        },
        {
            "contestId": 763,
            "index": "D",
            "name": "Timofey and a flat tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "data structures",
                "graphs",
                "hashing",
                "shortest paths",
                "trees"
            ]
        },
        {
            "contestId": 762,
            "index": "E",
            "name": "Radio stations",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        {
            "contestId": 762,
            "index": "D",
            "name": "Maximum path",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "dp",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 761,
            "index": "E",
            "name": "Dasha and Puzzle",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 761,
            "index": "D",
            "name": "Dasha and Very Difficult Problem",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 758,
            "index": "E",
            "name": "Broken Tree",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 758,
            "index": "D",
            "name": "Ability To Convert",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy",
                "math",
                "strings"
            ]
        },
        {
            "contestId": 757,
            "index": "E",
            "name": "Bash Plays with Functions",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "brute force",
                "combinatorics",
                "dp",
                "number theory"
            ]
        },
        {
            "contestId": 757,
            "index": "D",
            "name": "Felicity's Big Secret Revealed",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        {
            "contestId": 756,
            "index": "E",
            "name": "Byteland coins",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 756,
            "index": "D",
            "name": "Bacterial Melee",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "brute force",
                "combinatorics",
                "dp",
                "string suffix structures"
            ]
        },
        {
            "contestId": 755,
            "index": "E",
            "name": "PolandBall and White-Red graph",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 755,
            "index": "D",
            "name": "PolandBall and Polygon",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2000,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 754,
            "index": "E",
            "name": "Dasha and cyclic table",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "bitmasks",
                "brute force",
                "fft",
                "strings",
                "trees"
            ]
        },
        {
            "contestId": 754,
            "index": "D",
            "name": "Fedor and coupons",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 750,
            "index": "E",
            "name": "New Year and Old Subsequence",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2600,
            "tags": [
                "data structures",
                "divide and conquer",
                "dp",
                "matrices"
            ]
        },
        {
            "contestId": 750,
            "index": "D",
            "name": "New Year and Fireworks",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "brute force",
                "data structures",
                "dfs and similar",
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 749,
            "index": "E",
            "name": "Inversions After Shuffle",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures",
                "probabilities"
            ]
        },
        {
            "contestId": 749,
            "index": "D",
            "name": "Leaving Auction",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        {
            "contestId": 748,
            "index": "E",
            "name": "Santa Claus and Tangerines",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 748,
            "index": "D",
            "name": "Santa Claus and a Palindrome",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 747,
            "index": "E",
            "name": "Comments",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "expression parsing",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 747,
            "index": "D",
            "name": "Winter Is Coming",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "dp",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 746,
            "index": "E",
            "name": "Numbers Exchange",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1900,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 746,
            "index": "D",
            "name": "Green and Black Tea",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 744,
            "index": "E",
            "name": "Hongcow Masters the Cyclic Shift",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "strings",
                "two pointers"
            ]
        },
        {
            "contestId": 744,
            "index": "D",
            "name": "Hongcow Draws a Circle",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3200,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 743,
            "index": "E",
            "name": "Vladik and cards",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force",
                "dp"
            ]
        },
        {
            "contestId": 743,
            "index": "D",
            "name": "Chloe and pleasant prizes",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 741,
            "index": "E",
            "name": "Arpa’s abnormal DNA and Mehrdad’s deep interest",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3400,
            "tags": [
                "data structures",
                "string suffix structures"
            ]
        },
        {
            "contestId": 741,
            "index": "D",
            "name": "Arpa’s letter-marked tree and Mehrdad’s Dokhtar-kosh paths",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "data structures",
                "dfs and similar",
                "trees"
            ]
        },
        {
            "contestId": 739,
            "index": "E",
            "name": "Gosha is hunting",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "brute force",
                "data structures",
                "dp",
                "flows",
                "math",
                "probabilities",
                "sortings"
            ]
        },
        {
            "contestId": 739,
            "index": "D",
            "name": "Recover a functional graph",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3400,
            "tags": [
                "graph matchings"
            ]
        },
        {
            "contestId": 737,
            "index": "E",
            "name": "Tanya is 5!",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3300,
            "tags": [
                "graph matchings",
                "graphs",
                "greedy",
                "schedules"
            ]
        },
        {
            "contestId": 736,
            "index": "E",
            "name": "Chess Championship",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "constructive algorithms",
                "flows",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 736,
            "index": "D",
            "name": "Permutations",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2800,
            "tags": [
                "math",
                "matrices"
            ]
        },
        {
            "contestId": 735,
            "index": "E",
            "name": "Ostap and Tree",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 735,
            "index": "D",
            "name": "Taxes",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1600,
            "tags": [
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 734,
            "index": "E",
            "name": "Anton and Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 734,
            "index": "D",
            "name": "Anton and Chess",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "implementation"
            ]
        },
        {
            "contestId": 733,
            "index": "E",
            "name": "Sleep in Class",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "math",
                "two pointers"
            ]
        },
        {
            "contestId": 733,
            "index": "D",
            "name": "Kostya the Sculptor",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1600,
            "tags": [
                "data structures",
                "hashing"
            ]
        },
        {
            "contestId": 732,
            "index": "E",
            "name": "Sockets",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 732,
            "index": "D",
            "name": "Exams",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "binary search",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 731,
            "index": "E",
            "name": "Funny Game",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "dp",
                "games"
            ]
        },
        {
            "contestId": 731,
            "index": "D",
            "name": "80-th Level Archeology",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "brute force",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 730,
            "index": "E",
            "name": "Award Ceremony",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 730,
            "index": "D",
            "name": "Running Over The Bridges",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 729,
            "index": "E",
            "name": "Subordinates",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "data structures",
                "graphs",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 729,
            "index": "D",
            "name": "Sea Battle",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 727,
            "index": "E",
            "name": "Games on a CD",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "data structures",
                "hashing",
                "string suffix structures",
                "strings"
            ]
        },
        {
            "contestId": 727,
            "index": "D",
            "name": "T-shirts Distribution",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "flows",
                "greedy"
            ]
        },
        {
            "contestId": 725,
            "index": "E",
            "name": "Too Much Money",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        {
            "contestId": 725,
            "index": "D",
            "name": "Contest Balloons",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 1800,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 724,
            "index": "E",
            "name": "Goods transportation",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "dp",
                "flows",
                "greedy"
            ]
        },
        {
            "contestId": 724,
            "index": "D",
            "name": "Dense Subsequence",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "data structures",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 723,
            "index": "E",
            "name": "One-Way Reform",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "flows",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 723,
            "index": "D",
            "name": "Lakes in Berland",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1600,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 722,
            "index": "E",
            "name": "Research Rover",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        {
            "contestId": 722,
            "index": "D",
            "name": "Generating Sets",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "binary search",
                "data structures",
                "dfs and similar",
                "greedy",
                "strings",
                "trees"
            ]
        },
        {
            "contestId": 721,
            "index": "E",
            "name": "Road to Home",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2700,
            "tags": [
                "binary search",
                "dp"
            ]
        },
        {
            "contestId": 721,
            "index": "D",
            "name": "Maxim and Array",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 720,
            "index": "E",
            "name": "Cipher",
            "type": "PROGRAMMING",
            "rating": 3100,
            "tags": [
                "implementation"
            ]
        },
        {
            "contestId": 720,
            "index": "D",
            "name": "Slalom",
            "type": "PROGRAMMING",
            "rating": 3100,
            "tags": [
                "data structures",
                "dp",
                "sortings"
            ]
        },
        {
            "contestId": 718,
            "index": "E",
            "name": "Matvey's Birthday",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3300,
            "tags": [
                "bitmasks",
                "graphs"
            ]
        },
        {
            "contestId": 718,
            "index": "D",
            "name": "Andrew and Chemistry",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "dp",
                "hashing",
                "trees"
            ]
        },
        {
            "contestId": 717,
            "index": "E",
            "name": "Paint it really, really dark gray",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "dfs and similar"
            ]
        },
        {
            "contestId": 717,
            "index": "D",
            "name": "Dexterina’s Lab",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "games",
                "matrices",
                "probabilities"
            ]
        },
        {
            "contestId": 715,
            "index": "E",
            "name": "Complete the Permutations",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 3400,
            "tags": [
                "combinatorics",
                "fft",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 715,
            "index": "D",
            "name": "Create a Maze",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 713,
            "index": "E",
            "name": "Sonya Partymaker",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3300,
            "tags": [
                "binary search",
                "dp"
            ]
        },
        {
            "contestId": 713,
            "index": "D",
            "name": "Animals and Puzzle",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        {
            "contestId": 712,
            "index": "E",
            "name": "Memory and Casinos",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "data structures",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 712,
            "index": "D",
            "name": "Memory and Scores",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2200,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 711,
            "index": "E",
            "name": "ZS and The Birthday Paradox",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "math",
                "number theory",
                "probabilities"
            ]
        },
        {
            "contestId": 711,
            "index": "D",
            "name": "Directed Roads",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "combinatorics",
                "dfs and similar",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 710,
            "index": "E",
            "name": "Generate a String",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "dp"
            ]
        },
        {
            "contestId": 710,
            "index": "D",
            "name": "Two Arithmetic Progressions",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 708,
            "index": "E",
            "name": "Student's Camp",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "dp",
                "math"
            ]
        },
        {
            "contestId": 708,
            "index": "D",
            "name": "Incorrect Flow",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "flows"
            ]
        },
        {
            "contestId": 707,
            "index": "E",
            "name": "Garlands",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 707,
            "index": "D",
            "name": "Persistent Bookcase ",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "data structures",
                "dfs and similar",
                "implementation"
            ]
        },
        {
            "contestId": 706,
            "index": "E",
            "name": "Working routine",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 706,
            "index": "D",
            "name": "Vasiliy's Multiset",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "binary search",
                "bitmasks",
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 704,
            "index": "E",
            "name": "Iron Man",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3300,
            "tags": [
                "data structures",
                "geometry",
                "trees"
            ]
        },
        {
            "contestId": 704,
            "index": "D",
            "name": "Captain America",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3100,
            "tags": [
                "flows",
                "greedy"
            ]
        },
        {
            "contestId": 703,
            "index": "E",
            "name": "Mishka and Divisors",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2600,
            "tags": [
                "dp",
                "number theory"
            ]
        },
        {
            "contestId": 703,
            "index": "D",
            "name": "Mishka and Interesting sum",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 702,
            "index": "E",
            "name": "Analysis of Pathes in Functional Graph",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "data structures",
                "graphs"
            ]
        },
        {
            "contestId": 702,
            "index": "D",
            "name": "Road to Post Office",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 700,
            "index": "E",
            "name": "Cool Slogans",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3300,
            "tags": [
                "string suffix structures",
                "strings"
            ]
        },
        {
            "contestId": 700,
            "index": "D",
            "name": "Huffman Coding on Segment",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3100,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 698,
            "index": "E",
            "name": "Cron",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": []
        },
        {
            "contestId": 698,
            "index": "D",
            "name": "Limak and Shooting Points",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "brute force",
                "geometry",
                "math"
            ]
        },
        {
            "contestId": 696,
            "index": "E",
            "name": "...Wait for it...",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "data structures",
                "dsu",
                "trees"
            ]
        },
        {
            "contestId": 696,
            "index": "D",
            "name": "Legen...",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "data structures",
                "dp",
                "matrices",
                "strings"
            ]
        },
        {
            "contestId": 691,
            "index": "E",
            "name": "Xor-sequences",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "matrices"
            ]
        },
        {
            "contestId": 691,
            "index": "D",
            "name": "Swaps in Permutation",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "dsu",
                "math"
            ]
        },
        {
            "contestId": 689,
            "index": "E",
            "name": "Mike and Geometry Problem",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "combinatorics",
                "data structures",
                "dp",
                "geometry",
                "implementation"
            ]
        },
        {
            "contestId": 689,
            "index": "D",
            "name": "Friends and Subsequences",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        {
            "contestId": 687,
            "index": "E",
            "name": "TOF",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 687,
            "index": "D",
            "name": "Dividing Kingdom II",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "brute force",
                "data structures",
                "dsu",
                "graphs",
                "sortings"
            ]
        },
        {
            "contestId": 685,
            "index": "E",
            "name": "Travelling Through the Snow Queen's Kingdom",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "bitmasks",
                "brute force",
                "divide and conquer",
                "graphs"
            ]
        },
        {
            "contestId": 685,
            "index": "D",
            "name": "Kay and Eternity",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "brute force",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 683,
            "index": "E",
            "name": "Hammer throwing",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 683,
            "index": "D",
            "name": "Chocolate Bar",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "*special",
                "math"
            ]
        },
        {
            "contestId": 682,
            "index": "E",
            "name": "Alyona and Triangles",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2600,
            "tags": [
                "geometry",
                "two pointers"
            ]
        },
        {
            "contestId": 682,
            "index": "D",
            "name": "Alyona and Strings",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dp",
                "strings"
            ]
        },
        {
            "contestId": 681,
            "index": "E",
            "name": "Runaway to a Shadow",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "geometry",
                "sortings"
            ]
        },
        {
            "contestId": 681,
            "index": "D",
            "name": "Gifts by the List",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 679,
            "index": "E",
            "name": "Bear and Bad Powers of 42",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 679,
            "index": "D",
            "name": "Bear and Chase",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "brute force",
                "dfs and similar",
                "graphs",
                "implementation",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 678,
            "index": "E",
            "name": "Another Sith Tournament",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "bitmasks",
                "dp",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 678,
            "index": "D",
            "name": "Iterated Linear Function",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 677,
            "index": "E",
            "name": "Vanya and Balloons",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "binary search",
                "brute force",
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 677,
            "index": "D",
            "name": "Vanya and Treasure",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "data structures",
                "dp",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 676,
            "index": "E",
            "name": "The Last Fight Between Human and AI",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2400,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 676,
            "index": "D",
            "name": "Theseus and labyrinth",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2000,
            "tags": [
                "graphs",
                "implementation",
                "shortest paths"
            ]
        },
        {
            "contestId": 675,
            "index": "E",
            "name": "Trains and Statistic",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "data structures",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 675,
            "index": "D",
            "name": "Дерево",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 671,
            "index": "E",
            "name": "Organizing a Race",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3300,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 671,
            "index": "D",
            "name": "Roads in Yusland",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "data structures",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 670,
            "index": "E",
            "name": "Correct Bracket Sequence Editor",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "data structures",
                "dsu",
                "strings"
            ]
        },
        {
            "contestId": 666,
            "index": "E",
            "name": "Forensic Examination",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3100,
            "tags": [
                "data structures",
                "string suffix structures"
            ]
        },
        {
            "contestId": 666,
            "index": "D",
            "name": "Chain Reaction",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3000,
            "tags": [
                "brute force",
                "geometry"
            ]
        },
        {
            "contestId": 665,
            "index": "E",
            "name": "Beautiful Subarrays",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "data structures",
                "divide and conquer",
                "strings",
                "trees"
            ]
        },
        {
            "contestId": 665,
            "index": "D",
            "name": "Simple Subset",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "number theory"
            ]
        },
        {
            "contestId": 662,
            "index": "E",
            "name": "To Hack or not to Hack",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3100,
            "tags": [
                "brute force",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 662,
            "index": "D",
            "name": "International Olympiad",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 661,
            "index": "E",
            "name": "Divisibility Check",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 661,
            "index": "D",
            "name": "Maximal Difference",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 660,
            "index": "E",
            "name": "Different Subsets For All Tuples",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "combinatorics"
            ]
        },
        {
            "contestId": 660,
            "index": "D",
            "name": "Number of Parallelograms",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 659,
            "index": "E",
            "name": "New Reform",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "data structures",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 659,
            "index": "D",
            "name": "Bicycle Race",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1500,
            "tags": [
                "geometry",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 656,
            "index": "E",
            "name": "Out of Controls",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 656,
            "index": "D",
            "name": "Rosetta Problem",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 653,
            "index": "E",
            "name": "Bear and Forgotten Tree 2",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 653,
            "index": "D",
            "name": "Delivery Bears",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "binary search",
                "flows",
                "graphs"
            ]
        },
        {
            "contestId": 652,
            "index": "E",
            "name": "Pursuit For Artifacts",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 652,
            "index": "D",
            "name": "Nested Segments",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 650,
            "index": "E",
            "name": "Clockwork Bomb",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "data structures",
                "dfs and similar",
                "dsu",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 650,
            "index": "D",
            "name": "Zip-line",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "hashing"
            ]
        },
        {
            "contestId": 645,
            "index": "E",
            "name": "Intellectual Inquiry",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "dp",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 645,
            "index": "D",
            "name": "Robot Rapping Results Report",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "binary search",
                "dp",
                "graphs"
            ]
        },
        {
            "contestId": 643,
            "index": "E",
            "name": "Bear and Destroying Subtrees",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2700,
            "tags": [
                "dp",
                "math",
                "probabilities",
                "trees"
            ]
        },
        {
            "contestId": 643,
            "index": "D",
            "name": "Bearish Fanpages",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2900,
            "tags": []
        },
        {
            "contestId": 641,
            "index": "E",
            "name": "Little Artem and Time Machine",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 641,
            "index": "D",
            "name": "Little Artem and Random Variable",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2400,
            "tags": [
                "dp",
                "implementation",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 639,
            "index": "E",
            "name": "Bear and Paradox",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2800,
            "tags": [
                "binary search",
                "greedy",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 639,
            "index": "D",
            "name": "Bear and Contribution",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2400,
            "tags": [
                "data structures",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 638,
            "index": "D",
            "name": "Three-dimensional Turtle Super Computer ",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "brute force",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 637,
            "index": "D",
            "name": "Running with Obstacles",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1600,
            "tags": [
                "*special",
                "data structures",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 633,
            "index": "E",
            "name": "Startup Funding",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "probabilities",
                "two pointers"
            ]
        },
        {
            "contestId": 633,
            "index": "D",
            "name": "Fibonacci-ish",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "brute force",
                "dp",
                "hashing",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 632,
            "index": "E",
            "name": "Thief in a Shop",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "divide and conquer",
                "dp",
                "fft",
                "math"
            ]
        },
        {
            "contestId": 632,
            "index": "D",
            "name": "Longest Subsequence",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 631,
            "index": "E",
            "name": "Product Sum",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "data structures",
                "dp",
                "geometry"
            ]
        },
        {
            "contestId": 631,
            "index": "D",
            "name": "Messenger",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures",
                "hashing",
                "implementation",
                "string suffix structures",
                "strings"
            ]
        },
        {
            "contestId": 630,
            "index": "E",
            "name": "A rectangle",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 630,
            "index": "D",
            "name": "Hexagons!",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 629,
            "index": "E",
            "name": "Famil Door and Roads",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "combinatorics",
                "data structures",
                "dfs and similar",
                "dp",
                "probabilities",
                "trees"
            ]
        },
        {
            "contestId": 629,
            "index": "D",
            "name": "Babaei and Birthday Cake",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 628,
            "index": "E",
            "name": "Zbazi in Zeydabad",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 628,
            "index": "D",
            "name": "Magic Numbers",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 627,
            "index": "E",
            "name": "Orchestra",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "two pointers"
            ]
        },
        {
            "contestId": 627,
            "index": "D",
            "name": "Preorder Test",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "binary search",
                "dfs and similar",
                "dp",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 626,
            "index": "E",
            "name": "Simple Skewness",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "binary search",
                "math",
                "ternary search"
            ]
        },
        {
            "contestId": 626,
            "index": "D",
            "name": "Jerry's Protest",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1800,
            "tags": [
                "brute force",
                "combinatorics",
                "dp",
                "probabilities"
            ]
        },
        {
            "contestId": 625,
            "index": "E",
            "name": "Frog Fights",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2800,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 625,
            "index": "D",
            "name": "Finals in arithmetic",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 623,
            "index": "E",
            "name": "Transforming Sequence",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3300,
            "tags": [
                "combinatorics",
                "dp",
                "fft",
                "math"
            ]
        },
        {
            "contestId": 623,
            "index": "D",
            "name": "Birthday",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "greedy",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 622,
            "index": "E",
            "name": "Ants in Leaves",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "greedy",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 622,
            "index": "D",
            "name": "Optimal Number Permutation",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 621,
            "index": "E",
            "name": "Wet Shark and Blocks",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "dp",
                "matrices"
            ]
        },
        {
            "contestId": 621,
            "index": "D",
            "name": "Rat Kwesh and Cheese",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 620,
            "index": "E",
            "name": "New Year Tree",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "bitmasks",
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 620,
            "index": "D",
            "name": "Professor GukiZ and Two Arrays",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "binary search",
                "two pointers"
            ]
        },
        {
            "contestId": 618,
            "index": "E",
            "name": "Robot Arm",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "data structures",
                "geometry"
            ]
        },
        {
            "contestId": 618,
            "index": "D",
            "name": "Hamiltonian Spanning Tree",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "dp",
                "graph matchings",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 617,
            "index": "E",
            "name": "XOR and Favorite Number",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2200,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 617,
            "index": "D",
            "name": "Polyline",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 616,
            "index": "E",
            "name": "Sum of Remainders",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "implementation",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 616,
            "index": "D",
            "name": "Longest k-Good Segment",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "binary search",
                "data structures",
                "two pointers"
            ]
        },
        {
            "contestId": 615,
            "index": "E",
            "name": "Hexagons",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "binary search",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 615,
            "index": "D",
            "name": "Multipliers",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 613,
            "index": "E",
            "name": "Puzzle Lover",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "dp",
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 613,
            "index": "D",
            "name": "Kingdom and its Cities",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2800,
            "tags": [
                "dfs and similar",
                "divide and conquer",
                "dp",
                "graphs",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 612,
            "index": "E",
            "name": "Square Root of Permutation",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 612,
            "index": "D",
            "name": "The Union of k-Segments",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 611,
            "index": "E",
            "name": "New Year and Three Musketeers",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 611,
            "index": "D",
            "name": "New Year and Ancient Prophecy",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "dp",
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 610,
            "index": "E",
            "name": "Alphabet Permutations",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "data structures",
                "strings"
            ]
        },
        {
            "contestId": 610,
            "index": "D",
            "name": "Vika and Segments",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "data structures",
                "geometry",
                "two pointers"
            ]
        },
        {
            "contestId": 609,
            "index": "E",
            "name": "Minimum spanning tree for each edge",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "data structures",
                "dfs and similar",
                "dsu",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 609,
            "index": "D",
            "name": "Gadgets for dollars and pounds",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "binary search",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 607,
            "index": "E",
            "name": "Cross Sum",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3300,
            "tags": [
                "binary search",
                "geometry"
            ]
        },
        {
            "contestId": 607,
            "index": "D",
            "name": "Power Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 605,
            "index": "E",
            "name": "Intergalaxy Trips",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "probabilities",
                "shortest paths"
            ]
        },
        {
            "contestId": 605,
            "index": "D",
            "name": "Board Game",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "data structures",
                "dfs and similar"
            ]
        },
        {
            "contestId": 603,
            "index": "E",
            "name": "Pastoral Oddities",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3000,
            "tags": [
                "data structures",
                "divide and conquer",
                "dsu",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 603,
            "index": "D",
            "name": "Ruminations on Ruminants",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "geometry",
                "math"
            ]
        },
        {
            "contestId": 601,
            "index": "E",
            "name": "A Museum Robbery",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 601,
            "index": "D",
            "name": "Acyclic Organic Compounds",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "data structures",
                "dfs and similar",
                "dsu",
                "hashing",
                "strings",
                "trees"
            ]
        },
        {
            "contestId": 600,
            "index": "E",
            "name": "Lomsat gelral",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "data structures",
                "dfs and similar",
                "dsu",
                "trees"
            ]
        },
        {
            "contestId": 600,
            "index": "D",
            "name": "Area of Two Circles' Intersection",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 599,
            "index": "E",
            "name": "Sandy and Nuts",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2600,
            "tags": [
                "bitmasks",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 599,
            "index": "D",
            "name": "Spongebob and Squares",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "brute force",
                "math"
            ]
        },
        {
            "contestId": 598,
            "index": "E",
            "name": "Chocolate Bar",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "brute force",
                "dp"
            ]
        },
        {
            "contestId": 598,
            "index": "D",
            "name": "Igor In the Museum",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 596,
            "index": "E",
            "name": "Wilbur and Strings",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "strings"
            ]
        },
        {
            "contestId": 596,
            "index": "D",
            "name": "Wilbur and Trees",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "dp",
                "math",
                "probabilities",
                "sortings"
            ]
        },
        {
            "contestId": 594,
            "index": "E",
            "name": "Cutting the Line",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3100,
            "tags": [
                "string suffix structures",
                "strings"
            ]
        },
        {
            "contestId": 594,
            "index": "D",
            "name": "REQ",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "data structures",
                "number theory"
            ]
        },
        {
            "contestId": 593,
            "index": "E",
            "name": "Strange Calculation and Cats",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2400,
            "tags": [
                "dp",
                "matrices"
            ]
        },
        {
            "contestId": 593,
            "index": "D",
            "name": "Happy Tree Party",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2400,
            "tags": [
                "data structures",
                "dfs and similar",
                "graphs",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 592,
            "index": "E",
            "name": "BCPC",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2700,
            "tags": [
                "binary search",
                "geometry",
                "two pointers"
            ]
        },
        {
            "contestId": 592,
            "index": "D",
            "name": "Super M",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 590,
            "index": "E",
            "name": "Birthday",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "graph matchings",
                "strings"
            ]
        },
        {
            "contestId": 590,
            "index": "D",
            "name": "Top Secret Task",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2300,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 587,
            "index": "E",
            "name": "Duff as a Queen",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2900,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 587,
            "index": "D",
            "name": "Duff in Mafia",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3100,
            "tags": [
                "2-sat",
                "binary search"
            ]
        },
        {
            "contestId": 585,
            "index": "E",
            "name": "Present for Vitalik the Philatelist ",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2900,
            "tags": [
                "combinatorics",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 585,
            "index": "D",
            "name": "Lizard Era: Beginning",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2300,
            "tags": [
                "meet-in-the-middle"
            ]
        },
        {
            "contestId": 584,
            "index": "E",
            "name": "Anton and Ira",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 584,
            "index": "D",
            "name": "Dima and Lisa",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 582,
            "index": "E",
            "name": "Boolean Function",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "bitmasks",
                "dp",
                "expression parsing"
            ]
        },
        {
            "contestId": 582,
            "index": "D",
            "name": "Number of Binominal Coefficients",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3300,
            "tags": [
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 581,
            "index": "E",
            "name": "Kojiro and Furrari",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2800,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 581,
            "index": "D",
            "name": "Three Logos",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "geometry",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 580,
            "index": "E",
            "name": "Kefa and Watch",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "data structures",
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 580,
            "index": "D",
            "name": "Kefa and Dishes",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        {
            "contestId": 578,
            "index": "E",
            "name": "Walking!",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 578,
            "index": "D",
            "name": "LCS Again",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 576,
            "index": "E",
            "name": "Painting Edges",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 3300,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        {
            "contestId": 576,
            "index": "D",
            "name": "Flights for Regular Customers",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "dp",
                "matrices"
            ]
        },
        {
            "contestId": 575,
            "index": "E",
            "name": "Spectator Riots",
            "type": "PROGRAMMING",
            "rating": 2800,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 575,
            "index": "D",
            "name": "Tablecity",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 573,
            "index": "E",
            "name": "Bear and Bowling",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 573,
            "index": "D",
            "name": "Bear and Cavalry",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3000,
            "tags": [
                "data structures",
                "divide and conquer",
                "dp"
            ]
        },
        {
            "contestId": 571,
            "index": "E",
            "name": "Geometric Progressions",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 3200,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 571,
            "index": "D",
            "name": "Campus",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3100,
            "tags": [
                "binary search",
                "data structures",
                "dsu",
                "trees"
            ]
        },
        {
            "contestId": 570,
            "index": "E",
            "name": "Pig and Palindromes",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        {
            "contestId": 570,
            "index": "D",
            "name": "Tree Requests",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "binary search",
                "bitmasks",
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 568,
            "index": "E",
            "name": "Longest Increasing Subsequence",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 568,
            "index": "D",
            "name": "Sign Posts",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2800,
            "tags": [
                "brute force",
                "geometry",
                "math"
            ]
        },
        {
            "contestId": 567,
            "index": "E",
            "name": "President and Roads",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "graphs",
                "hashing",
                "shortest paths"
            ]
        },
        {
            "contestId": 567,
            "index": "D",
            "name": "One-Dimensional Battle Ships",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 566,
            "index": "E",
            "name": "Restoring Map",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3200,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "trees"
            ]
        },
        {
            "contestId": 566,
            "index": "D",
            "name": "Restructuring Company",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1900,
            "tags": [
                "data structures",
                "dsu"
            ]
        },
        {
            "contestId": 559,
            "index": "E",
            "name": "Gerald and Path",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3000,
            "tags": [
                "dp",
                "sortings"
            ]
        },
        {
            "contestId": 559,
            "index": "D",
            "name": "Randomizer",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2800,
            "tags": [
                "combinatorics",
                "geometry",
                "probabilities"
            ]
        },
        {
            "contestId": 558,
            "index": "E",
            "name": "A Simple Task",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "data structures",
                "sortings",
                "strings"
            ]
        },
        {
            "contestId": 558,
            "index": "D",
            "name": "Guess Your Way Out! II",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "data structures",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 557,
            "index": "E",
            "name": "Ann and Half-Palindrome",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "data structures",
                "dp",
                "graphs",
                "string suffix structures",
                "strings",
                "trees"
            ]
        },
        {
            "contestId": 557,
            "index": "D",
            "name": "Vitaly and Cycle",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "combinatorics",
                "dfs and similar",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 555,
            "index": "E",
            "name": "Case of Computer Network",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2800,
            "tags": [
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 555,
            "index": "D",
            "name": "Case of a Top Secret",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "binary search",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 553,
            "index": "E",
            "name": "Kyoya and Train",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3200,
            "tags": [
                "dp",
                "fft",
                "graphs",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 553,
            "index": "D",
            "name": "Nudist Beach",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2300,
            "tags": [
                "binary search",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 552,
            "index": "E",
            "name": "Vanya and Brackets",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "brute force",
                "dp",
                "expression parsing",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 552,
            "index": "D",
            "name": "Vanya and Triangles",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "brute force",
                "combinatorics",
                "data structures",
                "geometry",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 551,
            "index": "E",
            "name": "GukiZ and GukiZiana",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "binary search",
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 551,
            "index": "D",
            "name": "GukiZ and Binary Operations",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "implementation",
                "math",
                "matrices",
                "number theory"
            ]
        },
        {
            "contestId": 550,
            "index": "E",
            "name": "Brackets in Implications",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 550,
            "index": "D",
            "name": "Regular Bridge",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 549,
            "index": "E",
            "name": "Sasha Circle",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2700,
            "tags": [
                "geometry",
                "math"
            ]
        },
        {
            "contestId": 549,
            "index": "D",
            "name": "Haar Features",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1900,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 547,
            "index": "E",
            "name": "Mike and Friends",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "data structures",
                "string suffix structures",
                "strings",
                "trees"
            ]
        },
        {
            "contestId": 547,
            "index": "D",
            "name": "Mike and Fish",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 546,
            "index": "E",
            "name": "Soldier and Traveling",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "flows",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 546,
            "index": "D",
            "name": "Soldier and Number Game",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 545,
            "index": "E",
            "name": "Paths and Trees",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        {
            "contestId": 545,
            "index": "D",
            "name": "Queue",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1300,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 543,
            "index": "E",
            "name": "Listening to Music",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "data structures"
            ]
        },
        {
            "contestId": 543,
            "index": "D",
            "name": "Road Improvement",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2300,
            "tags": [
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 542,
            "index": "E",
            "name": "Playing on Graph",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2600,
            "tags": [
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 542,
            "index": "D",
            "name": "Superhero's Job",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2600,
            "tags": [
                "dfs and similar",
                "dp",
                "hashing",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 540,
            "index": "E",
            "name": "Infinite Inversions",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures",
                "implementation",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 540,
            "index": "D",
            "name": "Bad Luck Island",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dp",
                "probabilities"
            ]
        },
        {
            "contestId": 538,
            "index": "E",
            "name": "Demiurges Play Again",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "dp",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 538,
            "index": "D",
            "name": "Weird Chess",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 536,
            "index": "E",
            "name": "Tavas on the Path",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "data structures",
                "divide and conquer",
                "trees"
            ]
        },
        {
            "contestId": 536,
            "index": "D",
            "name": "Tavas in Kansas",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "dp",
                "games"
            ]
        },
        {
            "contestId": 535,
            "index": "E",
            "name": "Tavas and Pashmaks",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "geometry",
                "math"
            ]
        },
        {
            "contestId": 535,
            "index": "D",
            "name": "Tavas and Malekas",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "greedy",
                "hashing",
                "string suffix structures",
                "strings"
            ]
        },
        {
            "contestId": 534,
            "index": "E",
            "name": "Berland Local Positioning System",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "hashing",
                "implementation"
            ]
        },
        {
            "contestId": 534,
            "index": "D",
            "name": "Handshakes",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 533,
            "index": "E",
            "name": "Correcting Mistakes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy",
                "hashing",
                "strings",
                "two pointers"
            ]
        },
        {
            "contestId": 533,
            "index": "D",
            "name": "Landmarks",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3000,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 530,
            "index": "E",
            "name": "Sum and product",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 530,
            "index": "D",
            "name": "Set subtraction",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 528,
            "index": "E",
            "name": "Triangles 3000",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "geometry",
                "sortings"
            ]
        },
        {
            "contestId": 528,
            "index": "D",
            "name": "Fuzzy Search",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "bitmasks",
                "brute force",
                "fft"
            ]
        },
        {
            "contestId": 527,
            "index": "E",
            "name": "Data Center Drama",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 527,
            "index": "D",
            "name": "Clique Problem",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 526,
            "index": "E",
            "name": "Transmitting Levels",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2400,
            "tags": [
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 526,
            "index": "D",
            "name": "Om Nom and Necklace",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2200,
            "tags": [
                "hashing",
                "string suffix structures",
                "strings"
            ]
        },
        {
            "contestId": 525,
            "index": "E",
            "name": "Anya and Cubes",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2100,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force",
                "dp",
                "math",
                "meet-in-the-middle"
            ]
        },
        {
            "contestId": 525,
            "index": "D",
            "name": "Arthur and Walls",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        {
            "contestId": 524,
            "index": "E",
            "name": "Rooks and Rectangles",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2400,
            "tags": [
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 524,
            "index": "D",
            "name": "Social Network",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 2100,
            "tags": [
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 523,
            "index": "D",
            "name": "Statistics of Recompressing Videos",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1600,
            "tags": [
                "*special",
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 522,
            "index": "D",
            "name": "Closest Equals",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "*special",
                "data structures"
            ]
        },
        {
            "contestId": 521,
            "index": "E",
            "name": "Cycling City",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 521,
            "index": "D",
            "name": "Shop",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2800,
            "tags": [
                "greedy"
            ]
        },
        {
            "contestId": 520,
            "index": "E",
            "name": "Pluses everywhere",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "combinatorics",
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 520,
            "index": "D",
            "name": "Cubes",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "games",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 519,
            "index": "E",
            "name": "A and B and Lecture Rooms",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures",
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 519,
            "index": "D",
            "name": "A and B and Interesting Substrings",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "data structures",
                "dp",
                "two pointers"
            ]
        },
        {
            "contestId": 518,
            "index": "E",
            "name": "Arthur and Questions",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "greedy",
                "implementation",
                "math",
                "ternary search"
            ]
        },
        {
            "contestId": 518,
            "index": "D",
            "name": "Ilya and Escalator",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "combinatorics",
                "dp",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 516,
            "index": "E",
            "name": "Drazil and His Happy Friends",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3100,
            "tags": [
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 516,
            "index": "D",
            "name": "Drazil and Morning Exercise",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2800,
            "tags": [
                "dfs and similar",
                "dp",
                "dsu",
                "trees",
                "two pointers"
            ]
        },
        {
            "contestId": 515,
            "index": "E",
            "name": "Drazil and Park",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2300,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 515,
            "index": "D",
            "name": "Drazil and Tiles",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 514,
            "index": "E",
            "name": "Darth Vader and Tree",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "dp",
                "matrices"
            ]
        },
        {
            "contestId": 514,
            "index": "D",
            "name": "R2D2 and Droid Army",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "data structures",
                "two pointers"
            ]
        },
        {
            "contestId": 512,
            "index": "E",
            "name": "Fox And Polygon",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2900,
            "tags": [
                "constructive algorithms",
                "divide and conquer"
            ]
        },
        {
            "contestId": 512,
            "index": "D",
            "name": "Fox And Travelling",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2900,
            "tags": [
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 510,
            "index": "E",
            "name": "Fox And Dinner",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "flows"
            ]
        },
        {
            "contestId": 510,
            "index": "D",
            "name": "Fox And Jumping",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "bitmasks",
                "brute force",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 509,
            "index": "E",
            "name": "Pretty Song",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "math",
                "strings"
            ]
        },
        {
            "contestId": 509,
            "index": "D",
            "name": "Restoring Numbers",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 508,
            "index": "E",
            "name": "Arthur and Brackets",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 508,
            "index": "D",
            "name": "Tanya and Password",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 507,
            "index": "E",
            "name": "Breaking Good",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 507,
            "index": "D",
            "name": "The Maths Lecture",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 506,
            "index": "E",
            "name": "Mr. Kitayuta's Gift",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "combinatorics",
                "dp",
                "matrices",
                "strings"
            ]
        },
        {
            "contestId": 506,
            "index": "D",
            "name": "Mr. Kitayuta's Colorful Graph",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2400,
            "tags": [
                "brute force",
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 505,
            "index": "E",
            "name": "Mr. Kitayuta vs. Bamboos",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2900,
            "tags": [
                "binary search",
                "greedy"
            ]
        },
        {
            "contestId": 505,
            "index": "D",
            "name": "Mr. Kitayuta's Technology",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "dfs and similar"
            ]
        },
        {
            "contestId": 504,
            "index": "E",
            "name": "Misha and LCP on Tree",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3000,
            "tags": [
                "binary search",
                "dfs and similar",
                "hashing",
                "string suffix structures",
                "trees"
            ]
        },
        {
            "contestId": 504,
            "index": "D",
            "name": "Misha and XOR",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "bitmasks"
            ]
        },
        {
            "contestId": 501,
            "index": "E",
            "name": "Misha and Palindrome Degree",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2500,
            "tags": [
                "binary search",
                "combinatorics",
                "implementation"
            ]
        },
        {
            "contestId": 501,
            "index": "D",
            "name": "Misha and Permutations Summation",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2000,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 500,
            "index": "E",
            "name": "New Year Domino",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2300,
            "tags": [
                "data structures",
                "dp",
                "dsu"
            ]
        },
        {
            "contestId": 500,
            "index": "D",
            "name": "New Year Santa Network",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "combinatorics",
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 498,
            "index": "E",
            "name": "Stairs and Lines",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "dp",
                "matrices"
            ]
        },
        {
            "contestId": 498,
            "index": "D",
            "name": "Traffic Jams in the Land",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "data structures",
                "dp",
                "number theory"
            ]
        },
        {
            "contestId": 497,
            "index": "E",
            "name": "Subsequences Return",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "dp",
                "matrices"
            ]
        },
        {
            "contestId": 497,
            "index": "D",
            "name": "Gears",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "brute force",
                "geometry",
                "math"
            ]
        },
        {
            "contestId": 496,
            "index": "E",
            "name": "Distributing Parts ",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 496,
            "index": "D",
            "name": "Tennis Game",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 1900,
            "tags": [
                "binary search"
            ]
        },
        {
            "contestId": 494,
            "index": "E",
            "name": "Sharti",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "data structures",
                "games"
            ]
        },
        {
            "contestId": 494,
            "index": "D",
            "name": "Birthday",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2700,
            "tags": [
                "data structures",
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 493,
            "index": "E",
            "name": "Vasya and Polynomial",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2800,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 493,
            "index": "D",
            "name": "Vasya and Chess",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "games",
                "math"
            ]
        },
        {
            "contestId": 492,
            "index": "E",
            "name": "Vanya and Field",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 492,
            "index": "D",
            "name": "Vanya and Computer Game",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "binary search",
                "implementation",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 490,
            "index": "E",
            "name": "Restoring Increasing Sequence",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 490,
            "index": "D",
            "name": "Chocolate",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "brute force",
                "dfs and similar",
                "math",
                "meet-in-the-middle",
                "number theory"
            ]
        },
        {
            "contestId": 489,
            "index": "E",
            "name": "Hiking",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "binary search",
                "dp"
            ]
        },
        {
            "contestId": 489,
            "index": "D",
            "name": "Unbearable Controversy of Being",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "brute force",
                "combinatorics",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 487,
            "index": "E",
            "name": "Tourists",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "data structures",
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 487,
            "index": "D",
            "name": "Conveyor Belts",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 486,
            "index": "E",
            "name": "LIS of Sequence",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "hashing",
                "math"
            ]
        },
        {
            "contestId": 486,
            "index": "D",
            "name": "Valid Sets",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "dp",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 484,
            "index": "E",
            "name": "Sign on Fence",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2500,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures"
            ]
        },
        {
            "contestId": 484,
            "index": "D",
            "name": "Kindergarten",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "data structures",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 482,
            "index": "E",
            "name": "ELCA",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 482,
            "index": "D",
            "name": "Random Function and Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "combinatorics",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 480,
            "index": "E",
            "name": "Parking Lot",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "data structures",
                "divide and conquer"
            ]
        },
        {
            "contestId": 480,
            "index": "D",
            "name": "Parcels",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "dp",
                "graphs"
            ]
        },
        {
            "contestId": 479,
            "index": "E",
            "name": "Riding in a Lift",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1900,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        {
            "contestId": 479,
            "index": "D",
            "name": "Long Jumps",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "binary search",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 478,
            "index": "E",
            "name": "Wavy numbers",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "brute force",
                "dfs and similar",
                "meet-in-the-middle",
                "sortings"
            ]
        },
        {
            "contestId": 478,
            "index": "D",
            "name": "Red-Green Towers",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 477,
            "index": "E",
            "name": "Dreamoon and Notepad",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3100,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 477,
            "index": "D",
            "name": "Dreamoon and Binary",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "dp",
                "strings"
            ]
        },
        {
            "contestId": 476,
            "index": "E",
            "name": "Dreamoon and Strings",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "dp",
                "strings"
            ]
        },
        {
            "contestId": 476,
            "index": "D",
            "name": "Dreamoon and Sets",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 475,
            "index": "E",
            "name": "Strongly Connected City 2",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "dfs and similar"
            ]
        },
        {
            "contestId": 475,
            "index": "D",
            "name": "CGCDSSQ",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "brute force",
                "data structures",
                "math"
            ]
        },
        {
            "contestId": 474,
            "index": "E",
            "name": "Pillars",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2000,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 474,
            "index": "D",
            "name": "Flowers",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 472,
            "index": "E",
            "name": "Design Tutorial: Learn from a Game",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 472,
            "index": "D",
            "name": "Design Tutorial: Inverse the Problem",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dfs and similar",
                "dsu",
                "shortest paths",
                "trees"
            ]
        },
        {
            "contestId": 471,
            "index": "E",
            "name": "MUH and Lots and Lots of Segments",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "data structures",
                "dsu"
            ]
        },
        {
            "contestId": 471,
            "index": "D",
            "name": "MUH and Cube Walls",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "string suffix structures",
                "strings"
            ]
        },
        {
            "contestId": 470,
            "index": "E",
            "name": "Chessboard",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 470,
            "index": "D",
            "name": "Caesar Cipher",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 468,
            "index": "E",
            "name": "Permanent",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "dp",
                "graph matchings",
                "math",
                "meet-in-the-middle"
            ]
        },
        {
            "contestId": 468,
            "index": "D",
            "name": "Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3100,
            "tags": [
                "graph matchings"
            ]
        },
        {
            "contestId": 467,
            "index": "E",
            "name": "Alex and Complicated Task",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "data structures",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 467,
            "index": "D",
            "name": "Fedor and Essay",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 466,
            "index": "E",
            "name": "Information Graph",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 466,
            "index": "D",
            "name": "Increase Sequence",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        {
            "contestId": 464,
            "index": "E",
            "name": "The Classic Problem",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "data structures",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 464,
            "index": "D",
            "name": "World of Darkraft - 2",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "dp",
                "probabilities"
            ]
        },
        {
            "contestId": 463,
            "index": "E",
            "name": "Caisa and Tree",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "brute force",
                "dfs and similar",
                "math",
                "number theory",
                "trees"
            ]
        },
        {
            "contestId": 463,
            "index": "D",
            "name": "Gargari and Permutations",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 461,
            "index": "E",
            "name": "Appleman and a Game",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "binary search",
                "shortest paths",
                "strings"
            ]
        },
        {
            "contestId": 461,
            "index": "D",
            "name": "Appleman and Complicated Task",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2800,
            "tags": [
                "dsu",
                "math"
            ]
        },
        {
            "contestId": 460,
            "index": "E",
            "name": "Roland and Rose",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "brute force",
                "geometry",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 460,
            "index": "D",
            "name": "Little Victor and Set",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 459,
            "index": "E",
            "name": "Pashmak and Graph",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 1900,
            "tags": [
                "dp",
                "sortings"
            ]
        },
        {
            "contestId": 459,
            "index": "D",
            "name": "Pashmak and Parmida's problem",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "data structures",
                "divide and conquer",
                "sortings"
            ]
        },
        {
            "contestId": 457,
            "index": "E",
            "name": "Flow Optimality",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "flows",
                "math"
            ]
        },
        {
            "contestId": 457,
            "index": "D",
            "name": "Bingo!",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "combinatorics",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 455,
            "index": "E",
            "name": "Function",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 455,
            "index": "D",
            "name": "Serega and Fun",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 453,
            "index": "E",
            "name": "Little Pony and Lord Tirek",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 453,
            "index": "D",
            "name": "Little Pony and Elements of Harmony",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "dp",
                "matrices"
            ]
        },
        {
            "contestId": 452,
            "index": "E",
            "name": "Three strings",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures",
                "dsu",
                "string suffix structures",
                "strings"
            ]
        },
        {
            "contestId": 452,
            "index": "D",
            "name": "Washer, Dryer, Folder",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 451,
            "index": "E",
            "name": "Devu and Flowers",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2300,
            "tags": [
                "bitmasks",
                "combinatorics",
                "number theory"
            ]
        },
        {
            "contestId": 451,
            "index": "D",
            "name": "Count Good Substrings",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 449,
            "index": "E",
            "name": "Jzzhu and Squares",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 449,
            "index": "D",
            "name": "Jzzhu and Numbers",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "bitmasks",
                "combinatorics",
                "dp"
            ]
        },
        {
            "contestId": 448,
            "index": "E",
            "name": "Divisors",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2200,
            "tags": [
                "brute force",
                "dfs and similar",
                "implementation",
                "number theory"
            ]
        },
        {
            "contestId": 448,
            "index": "D",
            "name": "Multiplication Table",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "binary search",
                "brute force"
            ]
        },
        {
            "contestId": 446,
            "index": "E",
            "name": "DZY Loves Bridges",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "math",
                "matrices"
            ]
        },
        {
            "contestId": 446,
            "index": "D",
            "name": "DZY Loves Games",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2800,
            "tags": [
                "math",
                "matrices",
                "probabilities"
            ]
        },
        {
            "contestId": 444,
            "index": "E",
            "name": "DZY Loves Planting",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "binary search",
                "dsu",
                "trees"
            ]
        },
        {
            "contestId": 444,
            "index": "D",
            "name": "DZY Loves Strings",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "binary search",
                "hashing",
                "strings",
                "two pointers"
            ]
        },
        {
            "contestId": 442,
            "index": "E",
            "name": "Gena and Second Distance",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 442,
            "index": "D",
            "name": "Adam and Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 441,
            "index": "E",
            "name": "Valera and Number",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "bitmasks",
                "dp",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 441,
            "index": "D",
            "name": "Valera and Swaps",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dsu",
                "graphs",
                "implementation",
                "math",
                "string suffix structures"
            ]
        },
        {
            "contestId": 440,
            "index": "D",
            "name": "Berland Federalization",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 439,
            "index": "E",
            "name": "Devu and Birthday Celebration",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 439,
            "index": "D",
            "name": "Devu and his Brother",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "binary search",
                "sortings",
                "ternary search",
                "two pointers"
            ]
        },
        {
            "contestId": 438,
            "index": "E",
            "name": "The Child and Binary Tree",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3100,
            "tags": [
                "combinatorics",
                "divide and conquer",
                "fft",
                "number theory"
            ]
        },
        {
            "contestId": 438,
            "index": "D",
            "name": "The Child and Sequence",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "data structures",
                "math"
            ]
        },
        {
            "contestId": 437,
            "index": "E",
            "name": "The Child and Polygon",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "dp",
                "geometry"
            ]
        },
        {
            "contestId": 437,
            "index": "D",
            "name": "The Child and Zoo",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dsu",
                "sortings"
            ]
        },
        {
            "contestId": 436,
            "index": "E",
            "name": "Cardboard Box",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 436,
            "index": "D",
            "name": "Pudding Monsters",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 435,
            "index": "E",
            "name": "Special Graph",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": []
        },
        {
            "contestId": 435,
            "index": "D",
            "name": "Special Grid",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "brute force",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 434,
            "index": "E",
            "name": "Furukawa Nagisa's Tree",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3000,
            "tags": [
                "binary search",
                "divide and conquer",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 434,
            "index": "D",
            "name": "Nanami's Power Plant",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "flows"
            ]
        },
        {
            "contestId": 433,
            "index": "E",
            "name": "Tachibana Kanade's Tofu",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 433,
            "index": "D",
            "name": "Nanami's Digital Board",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dsu",
                "implementation"
            ]
        },
        {
            "contestId": 432,
            "index": "E",
            "name": "Square Tiling",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 432,
            "index": "D",
            "name": "Prefixes and Suffixes",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dp",
                "string suffix structures",
                "strings",
                "two pointers"
            ]
        },
        {
            "contestId": 431,
            "index": "E",
            "name": "Chemistry Experiment",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "binary search",
                "data structures",
                "ternary search"
            ]
        },
        {
            "contestId": 431,
            "index": "D",
            "name": "Random Task",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "bitmasks",
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 429,
            "index": "E",
            "name": "Points and Segments",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3000,
            "tags": [
                "graphs"
            ]
        },
        {
            "contestId": 429,
            "index": "D",
            "name": "Tricky Function",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "data structures",
                "divide and conquer",
                "geometry"
            ]
        },
        {
            "contestId": 427,
            "index": "E",
            "name": "Police Patrol",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "greedy",
                "implementation",
                "math",
                "ternary search"
            ]
        },
        {
            "contestId": 427,
            "index": "D",
            "name": "Match & Catch",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "dp",
                "string suffix structures",
                "strings"
            ]
        },
        {
            "contestId": 425,
            "index": "E",
            "name": "Sereja and Sets",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 425,
            "index": "D",
            "name": "Sereja and Squares",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "binary search",
                "data structures",
                "hashing"
            ]
        },
        {
            "contestId": 424,
            "index": "E",
            "name": "Colored Jenga",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2500,
            "tags": [
                "dfs and similar",
                "dp",
                "probabilities"
            ]
        },
        {
            "contestId": 424,
            "index": "D",
            "name": "Biathlon Track",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms",
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 421,
            "index": "D",
            "name": "Bug in Code",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "binary search",
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 420,
            "index": "E",
            "name": "Playing the ball",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 420,
            "index": "D",
            "name": "Cup Trick",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2200,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 418,
            "index": "E",
            "name": "Tricky Password",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 418,
            "index": "D",
            "name": "Big Problems for Organizers",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "data structures",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 417,
            "index": "E",
            "name": "Square Table",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 417,
            "index": "D",
            "name": "Cunning Gena",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "bitmasks",
                "dp",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 416,
            "index": "E",
            "name": "President's Path",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "dp",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 416,
            "index": "D",
            "name": "Population Size",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 414,
            "index": "E",
            "name": "Mashmokh's Designed Problem",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3200,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 414,
            "index": "D",
            "name": "Mashmokh and Water Tanks",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2300,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "trees",
                "two pointers"
            ]
        },
        {
            "contestId": 413,
            "index": "E",
            "name": "Maze 2D",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "data structures",
                "divide and conquer"
            ]
        },
        {
            "contestId": 413,
            "index": "D",
            "name": "2048",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        {
            "contestId": 412,
            "index": "E",
            "name": "E-mail Addresses",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1900,
            "tags": [
                "implementation"
            ]
        },
        {
            "contestId": 412,
            "index": "D",
            "name": "Giving Awards",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dfs and similar"
            ]
        },
        {
            "contestId": 409,
            "index": "E",
            "name": "Dome",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 409,
            "index": "D",
            "name": "Big Data",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 407,
            "index": "E",
            "name": "k-d-sequence",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 407,
            "index": "D",
            "name": "Largest Submatrix 3",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "dp",
                "hashing"
            ]
        },
        {
            "contestId": 406,
            "index": "E",
            "name": "Hamming Triples",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "implementation",
                "math",
                "two pointers"
            ]
        },
        {
            "contestId": 406,
            "index": "D",
            "name": "Hill Climbing",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "geometry",
                "trees"
            ]
        },
        {
            "contestId": 405,
            "index": "E",
            "name": "Graph Cutting",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2300,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 405,
            "index": "D",
            "name": "Toy Sum",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 404,
            "index": "E",
            "name": "Maze 1D",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "binary search",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 404,
            "index": "D",
            "name": "Minesweeper 1D",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 403,
            "index": "E",
            "name": "Two Rooted Trees",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "data structures",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 403,
            "index": "D",
            "name": "Beautiful Pairs of Numbers",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2300,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        {
            "contestId": 402,
            "index": "E",
            "name": "Strictly Positive Matrix",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 402,
            "index": "D",
            "name": "Upgrading Array",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "dp",
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 401,
            "index": "E",
            "name": "Olympic Games",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 401,
            "index": "D",
            "name": "Roman and Numbers",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "brute force",
                "combinatorics",
                "dp",
                "number theory"
            ]
        },
        {
            "contestId": 400,
            "index": "E",
            "name": "Inna and Binary Logic",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "binary search",
                "bitmasks",
                "data structures"
            ]
        },
        {
            "contestId": 400,
            "index": "D",
            "name": "Dima and Bacteria",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dsu",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 398,
            "index": "E",
            "name": "Sorting Permutations",
            "type": "PROGRAMMING",
            "points": 2500,
            "tags": []
        },
        {
            "contestId": 398,
            "index": "D",
            "name": "Instant Messanger",
            "type": "PROGRAMMING",
            "points": 2000,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 396,
            "index": "E",
            "name": "On Iteration of One Well-Known Function",
            "type": "PROGRAMMING",
            "points": 2500,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 396,
            "index": "D",
            "name": "On Sum of Number of Inversions in Permutations",
            "type": "PROGRAMMING",
            "points": 2000,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        {
            "contestId": 394,
            "index": "E",
            "name": "Lightbulb for Minister",
            "type": "PROGRAMMING",
            "points": 2500,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 394,
            "index": "D",
            "name": "Physical Education and Buns",
            "type": "PROGRAMMING",
            "points": 2000,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 392,
            "index": "E",
            "name": "Deleting Substrings",
            "type": "PROGRAMMING",
            "points": 2500,
            "tags": []
        },
        {
            "contestId": 392,
            "index": "D",
            "name": "Three Arrays",
            "type": "PROGRAMMING",
            "points": 2000,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 390,
            "index": "E",
            "name": "Inna and Large Sweet Matrix",
            "type": "PROGRAMMING",
            "points": 2500,
            "tags": []
        },
        {
            "contestId": 390,
            "index": "D",
            "name": "Inna and Sweet Matrix",
            "type": "PROGRAMMING",
            "points": 2000,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 388,
            "index": "E",
            "name": "Fox and Meteor Shower",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 388,
            "index": "D",
            "name": "Fox and Perfect Sets",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 387,
            "index": "E",
            "name": "George and Cards",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        {
            "contestId": 387,
            "index": "D",
            "name": "George and Interesting Graph",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "graph matchings"
            ]
        },
        {
            "contestId": 386,
            "index": "D",
            "name": "Game with Points",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dp",
                "graphs",
                "implementation",
                "shortest paths"
            ]
        },
        {
            "contestId": 385,
            "index": "E",
            "name": "Bear in the Field",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "math",
                "matrices"
            ]
        },
        {
            "contestId": 385,
            "index": "D",
            "name": "Bear and Floodlight",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "dp",
                "geometry"
            ]
        },
        {
            "contestId": 383,
            "index": "E",
            "name": "Vowels",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "combinatorics",
                "divide and conquer",
                "dp"
            ]
        },
        {
            "contestId": 383,
            "index": "D",
            "name": "Antimatter",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 382,
            "index": "E",
            "name": "Ksenia and Combinatorics",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2600,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        {
            "contestId": 382,
            "index": "D",
            "name": "Ksenia and Pawns",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "graphs",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 380,
            "index": "E",
            "name": "Sereja and Dividing",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 380,
            "index": "D",
            "name": "Sereja and Cinema",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        {
            "contestId": 379,
            "index": "E",
            "name": "New Year Tree Decorations",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "geometry",
                "schedules",
                "sortings"
            ]
        },
        {
            "contestId": 379,
            "index": "D",
            "name": "New Year Letter",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "brute force",
                "dp"
            ]
        },
        {
            "contestId": 377,
            "index": "E",
            "name": "Cookie Clicker",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "dp",
                "geometry"
            ]
        },
        {
            "contestId": 377,
            "index": "D",
            "name": "Developing Game",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 375,
            "index": "E",
            "name": "Red and Black Tree",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "dp",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 375,
            "index": "D",
            "name": "Tree and Queries",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "data structures",
                "dfs and similar",
                "trees"
            ]
        },
        {
            "contestId": 374,
            "index": "E",
            "name": "Inna and Babies",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "binary search",
                "data structures",
                "dsu",
                "geometry",
                "implementation"
            ]
        },
        {
            "contestId": 374,
            "index": "D",
            "name": "Inna and Sequence ",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 372,
            "index": "E",
            "name": "Drawing Circles is Fun",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "combinatorics",
                "geometry"
            ]
        },
        {
            "contestId": 372,
            "index": "D",
            "name": "Choosing Subtree is Fun",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "binary search",
                "data structures",
                "dfs and similar",
                "trees",
                "two pointers"
            ]
        },
        {
            "contestId": 371,
            "index": "E",
            "name": "Subway Innovation",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "greedy",
                "math",
                "two pointers"
            ]
        },
        {
            "contestId": 371,
            "index": "D",
            "name": "Vessels",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "data structures",
                "dsu",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 370,
            "index": "E",
            "name": "Summer Reading",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2500,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 370,
            "index": "D",
            "name": "Broken Monitor",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2100,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 369,
            "index": "E",
            "name": "Valera and Queries",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        {
            "contestId": 369,
            "index": "D",
            "name": "Valera and Fools",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 367,
            "index": "E",
            "name": "Sereja and Intervals",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        {
            "contestId": 367,
            "index": "D",
            "name": "Sereja and Sets",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "bitmasks",
                "dfs and similar"
            ]
        },
        {
            "contestId": 366,
            "index": "E",
            "name": "Dima and Magic Guitar",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 366,
            "index": "D",
            "name": "Dima and Trap Graph",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "data structures",
                "dfs and similar",
                "dsu",
                "shortest paths",
                "two pointers"
            ]
        },
        {
            "contestId": 364,
            "index": "E",
            "name": "Empty Rectangles",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "divide and conquer",
                "two pointers"
            ]
        },
        {
            "contestId": 364,
            "index": "D",
            "name": "Ghd",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "brute force",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 363,
            "index": "E",
            "name": "Two Circles",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "brute force",
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 363,
            "index": "D",
            "name": "Renting Bikes",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "binary search",
                "greedy"
            ]
        },
        {
            "contestId": 362,
            "index": "E",
            "name": "Petya and Pipes",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2300,
            "tags": [
                "flows",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 362,
            "index": "D",
            "name": "Fools and Foolproof Roads",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2100,
            "tags": [
                "data structures",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 360,
            "index": "E",
            "name": "Levko and Game",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2800,
            "tags": [
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        {
            "contestId": 360,
            "index": "D",
            "name": "Levko and Sets",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2600,
            "tags": [
                "number theory"
            ]
        },
        {
            "contestId": 359,
            "index": "E",
            "name": "Neatness",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "dfs and similar"
            ]
        },
        {
            "contestId": 359,
            "index": "D",
            "name": "Pair of Numbers",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "math",
                "two pointers"
            ]
        },
        {
            "contestId": 358,
            "index": "E",
            "name": "Dima and Kicks",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2300,
            "tags": [
                "brute force",
                "dsu",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 358,
            "index": "D",
            "name": "Dima and Hares",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 356,
            "index": "E",
            "name": "Xenia and String Problem",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "dp",
                "hashing",
                "implementation",
                "string suffix structures",
                "strings"
            ]
        },
        {
            "contestId": 356,
            "index": "D",
            "name": "Bags and Coins",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 354,
            "index": "E",
            "name": "Lucky Number Representation",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp"
            ]
        },
        {
            "contestId": 354,
            "index": "D",
            "name": "Transferring Pyramid",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 353,
            "index": "E",
            "name": "Antichain",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2200,
            "tags": [
                "dp",
                "graph matchings",
                "greedy"
            ]
        },
        {
            "contestId": 353,
            "index": "D",
            "name": "Queue",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dp"
            ]
        },
        {
            "contestId": 351,
            "index": "E",
            "name": "Jeff and Permutation",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "greedy"
            ]
        },
        {
            "contestId": 351,
            "index": "D",
            "name": "Jeff and Removing Periods",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 350,
            "index": "E",
            "name": "Wrong Floyd",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 350,
            "index": "D",
            "name": "Looking for Owls",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2400,
            "tags": [
                "binary search",
                "data structures",
                "geometry",
                "hashing",
                "sortings"
            ]
        },
        {
            "contestId": 348,
            "index": "E",
            "name": "Pilgrims",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 348,
            "index": "D",
            "name": "Turtles",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "dp",
                "matrices"
            ]
        },
        {
            "contestId": 346,
            "index": "E",
            "name": "Doodle Jump",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 346,
            "index": "D",
            "name": "Robot Control",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "dp",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 345,
            "index": "E",
            "name": "Black Cat Rush",
            "type": "PROGRAMMING",
            "rating": 2700,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 345,
            "index": "D",
            "name": "Chain Letter",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "*special",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 343,
            "index": "E",
            "name": "Pumping Stations",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "brute force",
                "dfs and similar",
                "divide and conquer",
                "flows",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 343,
            "index": "D",
            "name": "Water Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures",
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 342,
            "index": "E",
            "name": "Xenia and Tree",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures",
                "divide and conquer",
                "trees"
            ]
        },
        {
            "contestId": 342,
            "index": "D",
            "name": "Xenia and Dominoes",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "bitmasks",
                "dfs and similar",
                "dp"
            ]
        },
        {
            "contestId": 341,
            "index": "E",
            "name": "Candies Game",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 341,
            "index": "D",
            "name": "Iahub and Xors",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 340,
            "index": "E",
            "name": "Iahub and Permutations",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2000,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        {
            "contestId": 340,
            "index": "D",
            "name": "Bubble Sort Graph",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1500,
            "tags": [
                "binary search",
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 339,
            "index": "E",
            "name": "Three Swaps",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "greedy"
            ]
        },
        {
            "contestId": 339,
            "index": "D",
            "name": "Xenia and Bit Operations",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 338,
            "index": "E",
            "name": "Optimize!",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 338,
            "index": "D",
            "name": "GCD Table",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "chinese remainder theorem",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 337,
            "index": "E",
            "name": "Divisor Tree",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "brute force",
                "number theory",
                "trees"
            ]
        },
        {
            "contestId": 337,
            "index": "D",
            "name": "Book of Evil",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "divide and conquer",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 336,
            "index": "E",
            "name": "Vasily the Bear and Painting Square",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "bitmasks",
                "combinatorics",
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 336,
            "index": "D",
            "name": "Vasily the Bear and Beautiful Strings",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 335,
            "index": "E",
            "name": "Counting Skyscrapers",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "dp",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 335,
            "index": "D",
            "name": "Rectangles and Square",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "brute force",
                "dp"
            ]
        },
        {
            "contestId": 333,
            "index": "E",
            "name": "Summer Earnings",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force",
                "geometry",
                "sortings"
            ]
        },
        {
            "contestId": 333,
            "index": "D",
            "name": "Characteristics of Rectangles",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 332,
            "index": "E",
            "name": "Binary Key",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2400,
            "tags": [
                "dp",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 332,
            "index": "D",
            "name": "Theft of Blueprints",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2400,
            "tags": [
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 329,
            "index": "E",
            "name": "Evil",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 329,
            "index": "D",
            "name": "The Evil Temple and the Moving Rocks",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2500,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 327,
            "index": "E",
            "name": "Axis Walking",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2300,
            "tags": [
                "bitmasks",
                "combinatorics",
                "constructive algorithms",
                "dp",
                "meet-in-the-middle"
            ]
        },
        {
            "contestId": 327,
            "index": "D",
            "name": "Block Tower",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 325,
            "index": "E",
            "name": "The Red Button",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "combinatorics",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 325,
            "index": "D",
            "name": "Reclamation",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "dsu"
            ]
        },
        {
            "contestId": 321,
            "index": "E",
            "name": "Ciel and Gondolas",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "data structures",
                "divide and conquer",
                "dp"
            ]
        },
        {
            "contestId": 321,
            "index": "D",
            "name": "Ciel and Flipboard",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "dp",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 319,
            "index": "E",
            "name": "Ping-Pong",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 319,
            "index": "D",
            "name": "Have You Ever Heard About the Word?",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "greedy",
                "hashing",
                "string suffix structures",
                "strings"
            ]
        },
        {
            "contestId": 317,
            "index": "E",
            "name": "Princess and Her Shadow",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3100,
            "tags": [
                "constructive algorithms",
                "shortest paths"
            ]
        },
        {
            "contestId": 317,
            "index": "D",
            "name": "Game with Powers",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2300,
            "tags": [
                "dp",
                "games"
            ]
        },
        {
            "contestId": 314,
            "index": "E",
            "name": "Sereja and Squares",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 314,
            "index": "D",
            "name": "Sereja and Straight Lines",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "binary search",
                "data structures",
                "geometry",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 313,
            "index": "E",
            "name": "Ilya and Two Numbers",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dsu",
                "greedy"
            ]
        },
        {
            "contestId": 313,
            "index": "D",
            "name": "Ilya and Roads",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 311,
            "index": "E",
            "name": "Biologist",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "flows"
            ]
        },
        {
            "contestId": 311,
            "index": "D",
            "name": "Interval Cubing",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "data structures",
                "math"
            ]
        },
        {
            "contestId": 309,
            "index": "E",
            "name": "Sheep",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "binary search",
                "greedy"
            ]
        },
        {
            "contestId": 309,
            "index": "D",
            "name": "Tennis Rackets",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "brute force",
                "geometry"
            ]
        },
        {
            "contestId": 306,
            "index": "D",
            "name": "Polygon",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "geometry"
            ]
        },
        {
            "contestId": 305,
            "index": "E",
            "name": "Playing with String",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "games"
            ]
        },
        {
            "contestId": 305,
            "index": "D",
            "name": "Olya and Graph",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        {
            "contestId": 303,
            "index": "E",
            "name": "Random Ranking",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3000,
            "tags": [
                "dp",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 303,
            "index": "D",
            "name": "Rotatable Number",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 301,
            "index": "E",
            "name": "Yaroslav and Arrangements",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 301,
            "index": "D",
            "name": "Yaroslav and Divisors",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 300,
            "index": "E",
            "name": "Empire Strikes Back",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2300,
            "tags": [
                "binary search",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 300,
            "index": "D",
            "name": "Painting Square",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2300,
            "tags": [
                "dp",
                "fft"
            ]
        },
        {
            "contestId": 297,
            "index": "E",
            "name": "Mystic Carvings",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3000,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 297,
            "index": "D",
            "name": "Color the Carpet",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 295,
            "index": "E",
            "name": "Yaroslav and Points",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 295,
            "index": "D",
            "name": "Greg and Caves",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        {
            "contestId": 294,
            "index": "E",
            "name": "Shaass the Great",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 294,
            "index": "D",
            "name": "Shaass and Painter Robot",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "brute force",
                "implementation",
                "number theory"
            ]
        },
        {
            "contestId": 293,
            "index": "E",
            "name": "Close Vertices",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "data structures",
                "divide and conquer",
                "trees"
            ]
        },
        {
            "contestId": 293,
            "index": "D",
            "name": "Ksusha and Square",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "geometry",
                "math",
                "probabilities",
                "two pointers"
            ]
        },
        {
            "contestId": 292,
            "index": "E",
            "name": "Copying Data",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1900,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 292,
            "index": "D",
            "name": "Connected Components",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "data structures",
                "dfs and similar",
                "dp",
                "dsu"
            ]
        },
        {
            "contestId": 291,
            "index": "E",
            "name": "Tree-String Problem",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "*special",
                "dfs and similar",
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 291,
            "index": "D",
            "name": "Parallel Programming",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1600,
            "tags": [
                "*special",
                "greedy"
            ]
        },
        {
            "contestId": 290,
            "index": "E",
            "name": "HQ",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "*special",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 290,
            "index": "D",
            "name": "Orange",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        {
            "contestId": 288,
            "index": "E",
            "name": "Polo the Penguin and Lucky Numbers",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "dp",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 288,
            "index": "D",
            "name": "Polo the Penguin and Trees ",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "combinatorics",
                "dfs and similar",
                "trees"
            ]
        },
        {
            "contestId": 286,
            "index": "E",
            "name": "Ladies' Shop",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "fft",
                "math"
            ]
        },
        {
            "contestId": 286,
            "index": "D",
            "name": "Tourists",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 285,
            "index": "E",
            "name": "Positions in Permutations",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 285,
            "index": "D",
            "name": "Permutation Sum",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "bitmasks",
                "combinatorics",
                "dp",
                "implementation",
                "meet-in-the-middle"
            ]
        },
        {
            "contestId": 283,
            "index": "E",
            "name": "Cow Tennis Tournament",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "combinatorics",
                "data structures",
                "math"
            ]
        },
        {
            "contestId": 283,
            "index": "D",
            "name": "Cows and Cool Sequences",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 282,
            "index": "E",
            "name": "Sausage Maximization",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 282,
            "index": "D",
            "name": "Yet Another Number Game",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dp",
                "games"
            ]
        },
        {
            "contestId": 280,
            "index": "E",
            "name": "Sequence Transformation",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "data structures",
                "dp",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 280,
            "index": "D",
            "name": "k-Maximum Subsequence Sum",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2800,
            "tags": [
                "data structures",
                "flows",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 279,
            "index": "E",
            "name": "Beautiful Decomposition",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dp",
                "games",
                "greedy",
                "number theory"
            ]
        },
        {
            "contestId": 279,
            "index": "D",
            "name": "The Minimum Number of Variables",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        {
            "contestId": 277,
            "index": "E",
            "name": "Binary Tree on Plane",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "flows",
                "trees"
            ]
        },
        {
            "contestId": 277,
            "index": "D",
            "name": "Google Code Jam",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2800,
            "tags": [
                "dp",
                "probabilities"
            ]
        },
        {
            "contestId": 276,
            "index": "E",
            "name": "Little Girl and Problem on Trees",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "data structures",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 276,
            "index": "D",
            "name": "Little Girl and Maximum XOR",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "dp",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 274,
            "index": "E",
            "name": "Mirror Room",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3000,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 274,
            "index": "D",
            "name": "Lovely Matrix",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "graphs",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 273,
            "index": "E",
            "name": "Dima and Game",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "dp",
                "games"
            ]
        },
        {
            "contestId": 273,
            "index": "D",
            "name": "Dima and Figure",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 272,
            "index": "E",
            "name": "Dima and Horses",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 272,
            "index": "D",
            "name": "Dima and Two Sequences",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1600,
            "tags": [
                "combinatorics",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 271,
            "index": "E",
            "name": "Three Horses",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 271,
            "index": "D",
            "name": "Good Substrings",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "data structures",
                "strings"
            ]
        },
        {
            "contestId": 269,
            "index": "E",
            "name": "String Theory",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": []
        },
        {
            "contestId": 269,
            "index": "D",
            "name": "Maximum Waterfall",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "data structures",
                "dp",
                "graphs",
                "sortings"
            ]
        },
        {
            "contestId": 268,
            "index": "E",
            "name": "Playlist",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "math",
                "probabilities",
                "sortings"
            ]
        },
        {
            "contestId": 268,
            "index": "D",
            "name": "Wall Bars",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 266,
            "index": "E",
            "name": "More Queries to Array...",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2500,
            "tags": [
                "data structures",
                "math"
            ]
        },
        {
            "contestId": 266,
            "index": "D",
            "name": "BerDonalds",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2400,
            "tags": [
                "graphs",
                "math",
                "shortest paths"
            ]
        },
        {
            "contestId": 264,
            "index": "E",
            "name": "Roadside Trees",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 264,
            "index": "D",
            "name": "Colorful Stones",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "dp",
                "two pointers"
            ]
        },
        {
            "contestId": 263,
            "index": "E",
            "name": "Rhombus",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2500,
            "tags": [
                "brute force",
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 263,
            "index": "D",
            "name": "Cycle in Graph",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 261,
            "index": "E",
            "name": "Maxim and Calculator",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "brute force",
                "dp",
                "two pointers"
            ]
        },
        {
            "contestId": 261,
            "index": "D",
            "name": "Maxim and Increasing Subsequence",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 260,
            "index": "E",
            "name": "Dividing Kingdom",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "binary search",
                "brute force",
                "data structures"
            ]
        },
        {
            "contestId": 260,
            "index": "D",
            "name": "Black and White Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dsu",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 258,
            "index": "E",
            "name": "Little Elephant and Tree",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures",
                "dfs and similar",
                "trees"
            ]
        },
        {
            "contestId": 258,
            "index": "D",
            "name": "Little Elephant and Broken Sorting",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "dp",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 257,
            "index": "E",
            "name": "Greedy Elevator",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2200,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 257,
            "index": "D",
            "name": "Sum",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 256,
            "index": "E",
            "name": "Lucky Arrays",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 256,
            "index": "D",
            "name": "Liars and Serge",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 255,
            "index": "E",
            "name": "Furlo and Rublo and Game",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "games",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 255,
            "index": "D",
            "name": "Mr. Bender and Square",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "binary search",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 254,
            "index": "E",
            "name": "Dormitory",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 254,
            "index": "D",
            "name": "Rats",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "brute force",
                "dfs and similar",
                "graphs",
                "implementation",
                "shortest paths"
            ]
        },
        {
            "contestId": 253,
            "index": "E",
            "name": "Printer",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "binary search",
                "data structures",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 253,
            "index": "D",
            "name": "Table with Letters - 2",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "brute force",
                "two pointers"
            ]
        },
        {
            "contestId": 251,
            "index": "E",
            "name": "Tree and Table",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "dfs and similar",
                "dp",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 251,
            "index": "D",
            "name": "Two Sets",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "bitmasks",
                "math"
            ]
        },
        {
            "contestId": 250,
            "index": "E",
            "name": "Mad Joe",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "brute force"
            ]
        },
        {
            "contestId": 250,
            "index": "D",
            "name": "Building Bridge",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "geometry",
                "ternary search",
                "two pointers"
            ]
        },
        {
            "contestId": 249,
            "index": "E",
            "name": "Endless Matrix",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 249,
            "index": "D",
            "name": "Donkey and Stars",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2700,
            "tags": [
                "data structures",
                "dp",
                "geometry",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 248,
            "index": "E",
            "name": "Piglet's Birthday",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "dp",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 248,
            "index": "D",
            "name": "Sweets for Everyone!",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "binary search",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 246,
            "index": "E",
            "name": "Blood Cousins Return",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "binary search",
                "data structures",
                "dfs and similar",
                "dp",
                "sortings"
            ]
        },
        {
            "contestId": 246,
            "index": "D",
            "name": "Colorful Graph",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1600,
            "tags": [
                "brute force",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 245,
            "index": "E",
            "name": "Mishap in Club",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 245,
            "index": "D",
            "name": "Restoring Table",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 243,
            "index": "E",
            "name": "Matrix",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 243,
            "index": "D",
            "name": "Cubes",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "data structures",
                "dp",
                "geometry",
                "two pointers"
            ]
        },
        {
            "contestId": 242,
            "index": "E",
            "name": "XOR on Segment",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "data structures"
            ]
        },
        {
            "contestId": 242,
            "index": "D",
            "name": "Dispute",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 241,
            "index": "E",
            "name": "Flights",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 241,
            "index": "D",
            "name": "Numbers",
            "type": "PROGRAMMING",
            "rating": 2900,
            "tags": []
        },
        {
            "contestId": 240,
            "index": "E",
            "name": "Road Repairs",
            "type": "PROGRAMMING",
            "rating": 2800,
            "tags": [
                "dfs and similar",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 238,
            "index": "E",
            "name": "Meeting Her",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "dp",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 238,
            "index": "D",
            "name": "Tape Programming",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 237,
            "index": "E",
            "name": "Build String",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "flows",
                "graphs"
            ]
        },
        {
            "contestId": 237,
            "index": "D",
            "name": "T-decomposition",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 235,
            "index": "E",
            "name": "Number Challenge",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "combinatorics",
                "dp",
                "implementation",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 235,
            "index": "D",
            "name": "Graph Game",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3000,
            "tags": [
                "graphs"
            ]
        },
        {
            "contestId": 234,
            "index": "E",
            "name": "Champions' League",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "implementation"
            ]
        },
        {
            "contestId": 234,
            "index": "D",
            "name": "Cinema",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "implementation"
            ]
        },
        {
            "contestId": 232,
            "index": "E",
            "name": "Quick Tortoise",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "bitmasks",
                "divide and conquer",
                "dp"
            ]
        },
        {
            "contestId": 232,
            "index": "D",
            "name": "Fence",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "binary search",
                "data structures",
                "string suffix structures"
            ]
        },
        {
            "contestId": 231,
            "index": "E",
            "name": "Cactus",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "data structures",
                "dfs and similar",
                "dp",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 231,
            "index": "D",
            "name": "Magic Box",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1600,
            "tags": [
                "brute force",
                "geometry"
            ]
        },
        {
            "contestId": 229,
            "index": "E",
            "name": "Gifts",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2600,
            "tags": [
                "combinatorics",
                "dp",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 229,
            "index": "D",
            "name": "Towers",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 2100,
            "tags": [
                "dp",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 228,
            "index": "E",
            "name": "The Road to Berland is Paved With Good Intentions",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1900,
            "tags": [
                "2-sat",
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 228,
            "index": "D",
            "name": "Zigzag",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 226,
            "index": "E",
            "name": "Noble Knight's Path",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 226,
            "index": "D",
            "name": "The table",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 225,
            "index": "E",
            "name": "Unsolvable",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2100,
            "tags": [
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 225,
            "index": "D",
            "name": "Snake",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "dfs and similar",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 223,
            "index": "E",
            "name": "Planar Graph",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "flows",
                "geometry",
                "graphs"
            ]
        },
        {
            "contestId": 223,
            "index": "D",
            "name": "Spider",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3000,
            "tags": [
                "geometry",
                "graphs"
            ]
        },
        {
            "contestId": 222,
            "index": "E",
            "name": "Decoding Genome",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1900,
            "tags": [
                "dp",
                "matrices"
            ]
        },
        {
            "contestId": 222,
            "index": "D",
            "name": "Olympiad",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "binary search",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 220,
            "index": "E",
            "name": "Little Elephant and Inversions",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures",
                "two pointers"
            ]
        },
        {
            "contestId": 220,
            "index": "D",
            "name": "Little Elephant and Triangle",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "geometry",
                "math"
            ]
        },
        {
            "contestId": 219,
            "index": "E",
            "name": "Parking Lot",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2200,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 219,
            "index": "D",
            "name": "Choosing Capital for Treeland",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 217,
            "index": "E",
            "name": "Alien DNA",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2800,
            "tags": [
                "data structures",
                "dsu",
                "trees"
            ]
        },
        {
            "contestId": 217,
            "index": "D",
            "name": "Bitonix' Patrol",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2900,
            "tags": [
                "bitmasks",
                "brute force",
                "combinatorics",
                "dfs and similar",
                "math"
            ]
        },
        {
            "contestId": 216,
            "index": "E",
            "name": "Martian Luck",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2000,
            "tags": [
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 216,
            "index": "D",
            "name": "Spider's Web",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "binary search",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 215,
            "index": "E",
            "name": "Periodical Numbers",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "dp",
                "number theory"
            ]
        },
        {
            "contestId": 215,
            "index": "D",
            "name": "Hot Days",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "greedy"
            ]
        },
        {
            "contestId": 213,
            "index": "E",
            "name": "Two Permutations",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "data structures",
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 213,
            "index": "D",
            "name": "Stars",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "geometry"
            ]
        },
        {
            "contestId": 212,
            "index": "E",
            "name": "IT Restaurants",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 212,
            "index": "D",
            "name": "Cutting a Fence",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "binary search",
                "data structures",
                "dsu"
            ]
        },
        {
            "contestId": 208,
            "index": "E",
            "name": "Blood Cousins",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures",
                "dfs and similar",
                "trees"
            ]
        },
        {
            "contestId": 208,
            "index": "D",
            "name": "Prizes, Prizes, more Prizes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        {
            "contestId": 204,
            "index": "E",
            "name": "Little Elephant and Strings",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "data structures",
                "implementation",
                "string suffix structures",
                "two pointers"
            ]
        },
        {
            "contestId": 204,
            "index": "D",
            "name": "Little Elephant and Retro Strings",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 203,
            "index": "E",
            "name": "Transportation",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 203,
            "index": "D",
            "name": "Hit Ball",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "geometry",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 201,
            "index": "E",
            "name": "Thoroughly Bureaucratic Organization",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "binary search",
                "combinatorics"
            ]
        },
        {
            "contestId": 201,
            "index": "D",
            "name": "Brand New Problem",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "bitmasks",
                "brute force",
                "dp"
            ]
        },
        {
            "contestId": 200,
            "index": "E",
            "name": "Tractor College",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2400,
            "tags": [
                "implementation",
                "math",
                "number theory",
                "ternary search"
            ]
        },
        {
            "contestId": 200,
            "index": "D",
            "name": "Programming Language",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1800,
            "tags": [
                "binary search",
                "brute force",
                "expression parsing",
                "implementation"
            ]
        },
        {
            "contestId": 198,
            "index": "E",
            "name": "Gripping Story",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "binary search",
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 198,
            "index": "D",
            "name": "Cube Snake",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 196,
            "index": "E",
            "name": "Opening Portals",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "dsu",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 196,
            "index": "D",
            "name": "The Next Good String",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2800,
            "tags": [
                "data structures",
                "greedy",
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 195,
            "index": "E",
            "name": "Building Forest",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "data structures",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 195,
            "index": "D",
            "name": "Analyzing Polyline",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "geometry",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 193,
            "index": "E",
            "name": "Fibonacci Number",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "brute force",
                "math",
                "matrices"
            ]
        },
        {
            "contestId": 193,
            "index": "D",
            "name": "Two Segments",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 191,
            "index": "E",
            "name": "Thwarting Demonstrations",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "binary search",
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 191,
            "index": "D",
            "name": "Metro Scheme",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 190,
            "index": "E",
            "name": "Counter Attack",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "data structures",
                "dsu",
                "graphs",
                "hashing",
                "sortings"
            ]
        },
        {
            "contestId": 190,
            "index": "D",
            "name": "Non-Secret Cypher",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "two pointers"
            ]
        },
        {
            "contestId": 188,
            "index": "E",
            "name": "HQ9+",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        {
            "contestId": 188,
            "index": "D",
            "name": "Asterisks",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        {
            "contestId": 187,
            "index": "E",
            "name": "Heaven Tour",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 187,
            "index": "D",
            "name": "BRT Contract ",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2800,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 185,
            "index": "E",
            "name": "Soap Time! - 2",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        {
            "contestId": 185,
            "index": "D",
            "name": "Visit of the Great",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 183,
            "index": "E",
            "name": "Candy Shop",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "greedy"
            ]
        },
        {
            "contestId": 183,
            "index": "D",
            "name": "T-shirt",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "dp",
                "greedy",
                "probabilities"
            ]
        },
        {
            "contestId": 182,
            "index": "E",
            "name": "Wooden Fence",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1800,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 182,
            "index": "D",
            "name": "Common Divisors",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "brute force",
                "hashing",
                "implementation",
                "math",
                "strings"
            ]
        },
        {
            "contestId": 180,
            "index": "E",
            "name": "Cubes",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "binary search",
                "dp",
                "two pointers"
            ]
        },
        {
            "contestId": 180,
            "index": "D",
            "name": "Name",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 176,
            "index": "E",
            "name": "Archaeology",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "data structures",
                "dfs and similar",
                "trees"
            ]
        },
        {
            "contestId": 176,
            "index": "D",
            "name": "Hyper String",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 175,
            "index": "E",
            "name": "Power Defence",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2600,
            "tags": [
                "brute force",
                "dp",
                "geometry",
                "greedy"
            ]
        },
        {
            "contestId": 175,
            "index": "D",
            "name": "Plane of Tanks: Duel",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "brute force",
                "dp",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 173,
            "index": "E",
            "name": "Camping Groups",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 173,
            "index": "D",
            "name": "Deputies",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 172,
            "index": "E",
            "name": "BHTML+BCSS",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "*special",
                "dfs and similar",
                "expression parsing"
            ]
        },
        {
            "contestId": 172,
            "index": "D",
            "name": "Calendar Reform",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "*special",
                "number theory"
            ]
        },
        {
            "contestId": 171,
            "index": "E",
            "name": "MYSTERIOUS LANGUAGE",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 171,
            "index": "D",
            "name": "Broken checker",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "*special",
                "brute force"
            ]
        },
        {
            "contestId": 167,
            "index": "E",
            "name": "Wizards and Bets",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "dfs and similar",
                "graphs",
                "math",
                "matrices"
            ]
        },
        {
            "contestId": 167,
            "index": "D",
            "name": "Wizards and Roads",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3000,
            "tags": [
                "data structures",
                "divide and conquer",
                "graph matchings",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 166,
            "index": "E",
            "name": "Tetrahedron",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "dp",
                "math",
                "matrices"
            ]
        },
        {
            "contestId": 166,
            "index": "D",
            "name": "Shoe Store",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2500,
            "tags": [
                "dp",
                "graph matchings",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 165,
            "index": "E",
            "name": "Compatible Numbers",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "brute force",
                "dfs and similar",
                "dp"
            ]
        },
        {
            "contestId": 165,
            "index": "D",
            "name": "Beard Graph",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures",
                "dsu",
                "trees"
            ]
        },
        {
            "contestId": 164,
            "index": "E",
            "name": "Polycarpus and Tasks",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": []
        },
        {
            "contestId": 164,
            "index": "D",
            "name": "Minimum Diameter",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3100,
            "tags": [
                "binary search",
                "brute force"
            ]
        },
        {
            "contestId": 163,
            "index": "E",
            "name": "e-Government",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "data structures",
                "dfs and similar",
                "dp",
                "strings",
                "trees"
            ]
        },
        {
            "contestId": 163,
            "index": "D",
            "name": "Large Refrigerator",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2900,
            "tags": [
                "brute force"
            ]
        },
        {
            "contestId": 162,
            "index": "E",
            "name": "HQ9+",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 162,
            "index": "D",
            "name": "Remove digits",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 161,
            "index": "E",
            "name": "Polycarpus the Safecracker",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "brute force",
                "dp"
            ]
        },
        {
            "contestId": 161,
            "index": "D",
            "name": "Distance in Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 160,
            "index": "E",
            "name": "Buses and People",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "binary search",
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 160,
            "index": "D",
            "name": "Edges in MST",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "sortings"
            ]
        },
        {
            "contestId": 159,
            "index": "E",
            "name": "Zebra Tower",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1700,
            "tags": [
                "*special",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 159,
            "index": "D",
            "name": "Palindrome pairs",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1500,
            "tags": [
                "*special",
                "brute force",
                "dp",
                "strings"
            ]
        },
        {
            "contestId": 158,
            "index": "E",
            "name": "Phone Talks",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "*special",
                "dp",
                "sortings"
            ]
        },
        {
            "contestId": 158,
            "index": "D",
            "name": "Ice Sculptures",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "*special",
                "brute force",
                "number theory"
            ]
        },
        {
            "contestId": 156,
            "index": "E",
            "name": "Mrs. Hudson's Pancakes",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "brute force",
                "dp"
            ]
        },
        {
            "contestId": 156,
            "index": "D",
            "name": "Clues",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "combinatorics",
                "graphs"
            ]
        },
        {
            "contestId": 154,
            "index": "E",
            "name": "Martian Colony",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 154,
            "index": "D",
            "name": "Flatland Fencing",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "games",
                "math"
            ]
        },
        {
            "contestId": 153,
            "index": "E",
            "name": "Euclidean Distance",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 153,
            "index": "D",
            "name": "Date Change",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 152,
            "index": "E",
            "name": "Garden",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "bitmasks",
                "dp",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 152,
            "index": "D",
            "name": "Frames",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "brute force"
            ]
        },
        {
            "contestId": 150,
            "index": "E",
            "name": "Freezing with Style",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3000,
            "tags": [
                "binary search",
                "data structures",
                "divide and conquer",
                "trees"
            ]
        },
        {
            "contestId": 150,
            "index": "D",
            "name": "Mission Impassable",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2600,
            "tags": [
                "dp",
                "strings"
            ]
        },
        {
            "contestId": 149,
            "index": "E",
            "name": "Martian Strings",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "string suffix structures",
                "strings"
            ]
        },
        {
            "contestId": 149,
            "index": "D",
            "name": "Coloring Brackets",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1900,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 148,
            "index": "E",
            "name": "Porcelain",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1900,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 148,
            "index": "D",
            "name": "Bag of mice",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1800,
            "tags": [
                "dp",
                "games",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 145,
            "index": "E",
            "name": "Lucky Queries",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 145,
            "index": "D",
            "name": "Lucky Pair",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "combinatorics",
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 144,
            "index": "E",
            "name": "Competition",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 144,
            "index": "D",
            "name": "Missile Silos",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "data structures",
                "dfs and similar",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 142,
            "index": "E",
            "name": "Help Greg the Dwarf 2",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 142,
            "index": "D",
            "name": "Help Shrek and Donkey 2",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "games"
            ]
        },
        {
            "contestId": 141,
            "index": "E",
            "name": "Clearing Up",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "dp",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 141,
            "index": "D",
            "name": "Take-off Ramps",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 140,
            "index": "E",
            "name": "New Year Garland",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        {
            "contestId": 140,
            "index": "D",
            "name": "New Year Contest",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 138,
            "index": "E",
            "name": "Hellish Constraints",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "brute force",
                "dp",
                "two pointers"
            ]
        },
        {
            "contestId": 138,
            "index": "D",
            "name": "World of Darkraft",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "dp",
                "games"
            ]
        },
        {
            "contestId": 137,
            "index": "E",
            "name": "Last Chance",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "data structures",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 137,
            "index": "D",
            "name": "Palindromes",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dp",
                "strings"
            ]
        },
        {
            "contestId": 135,
            "index": "E",
            "name": "Weak Subsequence",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "combinatorics"
            ]
        },
        {
            "contestId": 135,
            "index": "D",
            "name": "Cycle",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "brute force",
                "dfs and similar",
                "implementation"
            ]
        },
        {
            "contestId": 132,
            "index": "E",
            "name": "Bits of merry old England",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "flows",
                "graphs"
            ]
        },
        {
            "contestId": 132,
            "index": "D",
            "name": "Constants in the language of Shakespeare",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 131,
            "index": "E",
            "name": "Yet Another Task with Queens",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1700,
            "tags": [
                "sortings"
            ]
        },
        {
            "contestId": 131,
            "index": "D",
            "name": "Subway",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1600,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 130,
            "index": "E",
            "name": "Tribonacci numbers",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 130,
            "index": "D",
            "name": "Exponentiation",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "*special"
            ]
        },
        {
            "contestId": 128,
            "index": "E",
            "name": "Birthday",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "geometry",
                "math"
            ]
        },
        {
            "contestId": 128,
            "index": "D",
            "name": "Numbers",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 126,
            "index": "E",
            "name": "Pills",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "brute force",
                "flows"
            ]
        },
        {
            "contestId": 126,
            "index": "D",
            "name": "Fibonacci Sums",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "dp",
                "math"
            ]
        },
        {
            "contestId": 125,
            "index": "E",
            "name": "MST Company",
            "type": "PROGRAMMING",
            "points": 5000,
            "rating": 2400,
            "tags": [
                "binary search",
                "graphs"
            ]
        },
        {
            "contestId": 125,
            "index": "D",
            "name": "Two progressions",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 123,
            "index": "E",
            "name": "Maze",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "dfs and similar",
                "dp",
                "probabilities",
                "trees"
            ]
        },
        {
            "contestId": 123,
            "index": "D",
            "name": "String",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "string suffix structures"
            ]
        },
        {
            "contestId": 121,
            "index": "E",
            "name": "Lucky Array",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 121,
            "index": "D",
            "name": "Lucky Segments",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "binary search",
                "implementation",
                "two pointers"
            ]
        },
        {
            "contestId": 120,
            "index": "E",
            "name": "Put Knight!",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "games",
                "math"
            ]
        },
        {
            "contestId": 120,
            "index": "D",
            "name": "Three Sons",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "brute force"
            ]
        },
        {
            "contestId": 119,
            "index": "E",
            "name": "Alternative Reality",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 119,
            "index": "D",
            "name": "String Transformation",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 118,
            "index": "E",
            "name": "Bertown roads",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 118,
            "index": "D",
            "name": "Caesar's Legions",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 117,
            "index": "E",
            "name": "Tree or not Tree",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "data structures",
                "divide and conquer",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 117,
            "index": "D",
            "name": "Not Quick Transformation",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "divide and conquer",
                "math"
            ]
        },
        {
            "contestId": 115,
            "index": "E",
            "name": "Linear Kingdom Races",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 115,
            "index": "D",
            "name": "Unambiguous Arithmetic Expression",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "dp",
                "expression parsing"
            ]
        },
        {
            "contestId": 113,
            "index": "E",
            "name": "Sleeping",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "combinatorics",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 113,
            "index": "D",
            "name": "Museum",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "math",
                "matrices",
                "probabilities"
            ]
        },
        {
            "contestId": 111,
            "index": "E",
            "name": "Petya and Rectangle",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": []
        },
        {
            "contestId": 111,
            "index": "D",
            "name": "Petya and Coloring",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        {
            "contestId": 109,
            "index": "E",
            "name": "Lucky Interval",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "brute force",
                "math"
            ]
        },
        {
            "contestId": 109,
            "index": "D",
            "name": "Lucky Sorting",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 107,
            "index": "E",
            "name": "Darts",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "geometry",
                "probabilities"
            ]
        },
        {
            "contestId": 107,
            "index": "D",
            "name": "Crime Management",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "dp",
                "graphs",
                "matrices"
            ]
        },
        {
            "contestId": 106,
            "index": "E",
            "name": "Space Rescuers",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "geometry",
                "ternary search"
            ]
        },
        {
            "contestId": 106,
            "index": "D",
            "name": "Treasure Island",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        {
            "contestId": 105,
            "index": "E",
            "name": "Lift and Throw",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "brute force"
            ]
        },
        {
            "contestId": 105,
            "index": "D",
            "name": "Entertaining Geodetics",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "brute force",
                "dsu",
                "implementation"
            ]
        },
        {
            "contestId": 103,
            "index": "E",
            "name": "Buying Sets",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "flows",
                "graph matchings"
            ]
        },
        {
            "contestId": 103,
            "index": "D",
            "name": "Time to Raid Cowavans",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "brute force",
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 101,
            "index": "E",
            "name": "Candies and Stones",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "divide and conquer",
                "dp"
            ]
        },
        {
            "contestId": 101,
            "index": "D",
            "name": "Castle",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "dp",
                "greedy",
                "probabilities",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 100,
            "index": "E",
            "name": "Lamps in a Line",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "*special",
                "math"
            ]
        },
        {
            "contestId": 100,
            "index": "D",
            "name": "World of Mouth",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "*special",
                "strings"
            ]
        },
        {
            "contestId": 98,
            "index": "E",
            "name": "Help Shrek and Donkey",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "dp",
                "games",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 98,
            "index": "D",
            "name": "Help Monks",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 97,
            "index": "E",
            "name": "Leaders",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 97,
            "index": "D",
            "name": "Robot in Basement",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "bitmasks",
                "brute force",
                "implementation"
            ]
        },
        {
            "contestId": 95,
            "index": "E",
            "name": "Lucky Country",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "dp",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 95,
            "index": "D",
            "name": "Horse Races",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "dp",
                "math"
            ]
        },
        {
            "contestId": 93,
            "index": "E",
            "name": "Lostborn",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 93,
            "index": "D",
            "name": "Flags",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "dp",
                "math",
                "matrices"
            ]
        },
        {
            "contestId": 91,
            "index": "E",
            "name": "Igloo Skyscraper",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "data structures",
                "geometry"
            ]
        },
        {
            "contestId": 91,
            "index": "D",
            "name": "Grocer's Problem",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 89,
            "index": "E",
            "name": "Fire and Ice",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "greedy"
            ]
        },
        {
            "contestId": 89,
            "index": "D",
            "name": "Space mines",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2500,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 87,
            "index": "E",
            "name": "Mogohu-Rea Idol",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 87,
            "index": "D",
            "name": "Beautiful Road",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "dfs and similar",
                "dp",
                "dsu",
                "graphs",
                "implementation",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 86,
            "index": "E",
            "name": "Long sequence",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "brute force",
                "math",
                "matrices"
            ]
        },
        {
            "contestId": 86,
            "index": "D",
            "name": "Powerful array",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "data structures",
                "implementation",
                "math",
                "two pointers"
            ]
        },
        {
            "contestId": 85,
            "index": "E",
            "name": "Guard Towers",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "binary search",
                "dsu",
                "geometry",
                "graphs",
                "sortings"
            ]
        },
        {
            "contestId": 85,
            "index": "D",
            "name": "Sum of Medians",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 83,
            "index": "E",
            "name": "Two Subsequences",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        {
            "contestId": 83,
            "index": "D",
            "name": "Numbers",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 82,
            "index": "E",
            "name": "Corridor",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 82,
            "index": "D",
            "name": "Two out of Three",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 81,
            "index": "E",
            "name": "Pairs",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "dfs and similar",
                "dp",
                "dsu",
                "graphs",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 81,
            "index": "D",
            "name": "Polycarp's Picture Gallery",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 79,
            "index": "E",
            "name": "Security System",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 79,
            "index": "D",
            "name": "Password",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2800,
            "tags": [
                "bitmasks",
                "dp",
                "shortest paths"
            ]
        },
        {
            "contestId": 78,
            "index": "E",
            "name": "Evacuation",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "flows",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 78,
            "index": "D",
            "name": "Archer's Shot",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "binary search",
                "geometry",
                "math",
                "two pointers"
            ]
        },
        {
            "contestId": 77,
            "index": "E",
            "name": "Martian Food",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2800,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 77,
            "index": "D",
            "name": "Domino Carpet",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 76,
            "index": "E",
            "name": "Points",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 76,
            "index": "D",
            "name": "Plus and xor",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "dp",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 75,
            "index": "E",
            "name": "Ship's Shortest Path",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "geometry",
                "shortest paths"
            ]
        },
        {
            "contestId": 75,
            "index": "D",
            "name": "Big Maximum Sum",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "implementation",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 74,
            "index": "E",
            "name": "Shift It!",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 74,
            "index": "D",
            "name": "Hanger",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 73,
            "index": "E",
            "name": "Morrowindows",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2400,
            "tags": [
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 73,
            "index": "D",
            "name": "FreeDiv",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 72,
            "index": "E",
            "name": "Ali goes shopping",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "*special",
                "brute force",
                "strings"
            ]
        },
        {
            "contestId": 72,
            "index": "D",
            "name": "Perse-script",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "*special",
                "expression parsing"
            ]
        },
        {
            "contestId": 71,
            "index": "E",
            "name": "Nuclear Fusion",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        {
            "contestId": 71,
            "index": "D",
            "name": "Solitaire",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        {
            "contestId": 70,
            "index": "E",
            "name": "Information Reform",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "dp",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 70,
            "index": "D",
            "name": "Professor's task",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2700,
            "tags": [
                "data structures",
                "geometry"
            ]
        },
        {
            "contestId": 69,
            "index": "E",
            "name": "Subsegments",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1800,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 69,
            "index": "D",
            "name": "Dot",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dp",
                "games"
            ]
        },
        {
            "contestId": 68,
            "index": "E",
            "name": "Contact",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 68,
            "index": "D",
            "name": "Half-decay tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "data structures",
                "divide and conquer",
                "dp",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 67,
            "index": "E",
            "name": "Save the City!",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 67,
            "index": "D",
            "name": "Optical Experiment",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "binary search",
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 66,
            "index": "E",
            "name": "Petya and Post",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 66,
            "index": "D",
            "name": "Petya and His Friends",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 65,
            "index": "E",
            "name": "Harry Potter and Moving Staircases",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2900,
            "tags": [
                "dfs and similar",
                "implementation"
            ]
        },
        {
            "contestId": 65,
            "index": "D",
            "name": "Harry Potter and the Sorting Hat",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "brute force",
                "dfs and similar",
                "hashing"
            ]
        },
        {
            "contestId": 64,
            "index": "E",
            "name": "Prime Segment",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "*special",
                "brute force"
            ]
        },
        {
            "contestId": 64,
            "index": "D",
            "name": "Presents",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "*special",
                "greedy"
            ]
        },
        {
            "contestId": 63,
            "index": "E",
            "name": "Sweets Game",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "dfs and similar",
                "dp",
                "games",
                "implementation"
            ]
        },
        {
            "contestId": 63,
            "index": "D",
            "name": "Dividing Island",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 62,
            "index": "E",
            "name": "World Evil",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "dp",
                "flows"
            ]
        },
        {
            "contestId": 62,
            "index": "D",
            "name": "Wormhouse",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 61,
            "index": "E",
            "name": "Enemy is weak",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1900,
            "tags": [
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 61,
            "index": "D",
            "name": "Eternal Victory",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "dfs and similar",
                "graphs",
                "greedy",
                "shortest paths",
                "trees"
            ]
        },
        {
            "contestId": 60,
            "index": "E",
            "name": "Mushroom Gnomes",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "math",
                "matrices"
            ]
        },
        {
            "contestId": 60,
            "index": "D",
            "name": "Savior",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "brute force",
                "dsu",
                "math"
            ]
        },
        {
            "contestId": 59,
            "index": "E",
            "name": "Shortest Path",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 59,
            "index": "D",
            "name": "Team Arrangement",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 58,
            "index": "E",
            "name": "Expression",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 58,
            "index": "D",
            "name": "Calendar",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 57,
            "index": "E",
            "name": "Chess",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3000,
            "tags": [
                "math",
                "shortest paths"
            ]
        },
        {
            "contestId": 57,
            "index": "D",
            "name": "Journey",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "dp",
                "math"
            ]
        },
        {
            "contestId": 56,
            "index": "E",
            "name": "Domino Principle",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "binary search",
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 56,
            "index": "D",
            "name": "Changing a String",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 55,
            "index": "E",
            "name": "Very simple problem",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "geometry",
                "two pointers"
            ]
        },
        {
            "contestId": 55,
            "index": "D",
            "name": "Beautiful numbers",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "dp",
                "number theory"
            ]
        },
        {
            "contestId": 54,
            "index": "E",
            "name": "Vacuum Сleaner",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "geometry"
            ]
        },
        {
            "contestId": 54,
            "index": "D",
            "name": "Writing a Song",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "brute force",
                "dp",
                "strings"
            ]
        },
        {
            "contestId": 53,
            "index": "E",
            "name": "Dead Ends",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        {
            "contestId": 53,
            "index": "D",
            "name": "Physical Education",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1500,
            "tags": [
                "sortings"
            ]
        },
        {
            "contestId": 51,
            "index": "E",
            "name": "Pentagon",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "combinatorics",
                "graphs",
                "matrices"
            ]
        },
        {
            "contestId": 51,
            "index": "D",
            "name": "Geometrical problem",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "implementation"
            ]
        },
        {
            "contestId": 50,
            "index": "E",
            "name": "Square Equation Roots",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 50,
            "index": "D",
            "name": "Bombing",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "dp",
                "probabilities"
            ]
        },
        {
            "contestId": 49,
            "index": "E",
            "name": "Common ancestor",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 49,
            "index": "D",
            "name": "Game",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "brute force",
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 48,
            "index": "E",
            "name": "Ivan the Fool VS Gorynych the Dragon",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dp",
                "games",
                "graphs"
            ]
        },
        {
            "contestId": 48,
            "index": "D",
            "name": "Permutations",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy"
            ]
        },
        {
            "contestId": 47,
            "index": "E",
            "name": "Cannon",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "data structures",
                "geometry",
                "sortings"
            ]
        },
        {
            "contestId": 47,
            "index": "D",
            "name": "Safe",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "brute force"
            ]
        },
        {
            "contestId": 46,
            "index": "E",
            "name": "Comb",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 46,
            "index": "D",
            "name": "Parking Lot",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 45,
            "index": "E",
            "name": "Director",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 45,
            "index": "D",
            "name": "Event Dates",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "greedy",
                "meet-in-the-middle",
                "sortings"
            ]
        },
        {
            "contestId": 44,
            "index": "E",
            "name": "Anfisa the Monkey",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 44,
            "index": "D",
            "name": "Hyperdrive",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 43,
            "index": "E",
            "name": "Race",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "brute force",
                "implementation",
                "two pointers"
            ]
        },
        {
            "contestId": 43,
            "index": "D",
            "name": "Journey",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 42,
            "index": "E",
            "name": "Baldman and the military",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 42,
            "index": "D",
            "name": "Strange town",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 41,
            "index": "E",
            "name": "3-cycles",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 41,
            "index": "D",
            "name": "Pawn",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 40,
            "index": "E",
            "name": "Number Table",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "combinatorics"
            ]
        },
        {
            "contestId": 40,
            "index": "D",
            "name": "Interesting Sequence",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 39,
            "index": "E",
            "name": "What Has Dirichlet Got to Do with That?",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "dp",
                "games"
            ]
        },
        {
            "contestId": 39,
            "index": "D",
            "name": "Cubical Planet",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        {
            "contestId": 38,
            "index": "E",
            "name": "Let's Go Rolling!",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "dp",
                "sortings"
            ]
        },
        {
            "contestId": 38,
            "index": "D",
            "name": "Vasya the Architect",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "implementation"
            ]
        },
        {
            "contestId": 37,
            "index": "E",
            "name": "Trial for Chief",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        {
            "contestId": 37,
            "index": "D",
            "name": "Lesson Timetable",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 36,
            "index": "E",
            "name": "Two Paths",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "dsu",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 36,
            "index": "D",
            "name": "New Game with a Chess Piece",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "games"
            ]
        },
        {
            "contestId": 35,
            "index": "E",
            "name": "Parade",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 35,
            "index": "D",
            "name": "Animals",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 34,
            "index": "E",
            "name": "Collisions",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 34,
            "index": "D",
            "name": "Road Map",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1600,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 33,
            "index": "E",
            "name": "Helper",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": []
        },
        {
            "contestId": 33,
            "index": "D",
            "name": "Knights",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "geometry",
                "graphs",
                "shortest paths",
                "sortings"
            ]
        },
        {
            "contestId": 32,
            "index": "E",
            "name": "Hide-and-Seek",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "geometry",
                "implementation"
            ]
        },
        {
            "contestId": 32,
            "index": "D",
            "name": "Constellation",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1600,
            "tags": [
                "implementation"
            ]
        },
        {
            "contestId": 31,
            "index": "E",
            "name": "TV Game",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 31,
            "index": "D",
            "name": "Chocolate",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "implementation"
            ]
        },
        {
            "contestId": 30,
            "index": "E",
            "name": "Tricky and Clever Password",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy",
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 30,
            "index": "D",
            "name": "King's Problem?",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2600,
            "tags": [
                "geometry",
                "greedy"
            ]
        },
        {
            "contestId": 29,
            "index": "E",
            "name": "Quarrel",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 29,
            "index": "D",
            "name": "Ant on the Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "trees"
            ]
        },
        {
            "contestId": 28,
            "index": "E",
            "name": "DravDe saves the world",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2800,
            "tags": [
                "geometry",
                "math"
            ]
        },
        {
            "contestId": 28,
            "index": "D",
            "name": "Don't fear, DravDe is kind",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "hashing"
            ]
        },
        {
            "contestId": 27,
            "index": "E",
            "name": "Number With The Given Amount Of Divisors",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "brute force",
                "dp",
                "number theory"
            ]
        },
        {
            "contestId": 27,
            "index": "D",
            "name": "Ring Road 2",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "2-sat",
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 26,
            "index": "E",
            "name": "Multithreading",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 26,
            "index": "D",
            "name": "Tickets",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "combinatorics",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 25,
            "index": "E",
            "name": "Test",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 25,
            "index": "D",
            "name": "Roads not only in Berland",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "dsu",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 24,
            "index": "E",
            "name": "Berland collider",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "binary search"
            ]
        },
        {
            "contestId": 24,
            "index": "D",
            "name": "Broken robot",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "dp",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 23,
            "index": "E",
            "name": "Tree",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 23,
            "index": "D",
            "name": "Tetragon",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "geometry",
                "math"
            ]
        },
        {
            "contestId": 22,
            "index": "E",
            "name": "Scheme",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 22,
            "index": "D",
            "name": "Segments",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 21,
            "index": "D",
            "name": "Traveling Graph",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "bitmasks",
                "graph matchings",
                "graphs"
            ]
        },
        {
            "contestId": 19,
            "index": "E",
            "name": "Fairy",
            "type": "PROGRAMMING",
            "rating": 2900,
            "tags": [
                "dfs and similar",
                "divide and conquer",
                "dsu"
            ]
        },
        {
            "contestId": 19,
            "index": "D",
            "name": "Points",
            "type": "PROGRAMMING",
            "rating": 2800,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 18,
            "index": "E",
            "name": "Flag 2",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 18,
            "index": "D",
            "name": "Seller Bob",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "brute force",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 17,
            "index": "E",
            "name": "Palisection",
            "type": "PROGRAMMING",
            "rating": 2900,
            "tags": [
                "strings"
            ]
        },
        {
            "contestId": 17,
            "index": "D",
            "name": "Notepad",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "number theory"
            ]
        },
        {
            "contestId": 16,
            "index": "E",
            "name": "Fish",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "bitmasks",
                "dp",
                "probabilities"
            ]
        },
        {
            "contestId": 16,
            "index": "D",
            "name": "Logging",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 15,
            "index": "E",
            "name": "Triangles",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        {
            "contestId": 15,
            "index": "D",
            "name": "Map",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "data structures",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 14,
            "index": "E",
            "name": "Camels",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 14,
            "index": "D",
            "name": "Two Paths",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "shortest paths",
                "trees",
                "two pointers"
            ]
        },
        {
            "contestId": 13,
            "index": "E",
            "name": "Holes",
            "type": "PROGRAMMING",
            "rating": 2700,
            "tags": [
                "data structures",
                "dsu"
            ]
        },
        {
            "contestId": 13,
            "index": "D",
            "name": "Triangles",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "dp",
                "geometry"
            ]
        },
        {
            "contestId": 12,
            "index": "E",
            "name": "Start of the session",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 12,
            "index": "D",
            "name": "Ball",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 11,
            "index": "E",
            "name": "Forward, march!",
            "type": "PROGRAMMING",
            "rating": 2800,
            "tags": [
                "binary search",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 11,
            "index": "D",
            "name": "A Simple Task",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "bitmasks",
                "dp",
                "graphs"
            ]
        },
        {
            "contestId": 10,
            "index": "E",
            "name": "Greedy Change",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 10,
            "index": "D",
            "name": "LCIS",
            "type": "PROGRAMMING",
            "rating": 2800,
            "tags": [
                "dp"
            ]
        },
        {
            "contestId": 9,
            "index": "E",
            "name": "Interestring graph and Apples",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 9,
            "index": "D",
            "name": "How many trees?",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "combinatorics",
                "divide and conquer",
                "dp"
            ]
        },
        {
            "contestId": 8,
            "index": "E",
            "name": "Beads",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "dp",
                "graphs"
            ]
        },
        {
            "contestId": 8,
            "index": "D",
            "name": "Two Friends",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "binary search",
                "geometry"
            ]
        },
        {
            "contestId": 7,
            "index": "E",
            "name": "Defining Macros",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "dp",
                "expression parsing",
                "implementation"
            ]
        },
        {
            "contestId": 7,
            "index": "D",
            "name": "Palindrome Degree",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 6,
            "index": "E",
            "name": "Exposition",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "data structures",
                "dsu",
                "trees",
                "two pointers"
            ]
        },
        {
            "contestId": 6,
            "index": "D",
            "name": "Lizards and Basements 2",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "brute force",
                "dp"
            ]
        },
        {
            "contestId": 5,
            "index": "E",
            "name": "Bindian Signalizing",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "data structures"
            ]
        },
        {
            "contestId": 5,
            "index": "D",
            "name": "Follow Traffic Rules",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 4,
            "index": "D",
            "name": "Mysterious Present",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "dp",
                "sortings"
            ]
        },
        {
            "contestId": 3,
            "index": "D",
            "name": "Least Cost Bracket Sequence",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "greedy"
            ]
        }
    ]
}